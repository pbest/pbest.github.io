{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap 535db6ad09fa41c4e5c3","webpack:///./~/plyr/src/js/plyr.js","webpack:///./src/static/js/components/detectTouch.js","webpack:///./src/static/js/components/homepage.js","webpack:///./src/static/js/components/mobileNav.js","webpack:///./src/static/js/utilities/time.js","webpack:///./src/static/js/waypoints.js","webpack:///./src/static/js/app.js","webpack:///./~/device.js/dist/device.es.js","webpack:///./~/waypoints/lib/noframework.waypoints.js","webpack:///(webpack)/buildin/global.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","root","factory","document","undefined","apply","window","this","_browserSniff","nameOffset","verOffset","ix","ua","navigator","userAgent","appName","fullVersion","parseFloat","appVersion","majorVersion","parseInt","isIE","isFirefox","isChrome","isSafari","indexOf","substring","lastIndexOf","toLowerCase","toUpperCase","isNaN","version","isIos","test","platform","isIphone","isTouch","documentElement","_supportMime","plyr","mimeType","media","type","canPlayType","replace","_injectScript","source","querySelectorAll","length","tag","createElement","src","firstScriptTag","getElementsByTagName","parentNode","insertBefore","_inArray","haystack","needle","Array","_replaceAll","string","find","RegExp","_wrap","elements","wrapper","child","cloneNode","element","parent","sibling","nextSibling","appendChild","_remove","removeChild","_prependChild","firstChild","_setAttributes","attributes","key","setAttribute","_is","boolean","_insertElement","_getClassname","selector","_toggleClass","className","state","classList","_hasClass","contains","_matches","Element","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","_proxyListener","eventName","userListener","defaultListener","useCapture","_on","event","_toggleListener","events","callback","toggle","eventList","split","NodeList","x","Node","arguments","_event","bubbles","properties","CustomEvent","detail","dispatchEvent","_toggleState","target","getAttribute","_getPercentage","current","max","toFixed","_extend","objects","destination","shift","constructor","_parseYouTubeId","url","regex","match","$2","_parseVimeoId","_fullscreen","fullscreen","supportsFullScreen","isFullScreen","requestFullScreen","cancelFullScreen","fullScreenEventName","prefix","browserPrefixes","il","msExitFullscreen","msFullscreenEnabled","body","fullscreenElement","mozFullScreenElement","Plyr","config","_triggerEvent","api","_console","args","debug","console","slice","logPrefix","unshift","_getIconUrl","iconUrl","absolute","browser","_buildControls","html","iconPath","iconPrefix","controls","push","i18n","play","restart","rewind","pause","forward","buffered","tooltips","seek","currentTime","duration","toggleMute","volume","volumeMin","volumeMax","toggleCaptions","toggleFullscreen","join","_setupFullscreen","supported","full","allowAudio","enabled","nativeSupport","fallback","_inFrame","_log","container","classes","buttons","_focusTrap","_setupCaptions","_getElement","selectors","captions","videoContainer","insertAdjacentHTML","usingTextTracks","textTracks","kind","captionSrc","children","childNodes","nodeName","captionExists","tracks","mode","_showCaptions","y","track","activeCues","_setCaption","getCueAsHTML","currentCaption","xhr","XMLHttpRequest","onreadystatechange","readyState","status","caption","req","responseText","lineSeparator","r","parts","index","_warn","open","send","content","innerHTML","trim","offsetHeight","_seekManualCaptions","time","_timecodeCommon","tc","pos","tcpair","_subTcSecs","_timecodeMax","tc1","tc2","Math","floor","subcount","number","active","storage","captionsEnabled","defaultActive","_getElements","self","top","e","_checkFocus","which","isFullscreen","last","shiftKey","first","preventDefault","focus","tabbables","_insertChildElements","_injectControls","loadSprite","seekTime","random","querySelector","htmlElement","labels","hidden","label","tooltip","_findElements","mute","progress","buffer","bar","text","played","input","display","_toggleNativeControls","_toggleStyleHook","types","html5","removeAttribute","_setTitle","iframe","title","frameTitle","_setupStorage","_storage","localStorage","removeItem","getItem","_updateStorage","JSON","parse","setItem","stringify","_setupMedia","embed","stopped","autoplay","videoWrapper","_setupEmbed","mediaId","id","embedId","containers","embedWrapper","YT","_youTubeReady","urls","youtube","onYouTubeReadyCallbacks","onYouTubeIframeAPIReady","forEach","Vimeo","_vimeoReady","vimeo","vimeoTimer","setInterval","clearInterval","soundCloud","loaded","SC","soundcloud","soundCloudTimer","_soundcloudReady","_embedReady","_setupInterface","_ready","videoId","Player","playerVars","rel","showinfo","iv_load_policy","cc_load_policy","cc_lang_pref","wmode","modestbranding","disablekb","origin","onError","code","data","onReady","instance","playVideo","paused","pauseVideo","stop","stopVideo","getDuration","muted","isMuted","getVideoData","timers","buffering","getVideoLoadedFraction","lastBuffered","onStateChange","playing","seeking","getCurrentTime","loop","byline","portrait","then","on","seconds","percent","Widget","bind","Events","READY","seekTo","getPosition","PLAY","PAUSE","PLAY_PROGRESS","currentPosition","LOAD_PROGRESS","loadProgress","FINISH","_play","_pause","_togglePlay","_rewind","_seek","_forward","targetTime","_getDuration","_updateSeekDisplay","setCurrentTime","mediaDuration","_checkPlaying","_toggleControls","_saveScrollPosition","scroll","pageXOffset","pageYOffset","_restoreScrollPosition","scrollTo","_toggleFullscreen","style","overflow","_toggleMute","_setVolume","setVolume","min","_increaseVolume","step","volumeStep","_decreaseVolume","_updateVolume","_toggleCaptions","show","_checkLoading","loading","clearTimeout","setTimeout","_updateProgress","pressed","end","_setProgress","_updateTimeDisplay","secs","mins","hours","displayHours","_displayDuration","displayDuration","_updateSeekTooltip","_timeUpdate","clientRect","getBoundingClientRect","visible","width","pageX","left","hideControls","delay","isEnterFullscreen","hover","_source","_updateSource","getVideoUrl","getCurrentSound","permalink_url","currentSrc","setup","firstSource","sources","crossorigin","poster","load","ready","_cancelRequests","_destroy","_updatePoster","_controlListeners","togglePlay","trigger","hadTabFocus","tabFocus","getFocusElement","focused","activeElement","getKeyCode","keyCode","checkTabFocus","button","nodeList","handleKey","held","stopPropagation","inputEvent","keyboardShorcuts","global","allowed","editable","listeners","inverted","webkitDirectionInvertedFromDevice","deltaY","deltaX","_mediaListeners","showPosterOnEnd","clickToPlay","cursor","ended","disableContextMenu","concat","blankUrl","restore","cleanUp","function","original","init","replaceChild","destroy","unload","controlsMissing","defaults","getOriginal","getContainer","getEmbed","getMedia","getType","getVolume","isReady","isLoading","isPaused","toggleControls","support","tagName","basic","onload","isOldIE","audioSupport","videoSupport","targets","options","add","hook","players","instances","array","player","log","Number","String","HTMLElement","result","params","cancelable","evt","createEvent","initCustomEvent","Event","detectTouch","addTouchClass","isTouchTimer","curRootClass","removeTouchClass","remove","addEventListener","default","_plyr","obj","mobileNav","navToggles","nav","overlay","from","formatTime","timeString","secNum","minutes","createWaypoint","offset","direction","Waypoint","handler","el","_interopRequireDefault","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","done","err","isArray","TypeError","_homepage","_mobileNav","_mobileNav2","_detectTouch","_detectTouch2","_plyr2","_time","IntersectionObserver","_ref","_ref2","intersectionRatio","threshold","observe","getElementById","projects","plyrOptions","videoLength","dataset","originalTime","secondsLeft","__webpack_exports__","createCommonjsModule","fn","isObject","getRawTag","isOwn","symToStringTag$1","unmasked","nativeObjectToString","objectToString","nativeObjectToString$1","baseGetTag","undefinedTag","nullTag","symToStringTag","_getRawTag","_objectToString","isObjectLike","isSymbol","isObjectLike_1","_baseGetTag","symbolTag","toNumber","isSymbol_1","NAN","isObject_1","other","valueOf","reTrim","isBinary","reIsBinary","reIsOctal","freeParseInt","reIsBadHex","debounce","func","wait","invokeFunc","lastArgs","thisArg","lastThis","lastInvokeTime","leadingEdge","timerId","timerExpired","leading","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","maxing","nativeMin","maxWait","shouldInvoke","now_1","trailingEdge","trailing","cancel","flush","debounced","isInvoking","FUNC_ERROR_TEXT$1","toNumber_1","nativeMax","throttle","FUNC_ERROR_TEXT","debounce_1","device","commonjsGlobal","hasClass_1","hasClass","addClass_1","addClass","_hasClass2","removeClass","_addClass2","_removeClass2","index_2","index_3","freeGlobal","_freeGlobal","freeSelf","Function","_root","now","Date","_Symbol","objectProto","toString","toStringTag","objectProto$1","throttle_1","documentTimeout","documentCallbacks","stopDocumentTimeout","waitForDocument","getUserAgent","v","staticDevice","Device","this$1","addedClasses","matchCache","featureCache","setUserAgent","prototypeAccessors","features","deviceorientation","ie9","touchDevice","touch","ios","iphone","ipod","ipad","android","androidPhone","androidTablet","blackberry","blackberryPhone","blackberryTablet","windows","ie10","windowsPhone","windowsTablet","fxos","fxosPhone","fxosTablet","meego","cordova","nodeWebkit","mobile","tablet","desktop","television","landscape","staticAccessors","feature","addFeature","onOrientationChange","orientation","getClasses","addClasses","targetNode","commitClasses","addListener","hasListener","handleOrientation","onResize","wheelEvent","onmousewheel","canOrientate","DocumentTouch","msMaxTouchPoints","maxTouchPoints","location","protocol","process","innerHeight","innerWidth","defineProperties","Error","keyCounter","Adapter","extend","adapter","axis","horizontal","triggerPoint","group","Group","findOrCreate","context","Context","findOrCreateByElement","offsetAliases","allWaypoints","queueTrigger","disable","enable","refresh","previous","invokeAll","method","allWaypointsArray","waypointKey","destroyAll","disableAll","enableAll","refreshAll","viewportHeight","clientHeight","viewportWidth","clientWidth","adapters","continuous","bottom-in-view","outerHeight","right-in-view","outerWidth","requestAnimationFrameShim","didScroll","didResize","oldScroll","scrollLeft","scrollTop","waypoints","vertical","waypointContextKey","contexts","windowContext","createThrottledScrollHandler","createThrottledResizeHandler","oldWindowLoad","waypoint","checkEmpty","horizontalEmpty","isEmptyObject","verticalEmpty","isWindow","off","resizeHandler","handleResize","requestAnimationFrame","scrollHandler","handleScroll","triggeredGroups","axes","newScroll","backward","axisKey","isForward","wasBeforeTriggerPoint","nowAfterTriggerPoint","crossedForward","crossedBackward","groupKey","flushTriggers","contextOffset","contextScroll","contextDimension","offsetProp","contextModifier","wasBeforeScroll","nowAfterScroll","triggeredBackward","triggeredForward","adjustment","oldTriggerPoint","elementOffset","freshWaypoint","ceil","findByElement","contextId","mozRequestAnimationFrame","webkitRequestAnimationFrame","byTriggerPoint","a","b","byReverseTriggerPoint","clearTriggerQueues","groups","triggerQueues","up","down","right","reverse","sort","inArray","splice","getWindow","defaultView","NoFrameworkAdapter","handlers","removeListeners","listener","removeEventListener","eventParts","eventType","namespace","ns","ownerDocument","win","rect","clientTop","clientLeft","nsHandlers","includeMargin","computedStyle","height","getComputedStyle","marginTop","marginBottom","marginLeft","marginRight","g","eval"],"mappings":"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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 6);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// ==========================================================================\n// Plyr\n// plyr.js v2.0.13\n// https://github.com/sampotts/plyr\n// License: The MIT License (MIT)\n// ==========================================================================\n// Credits: http://paypal.github.io/accessible-html5-video-player/\n// ==========================================================================\n\n;(function(root, factory) {\n    'use strict';\n    /*global define,module*/\n\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        // Node, CommonJS-like\n        module.exports = factory(root, document);\n    } else if (true) {\n        // AMD\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () { return factory(root, document); }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else {\n        // Browser globals (root is window)\n        root.plyr = factory(root, document);\n    }\n}(typeof window !== 'undefined' ? window : this, function(window, document) {\n    'use strict';\n\n    // Globals\n    var fullscreen,\n    scroll = { x: 0, y: 0 },\n\n    // Default config\n    defaults = {\n        enabled:                true,\n        debug:                  false,\n        autoplay:               false,\n        loop:                   false,\n        seekTime:               10,\n        volume:                 10,\n        volumeMin:              0,\n        volumeMax:              10,\n        volumeStep:             1,\n        duration:               null,\n        displayDuration:        true,\n        loadSprite:             true,\n        iconPrefix:             'plyr',\n        iconUrl:                'https://cdn.plyr.io/2.0.13/plyr.svg',\n        blankUrl:               'https://cdn.selz.com/plyr/blank.mp4',\n        clickToPlay:            true,\n        hideControls:           true,\n        showPosterOnEnd:        false,\n        disableContextMenu:     true,\n        keyboardShorcuts:       {\n            focused:            true,\n            global:             false\n        },\n        tooltips: {\n            controls:           false,\n            seek:               true\n        },\n        selectors: {\n            html5:              'video, audio',\n            embed:              '[data-type]',\n            editable:           'input, textarea, select, [contenteditable]',\n            container:          '.plyr',\n            controls: {\n                container:      null,\n                wrapper:        '.plyr__controls'\n            },\n            labels:             '[data-plyr]',\n            buttons: {\n                seek:           '[data-plyr=\"seek\"]',\n                play:           '[data-plyr=\"play\"]',\n                pause:          '[data-plyr=\"pause\"]',\n                restart:        '[data-plyr=\"restart\"]',\n                rewind:         '[data-plyr=\"rewind\"]',\n                forward:        '[data-plyr=\"fast-forward\"]',\n                mute:           '[data-plyr=\"mute\"]',\n                captions:       '[data-plyr=\"captions\"]',\n                fullscreen:     '[data-plyr=\"fullscreen\"]'\n            },\n            volume: {\n                input:          '[data-plyr=\"volume\"]',\n                display:        '.plyr__volume--display'\n            },\n            progress: {\n                container:      '.plyr__progress',\n                buffer:         '.plyr__progress--buffer',\n                played:         '.plyr__progress--played'\n            },\n            captions:           '.plyr__captions',\n            currentTime:        '.plyr__time--current',\n            duration:           '.plyr__time--duration'\n        },\n        classes: {\n            setup:              'plyr--setup',\n            ready:              'plyr--ready',\n            videoWrapper:       'plyr__video-wrapper',\n            embedWrapper:       'plyr__video-embed',\n            type:               'plyr--{0}',\n            stopped:            'plyr--stopped',\n            playing:            'plyr--playing',\n            muted:              'plyr--muted',\n            loading:            'plyr--loading',\n            hover:              'plyr--hover',\n            tooltip:            'plyr__tooltip',\n            hidden:             'plyr__sr-only',\n            hideControls:       'plyr--hide-controls',\n            isIos:              'plyr--is-ios',\n            isTouch:            'plyr--is-touch',\n            captions: {\n                enabled:        'plyr--captions-enabled',\n                active:         'plyr--captions-active'\n            },\n            fullscreen: {\n                enabled:        'plyr--fullscreen-enabled',\n                active:         'plyr--fullscreen-active'\n            },\n            tabFocus:           'tab-focus'\n        },\n        captions: {\n            defaultActive:      false\n        },\n        fullscreen: {\n            enabled:            true,\n            fallback:           true,\n            allowAudio:         false\n        },\n        storage: {\n            enabled:            true,\n            key:                'plyr'\n        },\n        controls:               ['play-large', 'play', 'progress', 'current-time', 'mute', 'volume', 'captions', 'fullscreen'],\n        i18n: {\n            restart:            'Restart',\n            rewind:             'Rewind {seektime} secs',\n            play:               'Play',\n            pause:              'Pause',\n            forward:            'Forward {seektime} secs',\n            played:             'played',\n            buffered:           'buffered',\n            currentTime:        'Current time',\n            duration:           'Duration',\n            volume:             'Volume',\n            toggleMute:         'Toggle Mute',\n            toggleCaptions:     'Toggle Captions',\n            toggleFullscreen:   'Toggle Fullscreen',\n            frameTitle:         'Player for {title}'\n        },\n        types: {\n            embed:              ['youtube', 'vimeo', 'soundcloud'],\n            html5:              ['video', 'audio']\n        },\n        // URLs\n        urls: {\n            vimeo: {\n                api:            'https://player.vimeo.com/api/player.js',\n            },\n            youtube: {\n                api:            'https://www.youtube.com/iframe_api'\n            },\n            soundcloud: {\n                api:            'https://w.soundcloud.com/player/api.js'\n            }\n        },\n        // Custom control listeners\n        listeners: {\n            seek:               null,\n            play:               null,\n            pause:              null,\n            restart:            null,\n            rewind:             null,\n            forward:            null,\n            mute:               null,\n            volume:             null,\n            captions:           null,\n            fullscreen:         null\n        },\n        // Events to watch on HTML5 media elements\n        events:                 ['ready', 'ended', 'progress', 'stalled', 'playing', 'waiting', 'canplay', 'canplaythrough', 'loadstart', 'loadeddata', 'loadedmetadata', 'timeupdate', 'volumechange', 'play', 'pause', 'error', 'seeking', 'seeked', 'emptied'],\n        // Logging\n        logPrefix:              '[Plyr]'\n    };\n\n    // Credits: http://paypal.github.io/accessible-html5-video-player/\n    // Unfortunately, due to mixed support, UA sniffing is required\n    function _browserSniff() {\n        var ua = navigator.userAgent,\n            name = navigator.appName,\n            fullVersion = '' + parseFloat(navigator.appVersion),\n            majorVersion = parseInt(navigator.appVersion, 10),\n            nameOffset,\n            verOffset,\n            ix,\n            isIE = false,\n            isFirefox = false,\n            isChrome = false,\n            isSafari = false;\n\n        if ((navigator.appVersion.indexOf('Windows NT') !== -1) && (navigator.appVersion.indexOf('rv:11') !== -1)) {\n            // MSIE 11\n            isIE = true;\n            name = 'IE';\n            fullVersion = '11';\n        } else if ((verOffset = ua.indexOf('MSIE')) !== -1) {\n            // MSIE\n            isIE = true;\n            name = 'IE';\n            fullVersion = ua.substring(verOffset + 5);\n        } else if ((verOffset = ua.indexOf('Chrome')) !== -1) {\n            // Chrome\n            isChrome = true;\n            name = 'Chrome';\n            fullVersion = ua.substring(verOffset + 7);\n        } else if ((verOffset = ua.indexOf('Safari')) !== -1) {\n            // Safari\n            isSafari = true;\n            name = 'Safari';\n            fullVersion = ua.substring(verOffset + 7);\n            if ((verOffset = ua.indexOf('Version')) !== -1) {\n                fullVersion = ua.substring(verOffset + 8);\n            }\n        } else if ((verOffset = ua.indexOf('Firefox')) !== -1) {\n            // Firefox\n            isFirefox = true;\n            name = 'Firefox';\n            fullVersion = ua.substring(verOffset + 8);\n        } else if ((nameOffset = ua.lastIndexOf(' ') + 1) < (verOffset = ua.lastIndexOf('/'))) {\n            // In most other browsers, 'name/version' is at the end of userAgent\n            name = ua.substring(nameOffset,verOffset);\n            fullVersion = ua.substring(verOffset + 1);\n\n            if (name.toLowerCase() === name.toUpperCase()) {\n                name = navigator.appName;\n            }\n        }\n\n        // Trim the fullVersion string at semicolon/space if present\n        if ((ix = fullVersion.indexOf(';')) !== -1) {\n            fullVersion = fullVersion.substring(0, ix);\n        }\n        if ((ix = fullVersion.indexOf(' ')) !== -1) {\n            fullVersion = fullVersion.substring(0, ix);\n        }\n\n        // Get major version\n        majorVersion = parseInt('' + fullVersion, 10);\n        if (isNaN(majorVersion)) {\n            fullVersion = '' + parseFloat(navigator.appVersion);\n            majorVersion = parseInt(navigator.appVersion, 10);\n        }\n\n        // Return data\n        return {\n            name:       name,\n            version:    majorVersion,\n            isIE:       isIE,\n            isFirefox:  isFirefox,\n            isChrome:   isChrome,\n            isSafari:   isSafari,\n            isIos:      /(iPad|iPhone|iPod)/g.test(navigator.platform),\n            isIphone:   /(iPhone|iPod)/g.test(navigator.userAgent),\n            isTouch:    'ontouchstart' in document.documentElement\n        };\n    }\n\n    // Check for mime type support against a player instance\n    // Credits: http://diveintohtml5.info/everything.html\n    // Related: http://www.leanbackplyr.com/test/h5mt.html\n    function _supportMime(plyr, mimeType) {\n        var media = plyr.media;\n\n        if (plyr.type === 'video') {\n            // Check type\n            switch (mimeType) {\n                case 'video/webm':   return !!(media.canPlayType && media.canPlayType('video/webm; codecs=\"vp8, vorbis\"').replace(/no/, ''));\n                case 'video/mp4':    return !!(media.canPlayType && media.canPlayType('video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"').replace(/no/, ''));\n                case 'video/ogg':    return !!(media.canPlayType && media.canPlayType('video/ogg; codecs=\"theora\"').replace(/no/, ''));\n            }\n        } else if (plyr.type === 'audio') {\n            // Check type\n            switch (mimeType) {\n                case 'audio/mpeg':   return !!(media.canPlayType && media.canPlayType('audio/mpeg;').replace(/no/, ''));\n                case 'audio/ogg':    return !!(media.canPlayType && media.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/no/, ''));\n                case 'audio/wav':    return !!(media.canPlayType && media.canPlayType('audio/wav; codecs=\"1\"').replace(/no/, ''));\n            }\n        }\n\n        // If we got this far, we're stuffed\n        return false;\n    }\n\n    // Inject a script\n    function _injectScript(source) {\n        if (document.querySelectorAll('script[src=\"' + source + '\"]').length) {\n            return;\n        }\n\n        var tag = document.createElement('script');\n        tag.src = source;\n        var firstScriptTag = document.getElementsByTagName('script')[0];\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n    }\n\n    // Element exists in an array\n    function _inArray(haystack, needle) {\n        return Array.prototype.indexOf && (haystack.indexOf(needle) !== -1);\n    }\n\n    // Replace all\n    function _replaceAll(string, find, replace) {\n        return string.replace(new RegExp(find.replace(/([.*+?\\^=!:${}()|\\[\\]\\/\\\\])/g, '\\\\$1'), 'g'), replace);\n    }\n\n    // Wrap an element\n    function _wrap(elements, wrapper) {\n        // Convert `elements` to an array, if necessary.\n        if (!elements.length) {\n            elements = [elements];\n        }\n\n        // Loops backwards to prevent having to clone the wrapper on the\n        // first element (see `child` below).\n        for (var i = elements.length - 1; i >= 0; i--) {\n            var child   = (i > 0) ? wrapper.cloneNode(true) : wrapper;\n            var element = elements[i];\n\n            // Cache the current parent and sibling.\n            var parent  = element.parentNode;\n            var sibling = element.nextSibling;\n\n            // Wrap the element (is automatically removed from its current\n            // parent).\n            child.appendChild(element);\n\n            // If the element had a sibling, insert the wrapper before\n            // the sibling to maintain the HTML structure; otherwise, just\n            // append it to the parent.\n            if (sibling) {\n                parent.insertBefore(child, sibling);\n            } else {\n                parent.appendChild(child);\n            }\n\n            return child;\n        }\n    }\n\n    // Unwrap an element\n    // http://plainjs.com/javascript/manipulation/unwrap-a-dom-element-35/\n    /*function _unwrap(wrapper) {\n        // Get the element's parent node\n        var parent = wrapper.parentNode;\n\n        // Move all children out of the element\n        while (wrapper.firstChild) {\n            parent.insertBefore(wrapper.firstChild, wrapper);\n        }\n\n        // Remove the empty element\n        parent.removeChild(wrapper);\n    }*/\n\n    // Remove an element\n    function _remove(element) {\n        if (!element) {\n            return;\n        }\n        element.parentNode.removeChild(element);\n    }\n\n    // Prepend child\n    function _prependChild(parent, element) {\n        parent.insertBefore(element, parent.firstChild);\n    }\n\n    // Set attributes\n    function _setAttributes(element, attributes) {\n        for (var key in attributes) {\n            element.setAttribute(key, (_is.boolean(attributes[key]) && attributes[key]) ? '' : attributes[key]);\n        }\n    }\n\n    // Insert a HTML element\n    function _insertElement(type, parent, attributes) {\n        // Create a new <element>\n        var element = document.createElement(type);\n\n        // Set all passed attributes\n        _setAttributes(element, attributes);\n\n        // Inject the new element\n        _prependChild(parent, element);\n    }\n\n    // Get a classname from selector\n    function _getClassname(selector) {\n        return selector.replace('.', '');\n    }\n\n    // Toggle class on an element\n    function _toggleClass(element, className, state) {\n        if (element) {\n            if (element.classList) {\n                element.classList[state ? 'add' : 'remove'](className);\n            } else {\n                var name = (' ' + element.className + ' ').replace(/\\s+/g, ' ').replace(' ' + className + ' ', '');\n                element.className = name + (state ? ' ' + className : '');\n            }\n        }\n    }\n\n    // Has class name\n    function _hasClass(element, className) {\n        if (element) {\n            if (element.classList) {\n                return element.classList.contains(className);\n            } else {\n                return new RegExp('(\\\\s|^)' + className + '(\\\\s|$)').test(element.className);\n            }\n        }\n        return false;\n    }\n\n    // Element matches selector\n    function _matches(element, selector) {\n        var p = Element.prototype;\n\n        var f = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || function(s) {\n            return [].indexOf.call(document.querySelectorAll(s), this) !== -1;\n        };\n\n        return f.call(element, selector);\n    }\n\n    // Bind along with custom handler\n    function _proxyListener(element, eventName, userListener, defaultListener, useCapture) {\n        _on(element, eventName, function(event) {\n            if (userListener) {\n                userListener.apply(element, [event]);\n            }\n            defaultListener.apply(element, [event]);\n        }, useCapture);\n    }\n\n    // Toggle event listener\n    function _toggleListener(element, events, callback, toggle, useCapture) {\n        var eventList = events.split(' ');\n\n        // Whether the listener is a capturing listener or not\n        // Default to false\n        if (!_is.boolean(useCapture)) {\n            useCapture = false;\n        }\n\n        // If a nodelist is passed, call itself on each node\n        if (element instanceof NodeList) {\n            for (var x = 0; x < element.length; x++) {\n                if (element[x] instanceof Node) {\n                    _toggleListener(element[x], arguments[1], arguments[2], arguments[3]);\n                }\n            }\n            return;\n        }\n\n        // If a single node is passed, bind the event listener\n        for (var i = 0; i < eventList.length; i++) {\n            element[toggle ? 'addEventListener' : 'removeEventListener'](eventList[i], callback, useCapture);\n        }\n    }\n\n    // Bind event\n    function _on(element, events, callback, useCapture) {\n        if (element) {\n            _toggleListener(element, events, callback, true, useCapture);\n        }\n    }\n\n    // Unbind event\n    /*function _off(element, events, callback, useCapture) {\n        if (element) {\n            _toggleListener(element, events, callback, false, useCapture);\n        }\n    }*/\n\n    // Trigger event\n    function _event(element, type, bubbles, properties) {\n        // Bail if no element\n        if (!element || !type) {\n            return;\n        }\n\n        // Default bubbles to false\n        if (!_is.boolean(bubbles)) {\n            bubbles = false;\n        }\n\n        // Create and dispatch the event\n        var event = new CustomEvent(type, {\n            bubbles:    bubbles,\n            detail:     properties\n        });\n\n        // Dispatch the event\n        element.dispatchEvent(event);\n    }\n\n    // Toggle aria-pressed state on a toggle button\n    // http://www.ssbbartgroup.com/blog/how-not-to-misuse-aria-states-properties-and-roles\n    function _toggleState(target, state) {\n        // Bail if no target\n        if (!target) {\n            return;\n        }\n\n        // Get state\n        state = (_is.boolean(state) ? state : !target.getAttribute('aria-pressed'));\n\n        // Set the attribute on target\n        target.setAttribute('aria-pressed', state);\n\n        return state;\n    }\n\n    // Get percentage\n    function _getPercentage(current, max) {\n        if (current === 0 || max === 0 || isNaN(current) || isNaN(max)) {\n            return 0;\n        }\n        return ((current / max) * 100).toFixed(2);\n    }\n\n    // Deep extend/merge destination object with N more objects\n    // http://andrewdupont.net/2009/08/28/deep-extending-objects-in-javascript/\n    // Removed call to arguments.callee (used explicit function name instead)\n    function _extend() {\n        // Get arguments\n        var objects = arguments;\n\n        // Bail if nothing to merge\n        if (!objects.length) {\n            return;\n        }\n\n        // Return first if specified but nothing to merge\n        if (objects.length === 1) {\n            return objects[0];\n        }\n\n        // First object is the destination\n        var destination = Array.prototype.shift.call(objects),\n            length      = objects.length;\n\n        // Loop through all objects to merge\n        for (var i = 0; i < length; i++) {\n            var source = objects[i];\n\n            for (var property in source) {\n                if (source[property] && source[property].constructor && source[property].constructor === Object) {\n                    destination[property] = destination[property] || {};\n                    _extend(destination[property], source[property]);\n                } else {\n                    destination[property] = source[property];\n                }\n            }\n        }\n\n        return destination;\n    }\n\n    // Check variable types\n    var _is = {\n        object: function(input) {\n            return input !== null && typeof(input) === 'object';\n        },\n        array: function(input) {\n            return input !== null && (typeof(input) === 'object' && input.constructor === Array);\n        },\n        number: function(input) {\n            return input !== null && (typeof(input) === 'number' && !isNaN(input - 0) || (typeof input === 'object' && input.constructor === Number));\n        },\n        string: function(input) {\n            return input !== null && (typeof input === 'string' || (typeof input === 'object' && input.constructor === String));\n        },\n        boolean: function(input) {\n            return input !== null && typeof input === 'boolean';\n        },\n        nodeList: function(input) {\n            return input !== null && input instanceof NodeList;\n        },\n        htmlElement: function(input) {\n            return input !== null && input instanceof HTMLElement;\n        },\n        function: function(input) {\n            return input !== null && typeof input === 'function';\n        },\n        undefined: function(input) {\n            return input !== null && typeof input === 'undefined';\n        }\n    };\n\n    // Parse YouTube ID from url\n    function _parseYouTubeId(url) {\n        var regex = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=)([^#\\&\\?]*).*/;\n        return (url.match(regex)) ? RegExp.$2 : url;\n    }\n\n    // Parse Vimeo ID from url\n    function _parseVimeoId(url) {\n        var regex = /^.*(vimeo.com\\/|video\\/)(\\d+).*/;\n        return (url.match(regex)) ? RegExp.$2 : url;\n    }\n\n    // Fullscreen API\n    function _fullscreen() {\n        var fullscreen = {\n                supportsFullScreen: false,\n                isFullScreen: function() { return false; },\n                requestFullScreen: function() {},\n                cancelFullScreen: function() {},\n                fullScreenEventName: '',\n                element: null,\n                prefix: ''\n            },\n            browserPrefixes = 'webkit o moz ms khtml'.split(' ');\n\n        // Check for native support\n        if (!_is.undefined(document.cancelFullScreen)) {\n            fullscreen.supportsFullScreen = true;\n        } else {\n            // Check for fullscreen support by vendor prefix\n            for (var i = 0, il = browserPrefixes.length; i < il; i++ ) {\n                fullscreen.prefix = browserPrefixes[i];\n\n                if (!_is.undefined(document[fullscreen.prefix + 'CancelFullScreen'])) {\n                    fullscreen.supportsFullScreen = true;\n                    break;\n                } else if (!_is.undefined(document.msExitFullscreen) && document.msFullscreenEnabled) {\n                    // Special case for MS (when isn't it?)\n                    fullscreen.prefix = 'ms';\n                    fullscreen.supportsFullScreen = true;\n                    break;\n                }\n            }\n        }\n\n        // Update methods to do something useful\n        if (fullscreen.supportsFullScreen) {\n            // Yet again Microsoft awesomeness,\n            // Sometimes the prefix is 'ms', sometimes 'MS' to keep you on your toes\n            fullscreen.fullScreenEventName = (fullscreen.prefix === 'ms' ? 'MSFullscreenChange' : fullscreen.prefix + 'fullscreenchange');\n\n            fullscreen.isFullScreen = function(element) {\n                if (_is.undefined(element)) {\n                    element = document.body;\n                }\n                switch (this.prefix) {\n                    case '':\n                        return document.fullscreenElement === element;\n                    case 'moz':\n                        return document.mozFullScreenElement === element;\n                    default:\n                        return document[this.prefix + 'FullscreenElement'] === element;\n                }\n            };\n            fullscreen.requestFullScreen = function(element) {\n                if (_is.undefined(element)) {\n                    element = document.body;\n                }\n                return (this.prefix === '') ? element.requestFullScreen() : element[this.prefix + (this.prefix === 'ms' ? 'RequestFullscreen' : 'RequestFullScreen')]();\n            };\n            fullscreen.cancelFullScreen = function() {\n                return (this.prefix === '') ? document.cancelFullScreen() : document[this.prefix + (this.prefix === 'ms' ? 'ExitFullscreen' : 'CancelFullScreen')]();\n            };\n            fullscreen.element = function() {\n                return (this.prefix === '') ? document.fullscreenElement : document[this.prefix + 'FullscreenElement'];\n            };\n        }\n\n        return fullscreen;\n    }\n\n    // Local storage\n    var _storage = {\n        supported: (function() {\n            if (!('localStorage' in window)) {\n                return false;\n            }\n\n            // Try to use it (it might be disabled, e.g. user is in private/porn mode)\n            // see: https://github.com/sampotts/plyr/issues/131\n            try {\n                // Add test item\n                window.localStorage.setItem('___test', 'OK');\n\n                // Get the test item\n                var result = window.localStorage.getItem('___test');\n\n                // Clean up\n                window.localStorage.removeItem('___test');\n\n                // Check if value matches\n                return (result === 'OK');\n            }\n            catch (e) {\n                return false;\n            }\n\n            return false;\n        })()\n    };\n\n    // Player instance\n    function Plyr(media, config) {\n        var plyr = this,\n        timers = {},\n        api;\n\n        // Set media\n        plyr.media = media;\n        var original = media.cloneNode(true);\n\n        // Trigger events, with plyr instance passed\n        function _triggerEvent(element, type, bubbles, properties) {\n            _event(element, type, bubbles, _extend({}, properties, {\n                plyr: api\n            }));\n        }\n\n        // Debugging\n        function _console(type, args) {\n            if (config.debug && window.console) {\n                args = Array.prototype.slice.call(args);\n\n                if (_is.string(config.logPrefix) && config.logPrefix.length) {\n                    args.unshift(config.logPrefix);\n                }\n\n                console[type].apply(console, args);\n            }\n        }\n        var _log = function() { _console('log', arguments) },\n            _warn = function() { _console('warn', arguments) };\n\n        // Log config options\n        _log('Config', config);\n\n        // Get icon URL\n        function _getIconUrl() {\n            return {\n                url:        config.iconUrl,\n                absolute:   (config.iconUrl.indexOf(\"http\") === 0) || plyr.browser.isIE\n            };\n        }\n\n        // Build the default HTML\n        function _buildControls() {\n            // Create html array\n            var html        = [],\n                iconUrl     = _getIconUrl(),\n                iconPath    = (!iconUrl.absolute ? iconUrl.url : '') + '#' + config.iconPrefix;\n\n            // Larger overlaid play button\n            if (_inArray(config.controls, 'play-large')) {\n                html.push(\n                    '<button type=\"button\" data-plyr=\"play\" class=\"plyr__play-large\">',\n                        '<svg><use xlink:href=\"' + iconPath + '-play\" /></svg>',\n                        '<span class=\"plyr__sr-only\">' + config.i18n.play + '</span>',\n                    '</button>'\n                );\n            }\n\n            html.push('<div class=\"plyr__controls\">');\n\n            // Restart button\n            if (_inArray(config.controls, 'restart')) {\n                html.push(\n                    '<button type=\"button\" data-plyr=\"restart\">',\n                        '<svg><use xlink:href=\"' + iconPath + '-restart\" /></svg>',\n                        '<span class=\"plyr__sr-only\">' + config.i18n.restart + '</span>',\n                    '</button>'\n                );\n            }\n\n            // Rewind button\n            if (_inArray(config.controls, 'rewind')) {\n                html.push(\n                    '<button type=\"button\" data-plyr=\"rewind\">',\n                        '<svg><use xlink:href=\"' + iconPath + '-rewind\" /></svg>',\n                        '<span class=\"plyr__sr-only\">' + config.i18n.rewind + '</span>',\n                    '</button>'\n                );\n            }\n\n            // Play Pause button\n            // TODO: This should be a toggle button really?\n            if (_inArray(config.controls, 'play')) {\n                html.push(\n                    '<button type=\"button\" data-plyr=\"play\">',\n                        '<svg><use xlink:href=\"' + iconPath + '-play\" /></svg>',\n                        '<span class=\"plyr__sr-only\">' + config.i18n.play + '</span>',\n                    '</button>',\n                    '<button type=\"button\" data-plyr=\"pause\">',\n                        '<svg><use xlink:href=\"' + iconPath + '-pause\" /></svg>',\n                        '<span class=\"plyr__sr-only\">' + config.i18n.pause + '</span>',\n                    '</button>'\n                );\n            }\n\n            // Fast forward button\n            if (_inArray(config.controls, 'fast-forward')) {\n                html.push(\n                    '<button type=\"button\" data-plyr=\"fast-forward\">',\n                        '<svg><use xlink:href=\"' + iconPath + '-fast-forward\" /></svg>',\n                        '<span class=\"plyr__sr-only\">' + config.i18n.forward + '</span>',\n                    '</button>'\n                );\n            }\n\n            // Progress\n            if (_inArray(config.controls, 'progress')) {\n                // Create progress\n                html.push('<span class=\"plyr__progress\">',\n                    '<label for=\"seek{id}\" class=\"plyr__sr-only\">Seek</label>',\n                    '<input id=\"seek{id}\" class=\"plyr__progress--seek\" type=\"range\" min=\"0\" max=\"100\" step=\"0.1\" value=\"0\" data-plyr=\"seek\">',\n                    '<progress class=\"plyr__progress--played\" max=\"100\" value=\"0\" role=\"presentation\"></progress>',\n                    '<progress class=\"plyr__progress--buffer\" max=\"100\" value=\"0\">',\n                        '<span>0</span>% ' + config.i18n.buffered,\n                    '</progress>');\n\n                // Seek tooltip\n                if (config.tooltips.seek) {\n                    html.push('<span class=\"plyr__tooltip\">00:00</span>');\n                }\n\n                // Close\n                html.push('</span>');\n            }\n\n            // Media current time display\n            if (_inArray(config.controls, 'current-time')) {\n                html.push(\n                    '<span class=\"plyr__time\">',\n                        '<span class=\"plyr__sr-only\">' + config.i18n.currentTime + '</span>',\n                        '<span class=\"plyr__time--current\">00:00</span>',\n                    '</span>'\n                );\n            }\n\n            // Media duration display\n            if (_inArray(config.controls, 'duration')) {\n                html.push(\n                    '<span class=\"plyr__time\">',\n                        '<span class=\"plyr__sr-only\">' + config.i18n.duration + '</span>',\n                        '<span class=\"plyr__time--duration\">00:00</span>',\n                    '</span>'\n                );\n            }\n\n            // Toggle mute button\n            if (_inArray(config.controls, 'mute')) {\n                html.push(\n                    '<button type=\"button\" data-plyr=\"mute\">',\n                        '<svg class=\"icon--muted\"><use xlink:href=\"' + iconPath + '-muted\" /></svg>',\n                        '<svg><use xlink:href=\"' + iconPath + '-volume\" /></svg>',\n                        '<span class=\"plyr__sr-only\">' + config.i18n.toggleMute + '</span>',\n                    '</button>'\n                );\n            }\n\n            // Volume range control\n            if (_inArray(config.controls, 'volume')) {\n                html.push(\n                    '<span class=\"plyr__volume\">',\n                        '<label for=\"volume{id}\" class=\"plyr__sr-only\">' + config.i18n.volume + '</label>',\n                        '<input id=\"volume{id}\" class=\"plyr__volume--input\" type=\"range\" min=\"' + config.volumeMin + '\" max=\"' + config.volumeMax + '\" value=\"' + config.volume + '\" data-plyr=\"volume\">',\n                        '<progress class=\"plyr__volume--display\" max=\"' + config.volumeMax + '\" value=\"' + config.volumeMin + '\" role=\"presentation\"></progress>',\n                    '</span>'\n                );\n            }\n\n            // Toggle captions button\n            if (_inArray(config.controls, 'captions')) {\n                html.push(\n                    '<button type=\"button\" data-plyr=\"captions\">',\n                        '<svg class=\"icon--captions-on\"><use xlink:href=\"' + iconPath + '-captions-on\" /></svg>',\n                        '<svg><use xlink:href=\"' + iconPath+ '-captions-off\" /></svg>',\n                        '<span class=\"plyr__sr-only\">' + config.i18n.toggleCaptions + '</span>',\n                    '</button>'\n                );\n            }\n\n            // Toggle fullscreen button\n            if (_inArray(config.controls, 'fullscreen')) {\n                html.push(\n                    '<button type=\"button\" data-plyr=\"fullscreen\">',\n                        '<svg class=\"icon--exit-fullscreen\"><use xlink:href=\"' + iconPath + '-exit-fullscreen\" /></svg>',\n                        '<svg><use xlink:href=\"' + iconPath + '-enter-fullscreen\" /></svg>',\n                        '<span class=\"plyr__sr-only\">' + config.i18n.toggleFullscreen + '</span>',\n                    '</button>'\n                );\n            }\n\n            // Close everything\n            html.push('</div>');\n\n            return html.join('');\n        }\n\n        // Setup fullscreen\n        function _setupFullscreen() {\n            if (!plyr.supported.full) {\n                return;\n            }\n\n            if ((plyr.type !== 'audio' || config.fullscreen.allowAudio) && config.fullscreen.enabled) {\n                // Check for native support\n                var nativeSupport = fullscreen.supportsFullScreen;\n\n                if (nativeSupport || (config.fullscreen.fallback && !_inFrame())) {\n                    _log((nativeSupport ? 'Native' : 'Fallback') + ' fullscreen enabled');\n\n                    // Add styling hook\n                    _toggleClass(plyr.container, config.classes.fullscreen.enabled, true);\n                } else {\n                    _log('Fullscreen not supported and fallback disabled');\n                }\n\n                // Toggle state\n                if (plyr.buttons && plyr.buttons.fullscreen) {\n                    _toggleState(plyr.buttons.fullscreen, false);\n                }\n\n                // Setup focus trap\n                _focusTrap();\n            }\n        }\n\n        // Setup captions\n        function _setupCaptions() {\n            // Bail if not HTML5 video\n            if (plyr.type !== 'video') {\n                return;\n            }\n\n            // Inject the container\n            if (!_getElement(config.selectors.captions)) {\n                plyr.videoContainer.insertAdjacentHTML('afterbegin', '<div class=\"' + _getClassname(config.selectors.captions) + '\"></div>');\n            }\n\n            // Determine if HTML5 textTracks is supported\n            plyr.usingTextTracks = false;\n            if (plyr.media.textTracks) {\n                plyr.usingTextTracks = true;\n            }\n\n            // Get URL of caption file if exists\n            var captionSrc = '',\n                kind,\n                children = plyr.media.childNodes;\n\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].nodeName.toLowerCase() === 'track') {\n                    kind = children[i].kind;\n                    if (kind === 'captions' || kind === 'subtitles') {\n                        captionSrc = children[i].getAttribute('src');\n                    }\n                }\n            }\n\n            // Record if caption file exists or not\n            plyr.captionExists = true;\n            if (captionSrc === '') {\n                plyr.captionExists = false;\n                _log('No caption track found');\n            } else {\n                _log('Caption track found; URI: ' + captionSrc);\n            }\n\n            // If no caption file exists, hide container for caption text\n            if (!plyr.captionExists) {\n                _toggleClass(plyr.container, config.classes.captions.enabled);\n            } else {\n                // Turn off native caption rendering to avoid double captions\n                // This doesn't seem to work in Safari 7+, so the <track> elements are removed from the dom below\n                var tracks = plyr.media.textTracks;\n                for (var x = 0; x < tracks.length; x++) {\n                    tracks[x].mode = 'hidden';\n                }\n\n                // Enable UI\n                _showCaptions(plyr);\n\n                // Disable unsupported browsers than report false positive\n                // Firefox bug: https://bugzilla.mozilla.org/show_bug.cgi?id=1033144\n                if ((plyr.browser.isIE && plyr.browser.version >= 10) ||\n                    (plyr.browser.isFirefox && plyr.browser.version >= 31)) {\n\n                    // Debugging\n                    _log('Detected browser with known TextTrack issues - using manual fallback');\n\n                    // Set to false so skips to 'manual' captioning\n                    plyr.usingTextTracks = false;\n                }\n\n                // Rendering caption tracks\n                // Native support required - http://caniuse.com/webvtt\n                if (plyr.usingTextTracks) {\n                    _log('TextTracks supported');\n\n                    for (var y = 0; y < tracks.length; y++) {\n                        var track = tracks[y];\n\n                        if (track.kind === 'captions' || track.kind === 'subtitles') {\n                            _on(track, 'cuechange', function() {\n                                // Display a cue, if there is one\n                                if (this.activeCues[0] && 'text' in this.activeCues[0]) {\n                                    _setCaption(this.activeCues[0].getCueAsHTML());\n                                } else {\n                                    _setCaption();\n                                }\n                            });\n                        }\n                    }\n                } else {\n                    // Caption tracks not natively supported\n                    _log('TextTracks not supported so rendering captions manually');\n\n                    // Render captions from array at appropriate time\n                    plyr.currentCaption = '';\n                    plyr.captions = [];\n\n                    if (captionSrc !== '') {\n                        // Create XMLHttpRequest Object\n                        var xhr = new XMLHttpRequest();\n\n                        xhr.onreadystatechange = function() {\n                            if (xhr.readyState === 4) {\n                                if (xhr.status === 200) {\n                                    var captions = [],\n                                        caption,\n                                        req = xhr.responseText;\n\n                                    //According to webvtt spec, line terminator consists of one of the following\n                                    // CRLF (U+000D U+000A), LF (U+000A) or CR (U+000D)\n                                    var lineSeparator = '\\r\\n';\n                                    if(req.indexOf(lineSeparator+lineSeparator) === -1) {\n                                        if(req.indexOf('\\r\\r') !== -1){\n                                            lineSeparator = '\\r';\n                                        } else {\n                                            lineSeparator = '\\n';\n                                        }\n                                    }\n\n                                    captions = req.split(lineSeparator+lineSeparator);\n\n                                    for (var r = 0; r < captions.length; r++) {\n                                        caption = captions[r];\n                                        plyr.captions[r] = [];\n\n                                        // Get the parts of the captions\n                                        var parts = caption.split(lineSeparator),\n                                            index = 0;\n\n                                        // Incase caption numbers are added\n                                        if (parts[index].indexOf(\":\") === -1) {\n                                            index = 1;\n                                        }\n\n                                        plyr.captions[r] = [parts[index], parts[index + 1]];\n                                    }\n\n                                    // Remove first element ('VTT')\n                                    plyr.captions.shift();\n\n                                    _log('Successfully loaded the caption file via AJAX');\n                                } else {\n                                    _warn(config.logPrefix + 'There was a problem loading the caption file via AJAX');\n                                }\n                            }\n                        };\n\n                        xhr.open('get', captionSrc, true);\n\n                        xhr.send();\n                    }\n                }\n            }\n        }\n\n        // Set the current caption\n        function _setCaption(caption) {\n            /* jshint unused:false */\n            var container = _getElement(config.selectors.captions),\n                content = document.createElement('span');\n\n            // Empty the container\n            container.innerHTML = '';\n\n            // Default to empty\n            if (_is.undefined(caption)) {\n                caption = '';\n            }\n\n            // Set the span content\n            if (_is.string(caption)) {\n                content.innerHTML = caption.trim();\n            } else {\n                content.appendChild(caption);\n            }\n\n            // Set new caption text\n            container.appendChild(content);\n\n            // Force redraw (for Safari)\n            var redraw = container.offsetHeight;\n        }\n\n        // Captions functions\n        // Seek the manual caption time and update UI\n        function _seekManualCaptions(time) {\n            // Utilities for caption time codes\n            function _timecodeCommon(tc, pos) {\n                var tcpair = [];\n                tcpair = tc.split(' --> ');\n                for(var i = 0; i < tcpair.length; i++) {\n                    // WebVTT allows for extra meta data after the timestamp line\n                    // So get rid of this if it exists\n                    tcpair[i] = tcpair[i].replace(/(\\d+:\\d+:\\d+\\.\\d+).*/, \"$1\");\n                }\n                return _subTcSecs(tcpair[pos]);\n            }\n            function _timecodeMin(tc) {\n                return _timecodeCommon(tc, 0);\n            }\n            function _timecodeMax(tc) {\n                return _timecodeCommon(tc, 1);\n            }\n            function _subTcSecs(tc) {\n                if (tc === null || tc === undefined) {\n                    return 0;\n                } else {\n                    var tc1 = [],\n                        tc2 = [],\n                        seconds;\n                    tc1 = tc.split(',');\n                    tc2 = tc1[0].split(':');\n                    seconds = Math.floor(tc2[0]*60*60) + Math.floor(tc2[1]*60) + Math.floor(tc2[2]);\n                    return seconds;\n                }\n            }\n\n            // If it's not video, or we're using textTracks, bail.\n            if (plyr.usingTextTracks || plyr.type !== 'video' || !plyr.supported.full) {\n                return;\n            }\n\n            // Reset subcount\n            plyr.subcount = 0;\n\n            // Check time is a number, if not use currentTime\n            // IE has a bug where currentTime doesn't go to 0\n            // https://twitter.com/Sam_Potts/status/573715746506731521\n            time = _is.number(time) ? time : plyr.media.currentTime;\n\n            // If there's no subs available, bail\n            if (!plyr.captions[plyr.subcount]) {\n                return;\n            }\n\n            while (_timecodeMax(plyr.captions[plyr.subcount][0]) < time.toFixed(1)) {\n                plyr.subcount++;\n                if (plyr.subcount > plyr.captions.length - 1) {\n                    plyr.subcount = plyr.captions.length - 1;\n                    break;\n                }\n            }\n\n            // Check if the next caption is in the current time range\n            if (plyr.media.currentTime.toFixed(1) >= _timecodeMin(plyr.captions[plyr.subcount][0]) &&\n                plyr.media.currentTime.toFixed(1) <= _timecodeMax(plyr.captions[plyr.subcount][0])) {\n                    plyr.currentCaption = plyr.captions[plyr.subcount][1];\n\n                // Render the caption\n                _setCaption(plyr.currentCaption);\n            } else {\n                _setCaption();\n            }\n        }\n\n        // Display captions container and button (for initialization)\n        function _showCaptions() {\n            // If there's no caption toggle, bail\n            if (!plyr.buttons.captions) {\n                return;\n            }\n\n            _toggleClass(plyr.container, config.classes.captions.enabled, true);\n\n            // Try to load the value from storage\n            var active = plyr.storage.captionsEnabled;\n\n            // Otherwise fall back to the default config\n            if (!_is.boolean(active)) {\n                active = config.captions.defaultActive;\n            }\n\n            if (active) {\n                _toggleClass(plyr.container, config.classes.captions.active, true);\n                _toggleState(plyr.buttons.captions, true);\n            }\n        }\n\n        // Find all elements\n        function _getElements(selector) {\n            return plyr.container.querySelectorAll(selector);\n        }\n\n        // Find a single element\n        function _getElement(selector) {\n            return _getElements(selector)[0];\n        }\n\n        // Determine if we're in an iframe\n        function _inFrame() {\n            try {\n                return window.self !== window.top;\n            }\n            catch (e) {\n                return true;\n            }\n        }\n\n        // Trap focus inside container\n        function _focusTrap() {\n            var tabbables   = _getElements('input:not([disabled]), button:not([disabled])'),\n                first       = tabbables[0],\n                last        = tabbables[tabbables.length - 1];\n\n            function _checkFocus(event) {\n                // If it is TAB\n                if (event.which === 9 && plyr.isFullscreen) {\n                    if (event.target === last && !event.shiftKey) {\n                        // Move focus to first element that can be tabbed if Shift isn't used\n                        event.preventDefault();\n                        first.focus();\n                    } else if (event.target === first && event.shiftKey) {\n                        // Move focus to last element that can be tabbed if Shift is used\n                        event.preventDefault();\n                        last.focus();\n                    }\n                }\n            }\n\n            // Bind the handler\n            _on(plyr.container, 'keydown', _checkFocus);\n        }\n\n        // Add elements to HTML5 media (source, tracks, etc)\n        function _insertChildElements(type, attributes) {\n            if (_is.string(attributes)) {\n               _insertElement(type, plyr.media, { src: attributes });\n            } else if (attributes.constructor === Array) {\n                for (var i = attributes.length - 1; i >= 0; i--) {\n                    _insertElement(type, plyr.media, attributes[i]);\n                }\n            }\n        }\n\n        // Insert controls\n        function _injectControls() {\n            // Sprite\n            if (config.loadSprite) {\n                var iconUrl = _getIconUrl();\n\n                // Only load external sprite using AJAX\n                if (iconUrl.absolute) {\n                    _log('AJAX loading absolute SVG sprite' + (plyr.browser.isIE ? ' (due to IE)' : ''));\n                    loadSprite(iconUrl.url, \"sprite-plyr\");\n                } else {\n                    _log('Sprite will be used as external resource directly');\n                }\n            }\n\n            // Make a copy of the html\n            var html = config.html;\n\n            // Insert custom video controls\n            _log('Injecting custom controls');\n\n            // If no controls are specified, create default\n            if (!html) {\n                html = _buildControls();\n            }\n\n            // Replace seek time instances\n            html = _replaceAll(html, '{seektime}', config.seekTime);\n\n            // Replace all id references with random numbers\n            html = _replaceAll(html, '{id}', Math.floor(Math.random() * (10000)));\n\n            // Controls container\n            var target;\n\n            // Inject to custom location\n            if (_is.string(config.selectors.controls.container)) {\n                target = document.querySelector(config.selectors.controls.container);\n            }\n\n            // Inject into the container by default\n            if (!_is.htmlElement(target)) {\n                target = plyr.container\n            }\n\n            // Inject controls HTML\n            target.insertAdjacentHTML('beforeend', html);\n\n            // Setup tooltips\n            if (config.tooltips.controls) {\n                var labels = _getElements([config.selectors.controls.wrapper, ' ', config.selectors.labels, ' .', config.classes.hidden].join(''));\n\n                for (var i = labels.length - 1; i >= 0; i--) {\n                    var label = labels[i];\n\n                    _toggleClass(label, config.classes.hidden, false);\n                    _toggleClass(label, config.classes.tooltip, true);\n                }\n            }\n        }\n\n        // Find the UI controls and store references\n        function _findElements() {\n            try {\n                plyr.controls                 = _getElement(config.selectors.controls.wrapper);\n\n                // Buttons\n                plyr.buttons = {};\n                plyr.buttons.seek             = _getElement(config.selectors.buttons.seek);\n                plyr.buttons.play             = _getElements(config.selectors.buttons.play);\n                plyr.buttons.pause            = _getElement(config.selectors.buttons.pause);\n                plyr.buttons.restart          = _getElement(config.selectors.buttons.restart);\n                plyr.buttons.rewind           = _getElement(config.selectors.buttons.rewind);\n                plyr.buttons.forward          = _getElement(config.selectors.buttons.forward);\n                plyr.buttons.fullscreen       = _getElement(config.selectors.buttons.fullscreen);\n\n                // Inputs\n                plyr.buttons.mute             = _getElement(config.selectors.buttons.mute);\n                plyr.buttons.captions         = _getElement(config.selectors.buttons.captions);\n\n                // Progress\n                plyr.progress = {};\n                plyr.progress.container       = _getElement(config.selectors.progress.container);\n\n                // Progress - Buffering\n                plyr.progress.buffer          = {};\n                plyr.progress.buffer.bar      = _getElement(config.selectors.progress.buffer);\n                plyr.progress.buffer.text     = plyr.progress.buffer.bar && plyr.progress.buffer.bar.getElementsByTagName('span')[0];\n\n                // Progress - Played\n                plyr.progress.played          = _getElement(config.selectors.progress.played);\n\n                // Seek tooltip\n                plyr.progress.tooltip         = plyr.progress.container && plyr.progress.container.querySelector('.' + config.classes.tooltip);\n\n                // Volume\n                plyr.volume                   = {};\n                plyr.volume.input             = _getElement(config.selectors.volume.input);\n                plyr.volume.display           = _getElement(config.selectors.volume.display);\n\n                // Timing\n                plyr.duration                 = _getElement(config.selectors.duration);\n                plyr.currentTime              = _getElement(config.selectors.currentTime);\n                plyr.seekTime                 = _getElements(config.selectors.seekTime);\n\n                return true;\n            }\n            catch(e) {\n                _warn('It looks like there is a problem with your controls HTML');\n\n                // Restore native video controls\n                _toggleNativeControls(true);\n\n                return false;\n            }\n        }\n\n        // Toggle style hook\n        function _toggleStyleHook() {\n            _toggleClass(plyr.container, config.selectors.container.replace('.', ''), plyr.supported.full);\n        }\n\n        // Toggle native controls\n        function _toggleNativeControls(toggle) {\n            if (toggle && _inArray(config.types.html5, plyr.type)) {\n                plyr.media.setAttribute('controls', '');\n            } else {\n                plyr.media.removeAttribute('controls');\n            }\n        }\n\n        // Setup aria attribute for play and iframe title\n        function _setTitle(iframe) {\n            // Find the current text\n            var label = config.i18n.play;\n\n            // If there's a media title set, use that for the label\n            if (_is.string(config.title) && config.title.length) {\n                label += ', ' + config.title;\n\n                // Set container label\n                plyr.container.setAttribute('aria-label', config.title);\n            }\n\n            // If there's a play button, set label\n            if (plyr.supported.full && plyr.buttons.play) {\n                for (var i = plyr.buttons.play.length - 1; i >= 0; i--) {\n                    plyr.buttons.play[i].setAttribute('aria-label', label);\n                }\n            }\n\n            // Set iframe title\n            // https://github.com/sampotts/plyr/issues/124\n            if (_is.htmlElement(iframe)) {\n                iframe.setAttribute('title', config.i18n.frameTitle.replace('{title}', config.title));\n            }\n        }\n\n        // Setup localStorage\n        function _setupStorage() {\n            var value = null;\n            plyr.storage = {};\n\n            // Bail if we don't have localStorage support or it's disabled\n            if (!_storage.supported || !config.storage.enabled) {\n                return;\n            }\n\n            // Clean up old volume\n            // https://github.com/sampotts/plyr/issues/171\n            window.localStorage.removeItem('plyr-volume');\n\n            // load value from the current key\n            value = window.localStorage.getItem(config.storage.key);\n\n            if (!value) {\n                // Key wasn't set (or had been cleared), move along\n                return;\n            } else if (/^\\d+(\\.\\d+)?$/.test(value)) {\n                // If value is a number, it's probably volume from an older\n                // version of plyr. See: https://github.com/sampotts/plyr/pull/313\n                // Update the key to be JSON\n                _updateStorage({volume: parseFloat(value)});\n            } else {\n                // Assume it's JSON from this or a later version of plyr\n                plyr.storage = JSON.parse(value);\n            }\n        }\n\n        // Save a value back to local storage\n        function _updateStorage(value) {\n            // Bail if we don't have localStorage support or it's disabled\n            if (!_storage.supported || !config.storage.enabled) {\n                return;\n            }\n\n            // Update the working copy of the values\n            _extend(plyr.storage, value);\n\n            // Update storage\n            window.localStorage.setItem(config.storage.key, JSON.stringify(plyr.storage));\n        }\n\n        // Setup media\n        function _setupMedia() {\n            // If there's no media, bail\n            if (!plyr.media) {\n                _warn('No media element found!');\n                return;\n            }\n\n            if (plyr.supported.full) {\n                // Add type class\n                _toggleClass(plyr.container, config.classes.type.replace('{0}', plyr.type), true);\n\n                // Add video class for embeds\n                // This will require changes if audio embeds are added\n                if (_inArray(config.types.embed, plyr.type)) {\n                    _toggleClass(plyr.container, config.classes.type.replace('{0}', 'video'), true);\n                }\n\n                // If there's no autoplay attribute, assume the video is stopped and add state class\n                _toggleClass(plyr.container, config.classes.stopped, config.autoplay);\n\n                // Add iOS class\n                _toggleClass(plyr.container, config.classes.isIos, plyr.browser.isIos);\n\n                // Add touch class\n                _toggleClass(plyr.container, config.classes.isTouch, plyr.browser.isTouch);\n\n                // Inject the player wrapper\n                if (plyr.type === 'video') {\n                    // Create the wrapper div\n                    var wrapper = document.createElement('div');\n                    wrapper.setAttribute('class', config.classes.videoWrapper);\n\n                    // Wrap the video in a container\n                    _wrap(plyr.media, wrapper);\n\n                    // Cache the container\n                    plyr.videoContainer = wrapper;\n                }\n            }\n\n            // Embeds\n            if (_inArray(config.types.embed, plyr.type)) {\n                _setupEmbed();\n            }\n        }\n\n        // Setup YouTube/Vimeo\n        function _setupEmbed() {\n            var container = document.createElement('div'),\n                mediaId,\n                id = plyr.type + '-' + Math.floor(Math.random() * (10000));\n\n            // Parse IDs from URLs if supplied\n            switch (plyr.type) {\n                case 'youtube':\n                    mediaId = _parseYouTubeId(plyr.embedId);\n                    break;\n\n                case 'vimeo':\n                    mediaId = _parseVimeoId(plyr.embedId);\n                    break;\n\n                default:\n                    mediaId = plyr.embedId;\n            }\n\n            // Remove old containers\n            var containers = _getElements('[id^=\"' + plyr.type + '-\"]');\n            for (var i = containers.length - 1; i >= 0; i--) {\n                _remove(containers[i]);\n            }\n\n            // Add embed class for responsive\n            _toggleClass(plyr.media, config.classes.videoWrapper, true);\n            _toggleClass(plyr.media, config.classes.embedWrapper, true);\n\n            if (plyr.type === 'youtube') {\n                // Create the YouTube container\n                plyr.media.appendChild(container);\n\n                // Set ID\n                container.setAttribute('id', id);\n\n                // Setup API\n                if (_is.object(window.YT)) {\n                    _youTubeReady(mediaId, container);\n                } else {\n                    // Load the API\n                    _injectScript(config.urls.youtube.api);\n\n                    // Setup callback for the API\n                    window.onYouTubeReadyCallbacks = window.onYouTubeReadyCallbacks || [];\n\n                    // Add to queue\n                    window.onYouTubeReadyCallbacks.push(function() { _youTubeReady(mediaId, container); });\n\n                    // Set callback to process queue\n                    window.onYouTubeIframeAPIReady = function () {\n                        window.onYouTubeReadyCallbacks.forEach(function(callback) { callback(); });\n                    };\n                }\n            } else if (plyr.type === 'vimeo') {\n                // Vimeo needs an extra div to hide controls on desktop (which has full support)\n                if (plyr.supported.full) {\n                    plyr.media.appendChild(container);\n                } else {\n                    container = plyr.media;\n                }\n\n                // Set ID\n                container.setAttribute('id', id);\n\n                // Load the API if not already\n                if (!_is.object(window.Vimeo)) {\n                    _injectScript(config.urls.vimeo.api);\n\n                    // Wait for fragaloop load\n                    var vimeoTimer = window.setInterval(function() {\n                        if (_is.object(window.Vimeo)) {\n                            window.clearInterval(vimeoTimer);\n                            _vimeoReady(mediaId, container);\n                        }\n                    }, 50);\n                } else {\n                    _vimeoReady(mediaId, container);\n                }\n            } else if (plyr.type === 'soundcloud') {\n                // TODO: Currently unsupported and undocumented\n                // Inject the iframe\n                var soundCloud = document.createElement('iframe');\n\n                // Watch for iframe load\n                soundCloud.loaded = false;\n                _on(soundCloud, 'load', function() { soundCloud.loaded = true; });\n\n                _setAttributes(soundCloud, {\n                    'src':  'https://w.soundcloud.com/player/?url=https://api.soundcloud.com/tracks/' + mediaId,\n                    'id':   id\n                });\n\n                container.appendChild(soundCloud);\n                plyr.media.appendChild(container);\n\n                // Load the API if not already\n                if (!window.SC) {\n                    _injectScript(config.urls.soundcloud.api);\n                }\n\n                // Wait for SC load\n                var soundCloudTimer = window.setInterval(function() {\n                    if (window.SC && soundCloud.loaded) {\n                        window.clearInterval(soundCloudTimer);\n                        _soundcloudReady.call(soundCloud);\n                    }\n                }, 50);\n            }\n        }\n\n        // When embeds are ready\n        function _embedReady() {\n            // Setup the UI and call ready if full support\n            if (plyr.supported.full) {\n                _setupInterface();\n                _ready();\n            }\n\n            // Set title\n            _setTitle(_getElement('iframe'));\n        }\n\n        // Handle YouTube API ready\n        function _youTubeReady(videoId, container) {\n            // Setup instance\n            // https://developers.google.com/youtube/iframe_api_reference\n            plyr.embed = new window.YT.Player(container.id, {\n                videoId: videoId,\n                playerVars: {\n                    autoplay:       (config.autoplay ? 1 : 0),\n                    controls:       (plyr.supported.full ? 0 : 1),\n                    rel:            0,\n                    showinfo:       0,\n                    iv_load_policy: 3,\n                    cc_load_policy: (config.captions.defaultActive ? 1 : 0),\n                    cc_lang_pref:   'en',\n                    wmode:          'transparent',\n                    modestbranding: 1,\n                    disablekb:      1,\n                    origin:         '*' // https://code.google.com/p/gdata-issues/issues/detail?id=5788#c45\n                },\n                events: {\n                    'onError': function(event) {\n                        _triggerEvent(plyr.container, 'error', true, {\n                            code:   event.data,\n                            embed:  event.target\n                        });\n                    },\n                    'onReady': function(event) {\n                        // Get the instance\n                        var instance = event.target;\n\n                        // Create a faux HTML5 API using the YouTube API\n                        plyr.media.play = function() {\n                            instance.playVideo();\n                            plyr.media.paused = false;\n                        };\n                        plyr.media.pause = function() {\n                            instance.pauseVideo();\n                            plyr.media.paused = true;\n                        };\n                        plyr.media.stop = function() {\n                            instance.stopVideo();\n                            plyr.media.paused = true;\n                        };\n                        plyr.media.duration = instance.getDuration();\n                        plyr.media.paused = true;\n                        plyr.media.currentTime = 0;\n                        plyr.media.muted = instance.isMuted();\n\n                        // Set title\n                        config.title = instance.getVideoData().title;\n\n                        // Set the tabindex\n                        if (plyr.supported.full) {\n                            plyr.media.querySelector('iframe').setAttribute('tabindex', '-1');\n                        }\n\n                        // Update UI\n                        _embedReady();\n\n                        // Trigger timeupdate\n                        _triggerEvent(plyr.media, 'timeupdate');\n\n                        // Trigger timeupdate\n                        _triggerEvent(plyr.media, 'durationchange');\n\n                        // Reset timer\n                        window.clearInterval(timers.buffering);\n\n                        // Setup buffering\n                        timers.buffering = window.setInterval(function() {\n                            // Get loaded % from YouTube\n                            plyr.media.buffered = instance.getVideoLoadedFraction();\n\n                            // Trigger progress only when we actually buffer something\n                            if (plyr.media.lastBuffered === null || plyr.media.lastBuffered < plyr.media.buffered) {\n                                _triggerEvent(plyr.media, 'progress');\n                            }\n\n                            // Set last buffer point\n                            plyr.media.lastBuffered = plyr.media.buffered;\n\n                            // Bail if we're at 100%\n                            if (plyr.media.buffered === 1) {\n                                window.clearInterval(timers.buffering);\n\n                                // Trigger event\n                                _triggerEvent(plyr.media, 'canplaythrough');\n                            }\n                        }, 200);\n                    },\n                    'onStateChange': function(event) {\n                        // Get the instance\n                        var instance = event.target;\n\n                        // Reset timer\n                        window.clearInterval(timers.playing);\n\n                        // Handle events\n                        // -1   Unstarted\n                        // 0    Ended\n                        // 1    Playing\n                        // 2    Paused\n                        // 3    Buffering\n                        // 5    Video cued\n                        switch (event.data) {\n                            case 0:\n                                plyr.media.paused = true;\n                                _triggerEvent(plyr.media, 'ended');\n                                break;\n\n                            case 1:\n                                plyr.media.paused = false;\n\n                                // If we were seeking, fire seeked event\n                                if (plyr.media.seeking) {\n                                    _triggerEvent(plyr.media, 'seeked');\n                                }\n\n                                plyr.media.seeking = false;\n                                _triggerEvent(plyr.media, 'play');\n                                _triggerEvent(plyr.media, 'playing');\n\n                                // Poll to get playback progress\n                                timers.playing = window.setInterval(function() {\n                                    // Set the current time\n                                    plyr.media.currentTime = instance.getCurrentTime();\n\n                                    // Trigger timeupdate\n                                    _triggerEvent(plyr.media, 'timeupdate');\n                                }, 100);\n\n                                // Check duration again due to YouTube bug\n                                // https://github.com/sampotts/plyr/issues/374\n                                // https://code.google.com/p/gdata-issues/issues/detail?id=8690\n                                if (plyr.media.duration !== instance.getDuration()) {\n                                    plyr.media.duration = instance.getDuration();\n                                    _triggerEvent(plyr.media, 'durationchange');\n                                }\n\n                                break;\n\n                            case 2:\n                                plyr.media.paused = true;\n                                _triggerEvent(plyr.media, 'pause');\n                                break;\n                        }\n\n                        _triggerEvent(plyr.container, 'statechange', false, {\n                            code: event.data\n                        });\n                    }\n                }\n            });\n        }\n\n        // Vimeo ready\n        function _vimeoReady(mediaId, container) {\n            // Setup instance\n            // https://github.com/vimeo/player.js\n            plyr.embed = new window.Vimeo.Player(container, {\n                id:         parseInt(mediaId),\n                loop:       config.loop,\n                autoplay:   config.autoplay,\n                byline:     false,\n                portrait:   false,\n                title:      false\n            });\n\n            // Create a faux HTML5 API using the Vimeo API\n            plyr.media.play = function() {\n                plyr.embed.play();\n                plyr.media.paused = false;\n            };\n            plyr.media.pause = function() {\n                plyr.embed.pause();\n                plyr.media.paused = true;\n            };\n            plyr.media.stop = function() {\n                plyr.embed.stop();\n                plyr.media.paused = true;\n            };\n\n            plyr.media.paused = true;\n            plyr.media.currentTime = 0;\n\n            // Update UI\n            _embedReady();\n\n            plyr.embed.getCurrentTime().then(function(value) {\n                plyr.media.currentTime = value;\n\n                // Trigger timeupdate\n                _triggerEvent(plyr.media, 'timeupdate');\n            });\n\n            plyr.embed.getDuration().then(function(value) {\n                plyr.media.duration = value;\n\n                // Trigger timeupdate\n                _triggerEvent(plyr.media, 'durationchange');\n            });\n\n            // TODO: Captions\n            /*if (config.captions.defaultActive) {\n                plyr.embed.enableTextTrack('en');\n            }*/\n\n            plyr.embed.on('loaded', function() {\n                // Fix keyboard focus issues\n                // https://github.com/sampotts/plyr/issues/317\n                if (_is.htmlElement(plyr.embed.element) && plyr.supported.full) {\n                    plyr.embed.element.setAttribute('tabindex', '-1');\n                }\n            });\n\n            plyr.embed.on('play', function() {\n                plyr.media.paused = false;\n                _triggerEvent(plyr.media, 'play');\n                _triggerEvent(plyr.media, 'playing');\n            });\n\n            plyr.embed.on('pause', function() {\n                plyr.media.paused = true;\n                _triggerEvent(plyr.media, 'pause');\n            });\n\n            plyr.embed.on('timeupdate', function(data) {\n                plyr.media.seeking = false;\n                plyr.media.currentTime = data.seconds;\n                _triggerEvent(plyr.media, 'timeupdate');\n            });\n\n            plyr.embed.on('progress', function(data) {\n                plyr.media.buffered = data.percent;\n                _triggerEvent(plyr.media, 'progress');\n\n                if (parseInt(data.percent) === 1) {\n                    // Trigger event\n                    _triggerEvent(plyr.media, 'canplaythrough');\n                }\n            });\n\n            plyr.embed.on('seeked', function() {\n                plyr.media.seeking = false;\n                _triggerEvent(plyr.media, 'seeked');\n                _triggerEvent(plyr.media, 'play');\n            });\n\n            plyr.embed.on('ended', function() {\n                plyr.media.paused = true;\n                _triggerEvent(plyr.media, 'ended');\n            });\n        }\n\n        // Soundcloud ready\n        function _soundcloudReady() {\n            /* jshint validthis: true */\n            plyr.embed = window.SC.Widget(this);\n\n            // Setup on ready\n            plyr.embed.bind(window.SC.Widget.Events.READY, function() {\n                // Create a faux HTML5 API using the Soundcloud API\n                plyr.media.play = function() {\n                    plyr.embed.play();\n                    plyr.media.paused = false;\n                };\n                plyr.media.pause = function() {\n                    plyr.embed.pause();\n                    plyr.media.paused = true;\n                };\n                plyr.media.stop = function() {\n                    plyr.embed.seekTo(0);\n                    plyr.embed.pause();\n                    plyr.media.paused = true;\n                };\n\n                plyr.media.paused = true;\n                plyr.media.currentTime = 0;\n\n                plyr.embed.getDuration(function(value) {\n                    plyr.media.duration = value/1000;\n\n                    // Update UI\n                    _embedReady();\n                });\n\n                plyr.embed.getPosition(function(value) {\n                    plyr.media.currentTime = value;\n\n                    // Trigger timeupdate\n                    _triggerEvent(plyr.media, 'timeupdate');\n                });\n\n                plyr.embed.bind(window.SC.Widget.Events.PLAY, function() {\n                    plyr.media.paused = false;\n                    _triggerEvent(plyr.media, 'play');\n                    _triggerEvent(plyr.media, 'playing');\n                });\n\n                plyr.embed.bind(window.SC.Widget.Events.PAUSE, function() {\n                    plyr.media.paused = true;\n                    _triggerEvent(plyr.media, 'pause');\n                });\n\n                plyr.embed.bind(window.SC.Widget.Events.PLAY_PROGRESS, function(data) {\n                    plyr.media.seeking = false;\n                    plyr.media.currentTime = data.currentPosition/1000;\n                    _triggerEvent(plyr.media, 'timeupdate');\n                });\n\n                plyr.embed.bind(window.SC.Widget.Events.LOAD_PROGRESS, function(data) {\n                    plyr.media.buffered = data.loadProgress;\n                    _triggerEvent(plyr.media, 'progress');\n\n                    if (parseInt(data.loadProgress) === 1) {\n                        // Trigger event\n                        _triggerEvent(plyr.media, 'canplaythrough');\n                    }\n                });\n\n                plyr.embed.bind(window.SC.Widget.Events.FINISH, function() {\n                    plyr.media.paused = true;\n                    _triggerEvent(plyr.media, 'ended');\n                });\n            });\n        }\n\n        // Play media\n        function _play() {\n            if ('play' in plyr.media) {\n                plyr.media.play();\n            }\n        }\n\n        // Pause media\n        function _pause() {\n            if ('pause' in plyr.media) {\n                plyr.media.pause();\n            }\n        }\n\n        // Toggle playback\n        function _togglePlay(toggle) {\n            // True toggle\n            if (!_is.boolean(toggle)) {\n                toggle = plyr.media.paused;\n            }\n\n            if (toggle) {\n                _play();\n            } else {\n                _pause();\n            }\n\n            return toggle;\n        }\n\n        // Rewind\n        function _rewind(seekTime) {\n            // Use default if needed\n            if (!_is.number(seekTime)) {\n                seekTime = config.seekTime;\n            }\n            _seek(plyr.media.currentTime - seekTime);\n        }\n\n        // Fast forward\n        function _forward(seekTime) {\n            // Use default if needed\n            if (!_is.number(seekTime)) {\n                seekTime = config.seekTime;\n            }\n            _seek(plyr.media.currentTime + seekTime);\n        }\n\n        // Seek to time\n        // The input parameter can be an event or a number\n        function _seek(input) {\n            var targetTime  = 0,\n                paused      = plyr.media.paused,\n                duration    = _getDuration();\n\n            if (_is.number(input)) {\n                targetTime = input;\n            } else if (_is.object(input) && _inArray(['input', 'change'], input.type)) {\n                // It's the seek slider\n                // Seek to the selected time\n                targetTime = ((input.target.value / input.target.max) * duration);\n            }\n\n            // Normalise targetTime\n            if (targetTime < 0) {\n                targetTime = 0;\n            } else if (targetTime > duration) {\n                targetTime = duration;\n            }\n\n            // Update seek range and progress\n            _updateSeekDisplay(targetTime);\n\n            // Set the current time\n            // Try/catch incase the media isn't set and we're calling seek() from source() and IE moans\n            try {\n                plyr.media.currentTime = targetTime.toFixed(4);\n            }\n            catch(e) {}\n\n            // Embeds\n            if (_inArray(config.types.embed, plyr.type)) {\n                switch(plyr.type) {\n                    case 'youtube':\n                        plyr.embed.seekTo(targetTime);\n                        break;\n\n                    case 'vimeo':\n                        // Round to nearest second for vimeo\n                        plyr.embed.setCurrentTime(targetTime.toFixed(0));\n                        break;\n\n                    case 'soundcloud':\n                        plyr.embed.seekTo(targetTime * 1000);\n                        break;\n                }\n\n                if (paused) {\n                    _pause();\n                }\n\n                // Trigger timeupdate\n                _triggerEvent(plyr.media, 'timeupdate');\n\n                // Set seeking flag\n                plyr.media.seeking = true;\n\n                // Trigger seeking\n                _triggerEvent(plyr.media, 'seeking');\n            }\n\n            // Logging\n            _log('Seeking to ' + plyr.media.currentTime + ' seconds');\n\n            // Special handling for 'manual' captions\n            _seekManualCaptions(targetTime);\n        }\n\n        // Get the duration (or custom if set)\n        function _getDuration() {\n            // It should be a number, but parse it just incase\n            var duration = parseInt(config.duration),\n\n            // True duration\n            mediaDuration = 0;\n\n            // Only if duration available\n            if (plyr.media.duration !== null && !isNaN(plyr.media.duration)) {\n                mediaDuration = plyr.media.duration;\n            }\n\n            // If custom duration is funky, use regular duration\n            return (isNaN(duration) ? mediaDuration : duration);\n        }\n\n        // Check playing state\n        function _checkPlaying() {\n            _toggleClass(plyr.container, config.classes.playing, !plyr.media.paused);\n\n            _toggleClass(plyr.container, config.classes.stopped, plyr.media.paused);\n\n            _toggleControls(plyr.media.paused);\n        }\n\n        // Save scroll position\n        function _saveScrollPosition() {\n            scroll = {\n                x: window.pageXOffset || 0,\n                y: window.pageYOffset || 0\n            };\n        }\n\n        // Restore scroll position\n        function _restoreScrollPosition() {\n            window.scrollTo(scroll.x, scroll.y);\n        }\n\n        // Toggle fullscreen\n        function _toggleFullscreen(event) {\n            // Check for native support\n            var nativeSupport = fullscreen.supportsFullScreen;\n\n            if (nativeSupport) {\n                // If it's a fullscreen change event, update the UI\n                if (event && event.type === fullscreen.fullScreenEventName) {\n                    plyr.isFullscreen = fullscreen.isFullScreen(plyr.container);\n                } else {\n                    // Else it's a user request to enter or exit\n                    if (!fullscreen.isFullScreen(plyr.container)) {\n                        // Save scroll position\n                        _saveScrollPosition();\n\n                        // Request full screen\n                        fullscreen.requestFullScreen(plyr.container);\n                    } else {\n                        // Bail from fullscreen\n                        fullscreen.cancelFullScreen();\n                    }\n\n                    // Check if we're actually full screen (it could fail)\n                    plyr.isFullscreen = fullscreen.isFullScreen(plyr.container);\n\n                    return;\n                }\n            } else {\n                // Otherwise, it's a simple toggle\n                plyr.isFullscreen = !plyr.isFullscreen;\n\n                // Bind/unbind escape key\n                document.body.style.overflow = plyr.isFullscreen ? 'hidden' : '';\n            }\n\n            // Set class hook\n            _toggleClass(plyr.container, config.classes.fullscreen.active, plyr.isFullscreen);\n\n            // Trap focus\n            _focusTrap(plyr.isFullscreen);\n\n            // Set button state\n            if (plyr.buttons && plyr.buttons.fullscreen) {\n                _toggleState(plyr.buttons.fullscreen, plyr.isFullscreen);\n            }\n\n            // Trigger an event\n            _triggerEvent(plyr.container, plyr.isFullscreen ? 'enterfullscreen' : 'exitfullscreen', true);\n\n            // Restore scroll position\n            if (!plyr.isFullscreen && nativeSupport) {\n                _restoreScrollPosition();\n            }\n        }\n\n        // Mute\n        function _toggleMute(muted) {\n            // If the method is called without parameter, toggle based on current value\n            if (!_is.boolean(muted)) {\n                muted = !plyr.media.muted;\n            }\n\n            // Set button state\n            _toggleState(plyr.buttons.mute, muted);\n\n            // Set mute on the player\n            plyr.media.muted = muted;\n\n            // If volume is 0 after unmuting, set to default\n            if (plyr.media.volume === 0) {\n                _setVolume(config.volume);\n            }\n\n            // Embeds\n            if (_inArray(config.types.embed, plyr.type)) {\n                // YouTube\n                switch(plyr.type) {\n                    case 'youtube':\n                        plyr.embed[plyr.media.muted ? 'mute' : 'unMute']();\n                        break;\n\n                    case 'vimeo':\n                    case 'soundcloud':\n                        plyr.embed.setVolume(plyr.media.muted ? 0 : parseFloat(config.volume / config.volumeMax));\n                        break;\n                }\n\n                // Trigger volumechange for embeds\n                _triggerEvent(plyr.media, 'volumechange');\n            }\n        }\n\n        // Set volume\n        function _setVolume(volume) {\n            var max = config.volumeMax,\n                min = config.volumeMin;\n\n            // Load volume from storage if no value specified\n            if (_is.undefined(volume)) {\n                volume = plyr.storage.volume;\n            }\n\n            // Use config if all else fails\n            if (volume === null || isNaN(volume)) {\n                volume = config.volume;\n            }\n\n            // Maximum is volumeMax\n            if (volume > max) {\n                volume = max;\n            }\n            // Minimum is volumeMin\n            if (volume < min) {\n                volume = min;\n            }\n\n            // Set the player volume\n            plyr.media.volume = parseFloat(volume / max);\n\n            // Set the display\n            if (plyr.volume.display) {\n                plyr.volume.display.value = volume;\n            }\n\n            // Embeds\n            if (_inArray(config.types.embed, plyr.type)) {\n                switch(plyr.type) {\n                    case 'youtube':\n                        plyr.embed.setVolume(plyr.media.volume * 100);\n                        break;\n\n                    case 'vimeo':\n                    case 'soundcloud':\n                        plyr.embed.setVolume(plyr.media.volume);\n                        break;\n                }\n\n                // Trigger volumechange for embeds\n                _triggerEvent(plyr.media, 'volumechange');\n            }\n\n            // Toggle muted state\n            if (volume === 0) {\n                plyr.media.muted = true;\n            } else if (plyr.media.muted && volume > 0) {\n                _toggleMute();\n            }\n        }\n\n        // Increase volume\n        function _increaseVolume(step) {\n            var volume = plyr.media.muted ? 0 : (plyr.media.volume * config.volumeMax);\n\n            if (!_is.number(step)) {\n                step = config.volumeStep;\n            }\n\n            _setVolume(volume + step);\n        }\n\n        // Decrease volume\n        function _decreaseVolume(step) {\n            var volume = plyr.media.muted ? 0 : (plyr.media.volume * config.volumeMax);\n\n            if (!_is.number(step)) {\n                step = config.volumeStep;\n            }\n\n            _setVolume(volume - step);\n        }\n\n        // Update volume UI and storage\n        function _updateVolume() {\n            // Get the current volume\n            var volume = plyr.media.muted ? 0 : (plyr.media.volume * config.volumeMax);\n\n            // Update the <input type=\"range\"> if present\n            if (plyr.supported.full) {\n                if (plyr.volume.input) {\n                    plyr.volume.input.value = volume;\n                }\n                if (plyr.volume.display) {\n                    plyr.volume.display.value = volume;\n                }\n            }\n\n            // Update the volume in storage\n            _updateStorage({volume: volume});\n\n            // Toggle class if muted\n            _toggleClass(plyr.container, config.classes.muted, (volume === 0));\n\n            // Update checkbox for mute state\n            if (plyr.supported.full && plyr.buttons.mute) {\n                _toggleState(plyr.buttons.mute, (volume === 0));\n            }\n        }\n\n        // Toggle captions\n        function _toggleCaptions(show) {\n            // If there's no full support, or there's no caption toggle\n            if (!plyr.supported.full || !plyr.buttons.captions) {\n                return;\n            }\n\n            // If the method is called without parameter, toggle based on current value\n            if (!_is.boolean(show)) {\n                show = (plyr.container.className.indexOf(config.classes.captions.active) === -1);\n            }\n\n            // Set global\n            plyr.captionsEnabled = show;\n\n            // Toggle state\n            _toggleState(plyr.buttons.captions, plyr.captionsEnabled);\n\n            // Add class hook\n            _toggleClass(plyr.container, config.classes.captions.active, plyr.captionsEnabled);\n\n            // Trigger an event\n            _triggerEvent(plyr.container, plyr.captionsEnabled ? 'captionsenabled' : 'captionsdisabled', true);\n\n            // Save captions state to localStorage\n            _updateStorage({captionsEnabled: plyr.captionsEnabled});\n        }\n\n        // Check if media is loading\n        function _checkLoading(event) {\n            var loading = (event.type === 'waiting');\n\n            // Clear timer\n            clearTimeout(timers.loading);\n\n            // Timer to prevent flicker when seeking\n            timers.loading = setTimeout(function() {\n                // Toggle container class hook\n                _toggleClass(plyr.container, config.classes.loading, loading);\n\n                // Show controls if loading, hide if done\n                _toggleControls(loading);\n            }, (loading ? 250 : 0));\n        }\n\n        // Update <progress> elements\n        function _updateProgress(event) {\n            if (!plyr.supported.full) {\n                return;\n            }\n\n            var progress    = plyr.progress.played,\n                value       = 0,\n                duration    = _getDuration();\n\n            if (event) {\n                switch (event.type) {\n                    // Video playing\n                    case 'timeupdate':\n                    case 'seeking':\n                        if (plyr.controls.pressed) {\n                            return;\n                        }\n\n                        value = _getPercentage(plyr.media.currentTime, duration);\n\n                        // Set seek range value only if it's a 'natural' time event\n                        if (event.type === 'timeupdate' && plyr.buttons.seek) {\n                            plyr.buttons.seek.value = value;\n                        }\n\n                        break;\n\n                    // Check buffer status\n                    case 'playing':\n                    case 'progress':\n                        progress    = plyr.progress.buffer;\n                        value       = (function() {\n                            var buffered = plyr.media.buffered;\n\n                            if (buffered && buffered.length) {\n                                // HTML5\n                                return _getPercentage(buffered.end(0), duration);\n                            } else if (_is.number(buffered)) {\n                                // YouTube returns between 0 and 1\n                                return (buffered * 100);\n                            }\n\n                            return 0;\n                        })();\n\n                        break;\n                }\n            }\n\n            // Set values\n            _setProgress(progress, value);\n        }\n\n        // Set <progress> value\n        function _setProgress(progress, value) {\n            if (!plyr.supported.full) {\n                return;\n            }\n\n            // Default to 0\n            if (_is.undefined(value)) {\n                value = 0;\n            }\n            // Default to buffer or bail\n            if (_is.undefined(progress)) {\n                if (plyr.progress && plyr.progress.buffer) {\n                    progress = plyr.progress.buffer;\n                } else {\n                    return;\n                }\n            }\n\n            // One progress element passed\n            if (_is.htmlElement(progress)) {\n                progress.value = value;\n            } else if (progress) {\n                // Object of progress + text element\n                if (progress.bar) {\n                    progress.bar.value = value;\n                }\n                if (progress.text) {\n                    progress.text.innerHTML = value;\n                }\n            }\n        }\n\n        // Update the displayed time\n        function _updateTimeDisplay(time, element) {\n            // Bail if there's no duration display\n            if (!element) {\n                return;\n            }\n\n            // Fallback to 0\n            if (isNaN(time)) {\n                time = 0;\n            }\n\n            plyr.secs = parseInt(time % 60);\n            plyr.mins = parseInt((time / 60) % 60);\n            plyr.hours = parseInt(((time / 60) / 60) % 60);\n\n            // Do we need to display hours?\n            var displayHours = (parseInt(((_getDuration() / 60) / 60) % 60) > 0);\n\n            // Ensure it's two digits. For example, 03 rather than 3.\n            plyr.secs = ('0' + plyr.secs).slice(-2);\n            plyr.mins = ('0' + plyr.mins).slice(-2);\n\n            // Render\n            element.innerHTML = (displayHours ? plyr.hours + ':' : '') + plyr.mins + ':' + plyr.secs;\n        }\n\n        // Show the duration on metadataloaded\n        function _displayDuration() {\n            if (!plyr.supported.full) {\n                return;\n            }\n\n            // Determine duration\n            var duration = _getDuration() || 0;\n\n            // If there's only one time display, display duration there\n            if (!plyr.duration && config.displayDuration && plyr.media.paused) {\n                _updateTimeDisplay(duration, plyr.currentTime);\n            }\n\n            // If there's a duration element, update content\n            if (plyr.duration) {\n                _updateTimeDisplay(duration, plyr.duration);\n            }\n\n            // Update the tooltip (if visible)\n            _updateSeekTooltip();\n        }\n\n        // Handle time change event\n        function _timeUpdate(event) {\n            // Duration\n            _updateTimeDisplay(plyr.media.currentTime, plyr.currentTime);\n\n            // Ignore updates while seeking\n            if (event && event.type === 'timeupdate' && plyr.media.seeking) {\n                return;\n            }\n\n            // Playing progress\n            _updateProgress(event);\n        }\n\n        // Update seek range and progress\n        function _updateSeekDisplay(time) {\n            // Default to 0\n            if (!_is.number(time)) {\n                time = 0;\n            }\n\n            var duration    = _getDuration(),\n                value       = _getPercentage(time, duration);\n\n            // Update progress\n            if (plyr.progress && plyr.progress.played) {\n                plyr.progress.played.value = value;\n            }\n\n            // Update seek range input\n            if (plyr.buttons && plyr.buttons.seek) {\n                plyr.buttons.seek.value = value;\n            }\n        }\n\n        // Update hover tooltip for seeking\n        function _updateSeekTooltip(event) {\n            var duration = _getDuration();\n\n            // Bail if setting not true\n            if (!config.tooltips.seek || !plyr.progress.container || duration === 0) {\n                return;\n            }\n\n            // Calculate percentage\n            var clientRect  = plyr.progress.container.getBoundingClientRect(),\n                percent     = 0,\n                visible     = config.classes.tooltip + '--visible';\n\n            // Determine percentage, if already visible\n            if (!event) {\n                if (_hasClass(plyr.progress.tooltip, visible)) {\n                    percent = plyr.progress.tooltip.style.left.replace('%', '');\n                } else {\n                    return;\n                }\n            } else {\n                percent = ((100 / clientRect.width) * (event.pageX - clientRect.left));\n            }\n\n            // Set bounds\n            if (percent < 0) {\n                percent = 0;\n            } else if (percent > 100) {\n                percent = 100;\n            }\n\n            // Display the time a click would seek to\n            _updateTimeDisplay(((duration / 100) * percent), plyr.progress.tooltip);\n\n            // Set position\n            plyr.progress.tooltip.style.left = percent + \"%\";\n\n            // Show/hide the tooltip\n            // If the event is a moues in/out and percentage is inside bounds\n            if (event && _inArray(['mouseenter', 'mouseleave'], event.type)) {\n                _toggleClass(plyr.progress.tooltip, visible, (event.type === 'mouseenter'));\n            }\n        }\n\n        // Show the player controls in fullscreen mode\n        function _toggleControls(toggle) {\n            // Don't hide if config says not to, it's audio, or not ready or loading\n            if (!config.hideControls || plyr.type === 'audio') {\n                return;\n            }\n\n            var delay = 0,\n                isEnterFullscreen = false,\n                show = toggle,\n                loading = _hasClass(plyr.container, config.classes.loading);\n\n            // Default to false if no boolean\n            if (!_is.boolean(toggle)) {\n                if (toggle && toggle.type) {\n                    // Is the enter fullscreen event\n                    isEnterFullscreen = (toggle.type === 'enterfullscreen');\n\n                    // Whether to show controls\n                    show = _inArray(['mousemove', 'touchstart', 'mouseenter', 'focus'], toggle.type);\n\n                    // Delay hiding on move events\n                    if (_inArray(['mousemove', 'touchmove'], toggle.type)) {\n                        delay = 2000;\n                    }\n\n                    // Delay a little more for keyboard users\n                    if (toggle.type === 'focus') {\n                        delay = 3000;\n                    }\n                } else {\n                    show = _hasClass(plyr.container, config.classes.hideControls);\n                }\n            }\n\n            // Clear timer every movement\n            window.clearTimeout(timers.hover);\n\n            // If the mouse is not over the controls, set a timeout to hide them\n            if (show || plyr.media.paused || loading) {\n                _toggleClass(plyr.container, config.classes.hideControls, false);\n\n                // Always show controls when paused or if touch\n                if (plyr.media.paused || loading) {\n                    return;\n                }\n\n                // Delay for hiding on touch\n                if (plyr.browser.isTouch) {\n                    delay = 3000;\n                }\n            }\n\n            // If toggle is false or if we're playing (regardless of toggle),\n            // then set the timer to hide the controls\n            if (!show || !plyr.media.paused) {\n                timers.hover = window.setTimeout(function() {\n                    // If the mouse is over the controls (and not entering fullscreen), bail\n                    if ((plyr.controls.pressed || plyr.controls.hover) && !isEnterFullscreen) {\n                        return;\n                    }\n\n                    _toggleClass(plyr.container, config.classes.hideControls, true);\n                }, delay);\n            }\n        }\n\n        // Add common function to retrieve media source\n        function _source(source) {\n            // If not null or undefined, parse it\n            if (!_is.undefined(source)) {\n                _updateSource(source);\n                return;\n            }\n\n            // Return the current source\n            var url;\n            switch(plyr.type) {\n                case 'youtube':\n                    url = plyr.embed.getVideoUrl();\n                    break;\n\n                case 'vimeo':\n                    plyr.embed.getVideoUrl.then(function (value) {\n                        url = value;\n                    });\n                    break;\n\n                case 'soundcloud':\n                    plyr.embed.getCurrentSound(function(object) {\n                        url = object.permalink_url;\n                    });\n                    break;\n\n                default:\n                    url = plyr.media.currentSrc;\n                    break;\n            }\n\n            return url || '';\n        }\n\n        // Update source\n        // Sources are not checked for support so be careful\n        function _updateSource(source) {\n            if (!_is.object(source) || !('sources' in source) || !source.sources.length) {\n                _warn('Invalid source format');\n                return;\n            }\n\n            // Remove ready class hook\n            _toggleClass(plyr.container, config.classes.ready, false);\n\n            // Pause playback\n            _pause();\n\n            // Update seek range and progress\n            _updateSeekDisplay();\n\n            // Reset buffer progress\n            _setProgress();\n\n            // Cancel current network requests\n            _cancelRequests();\n\n            // Setup new source\n            function setup() {\n                // Remove embed object\n                plyr.embed = null;\n\n                // Remove the old media\n                _remove(plyr.media);\n\n                // Remove video container\n                if (plyr.type === 'video' && plyr.videoContainer) {\n                    _remove(plyr.videoContainer);\n                }\n\n                // Reset class name\n                if (plyr.container) {\n                    plyr.container.removeAttribute('class');\n                }\n\n                // Set the type\n                if ('type' in source) {\n                    plyr.type = source.type;\n\n                    // Get child type for video (it might be an embed)\n                    if (plyr.type === 'video') {\n                        var firstSource = source.sources[0];\n\n                        if ('type' in firstSource && _inArray(config.types.embed, firstSource.type)) {\n                            plyr.type = firstSource.type;\n                        }\n                    }\n                }\n\n                // Check for support\n                plyr.supported = supported(plyr.type);\n\n                // Create new markup\n                switch(plyr.type) {\n                    case 'video':\n                        plyr.media = document.createElement('video');\n                        break;\n\n                    case 'audio':\n                        plyr.media = document.createElement('audio');\n                        break;\n\n                    case 'youtube':\n                    case 'vimeo':\n                    case 'soundcloud':\n                        plyr.media = document.createElement('div');\n                        plyr.embedId = source.sources[0].src;\n                        break;\n                }\n\n                // Inject the new element\n                _prependChild(plyr.container, plyr.media);\n\n                // Autoplay the new source?\n                if (_is.boolean(source.autoplay)) {\n                    config.autoplay = source.autoplay;\n                }\n\n                // Set attributes for audio and video\n                if (_inArray(config.types.html5, plyr.type)) {\n                    if (config.crossorigin) {\n                        plyr.media.setAttribute('crossorigin', '');\n                    }\n                    if (config.autoplay) {\n                        plyr.media.setAttribute('autoplay', '');\n                    }\n                    if ('poster' in source) {\n                        plyr.media.setAttribute('poster', source.poster);\n                    }\n                    if (config.loop) {\n                        plyr.media.setAttribute('loop', '');\n                    }\n                }\n\n                // Restore class hooks\n                _toggleClass(plyr.container, config.classes.fullscreen.active, plyr.isFullscreen);\n                _toggleClass(plyr.container, config.classes.captions.active, plyr.captionsEnabled);\n                _toggleStyleHook();\n\n                // Set new sources for html5\n                if (_inArray(config.types.html5, plyr.type)) {\n                    _insertChildElements('source', source.sources);\n                }\n\n                // Set up from scratch\n                _setupMedia();\n\n                // HTML5 stuff\n                if (_inArray(config.types.html5, plyr.type)) {\n                    // Setup captions\n                    if ('tracks' in source) {\n                        _insertChildElements('track', source.tracks);\n                    }\n\n                    // Load HTML5 sources\n                    plyr.media.load();\n                }\n\n                // If HTML5 or embed but not fully supported, setupInterface and call ready now\n                if (_inArray(config.types.html5, plyr.type) || (_inArray(config.types.embed, plyr.type) && !plyr.supported.full)) {\n                    // Setup interface\n                    _setupInterface();\n\n                    // Call ready\n                    _ready();\n                }\n\n                // Set aria title and iframe title\n                config.title = source.title;\n                _setTitle();\n            }\n\n            // Destroy instance adn wait for callback\n            // Vimeo throws a wobbly if you don't wait\n            _destroy(setup, false);\n        }\n\n        // Update poster\n        function _updatePoster(source) {\n            if (plyr.type === 'video') {\n                plyr.media.setAttribute('poster', source);\n            }\n        }\n\n        // Listen for control events\n        function _controlListeners() {\n            // IE doesn't support input event, so we fallback to change\n            var inputEvent = (plyr.browser.isIE ? 'change' : 'input');\n\n            // Click play/pause helper\n            function togglePlay() {\n                var play = _togglePlay();\n\n                // Determine which buttons\n                var trigger = plyr.buttons[play ? 'play' : 'pause'],\n                    target = plyr.buttons[play ? 'pause' : 'play'];\n\n                // Get the last play button to account for the large play button\n                if (target && target.length > 1) {\n                    target = target[target.length - 1];\n                } else {\n                    target = target[0];\n                }\n\n                // Setup focus and tab focus\n                if (target) {\n                    var hadTabFocus = _hasClass(trigger, config.classes.tabFocus);\n\n                    setTimeout(function() {\n                        target.focus();\n\n                        if (hadTabFocus) {\n                            _toggleClass(trigger, config.classes.tabFocus, false);\n                            _toggleClass(target, config.classes.tabFocus, true);\n                        }\n                    }, 100);\n                }\n            }\n\n            // Get the focused element\n            function getFocusElement() {\n                var focused = document.activeElement;\n\n                if (!focused || focused === document.body) {\n                    focused = null;\n                } else {\n                    focused = document.querySelector(':focus');\n                }\n\n                return focused;\n            }\n\n            // Get the key code for an event\n            function getKeyCode(event) {\n                return event.keyCode ? event.keyCode : event.which;\n            }\n\n            // Detect tab focus\n            function checkTabFocus(focused) {\n                for (var button in plyr.buttons) {\n                    var element = plyr.buttons[button];\n\n                    if (_is.nodeList(element)) {\n                        for (var i = 0; i < element.length; i++) {\n                            _toggleClass(element[i], config.classes.tabFocus, (element[i] === focused));\n                        }\n                    } else {\n                        _toggleClass(element, config.classes.tabFocus, (element === focused));\n                    }\n                }\n            }\n\n            // Keyboard shortcuts\n            if (config.keyboardShorcuts.focused) {\n                var last = null;\n\n                // Handle global presses\n                if (config.keyboardShorcuts.global) {\n                    _on(window, 'keydown keyup', function(event) {\n                        var code = getKeyCode(event),\n                        focused = getFocusElement(),\n                        allowed = [48,49,50,51,52,53,54,56,57,75,77,70,67],\n                        count   = get().length;\n\n                        // Only handle global key press if there's only one player\n                        // and the key is in the allowed keys\n                        // and if the focused element is not editable (e.g. text input)\n                        // and any that accept key input http://webaim.org/techniques/keyboard/\n                        if (count === 1 && _inArray(allowed, code) && (!_is.htmlElement(focused) || !_matches(focused, config.selectors.editable))) {\n                            handleKey(event);\n                        }\n                    });\n                }\n\n                // Handle presses on focused\n                _on(plyr.container, 'keydown keyup', handleKey);\n            }\n\n            function handleKey(event) {\n                var code = getKeyCode(event),\n                    pressed = event.type === 'keydown',\n                    held = pressed && code === last;\n\n                // If the event is bubbled from the media element\n                // Firefox doesn't get the keycode for whatever reason\n                if (!_is.number(code)) {\n                    return;\n                }\n\n                // Seek by the number keys\n                function seekByKey() {\n                    // Get current duration\n                    var duration = plyr.media.duration;\n\n                    // Bail if we have no duration set\n                    if (!_is.number(duration)) {\n                        return;\n                    }\n\n                    // Divide the max duration into 10th's and times by the number value\n                    _seek((duration / 10) * (code - 48));\n                }\n\n                // Handle the key on keydown\n                // Reset on keyup\n                if (pressed) {\n                    // Which keycodes should we prevent default\n                    var preventDefault = [48,49,50,51,52,53,54,56,57,32,75,38,40,77,39,37,70,67];\n\n                    // If the code is found prevent default (e.g. prevent scrolling for arrows)\n                    if (_inArray(preventDefault, code)) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n\n                    switch(code) {\n                        // 0-9\n                        case 48:\n                        case 49:\n                        case 50:\n                        case 51:\n                        case 52:\n                        case 53:\n                        case 54:\n                        case 55:\n                        case 56:\n                        case 57: if (!held) { seekByKey(); } break;\n                        // Space and K key\n                        case 32:\n                        case 75: if (!held) { _togglePlay(); } break;\n                        // Arrow up\n                        case 38: _increaseVolume(); break;\n                        // Arrow down\n                        case 40: _decreaseVolume(); break;\n                        // M key\n                        case 77: if (!held) { _toggleMute() } break;\n                        // Arrow forward\n                        case 39: _forward(); break;\n                        // Arrow back\n                        case 37: _rewind(); break;\n                        // F key\n                        case 70: _toggleFullscreen(); break;\n                        // C key\n                        case 67: if (!held) { _toggleCaptions(); } break;\n                    }\n\n                    // Escape is handle natively when in full screen\n                    // So we only need to worry about non native\n                    if (!fullscreen.supportsFullScreen && plyr.isFullscreen && code === 27) {\n                        _toggleFullscreen();\n                    }\n\n                    // Store last code for next cycle\n                    last = code;\n                } else {\n                    last = null;\n                }\n            }\n\n            // Focus/tab management\n            _on(window, 'keyup', function(event) {\n                var code = getKeyCode(event),\n                    focused = getFocusElement();\n\n                if (code === 9) {\n                    checkTabFocus(focused);\n                }\n            });\n            _on(document.body, 'click', function() {\n                _toggleClass(_getElement('.' + config.classes.tabFocus), config.classes.tabFocus, false);\n            });\n            for (var button in plyr.buttons) {\n                var element = plyr.buttons[button];\n\n                _on(element, 'blur', function() {\n                    _toggleClass(element, 'tab-focus', false);\n                });\n            }\n\n            // Play\n            _proxyListener(plyr.buttons.play, 'click', config.listeners.play, togglePlay);\n\n            // Pause\n            _proxyListener(plyr.buttons.pause, 'click', config.listeners.pause, togglePlay);\n\n            // Restart\n            _proxyListener(plyr.buttons.restart, 'click', config.listeners.restart, _seek);\n\n            // Rewind\n            _proxyListener(plyr.buttons.rewind, 'click', config.listeners.rewind, _rewind);\n\n            // Fast forward\n            _proxyListener(plyr.buttons.forward, 'click', config.listeners.forward, _forward);\n\n            // Seek\n            _proxyListener(plyr.buttons.seek, inputEvent, config.listeners.seek, _seek);\n\n            // Set volume\n            _proxyListener(plyr.volume.input, inputEvent, config.listeners.volume, function() {\n                _setVolume(plyr.volume.input.value);\n            });\n\n            // Mute\n            _proxyListener(plyr.buttons.mute, 'click', config.listeners.mute, _toggleMute);\n\n            // Fullscreen\n            _proxyListener(plyr.buttons.fullscreen, 'click', config.listeners.fullscreen, _toggleFullscreen);\n\n            // Handle user exiting fullscreen by escaping etc\n            if (fullscreen.supportsFullScreen) {\n                _on(document, fullscreen.fullScreenEventName, _toggleFullscreen);\n            }\n\n            // Captions\n            _proxyListener(plyr.buttons.captions, 'click', config.listeners.captions, _toggleCaptions);\n\n            // Seek tooltip\n            _on(plyr.progress.container, 'mouseenter mouseleave mousemove', _updateSeekTooltip);\n\n            // Toggle controls visibility based on mouse movement\n            if (config.hideControls) {\n                // Toggle controls on mouse events and entering fullscreen\n                _on(plyr.container, 'mouseenter mouseleave mousemove touchstart touchend touchcancel touchmove enterfullscreen', _toggleControls);\n\n                // Watch for cursor over controls so they don't hide when trying to interact\n                _on(plyr.controls, 'mouseenter mouseleave', function(event) {\n                    plyr.controls.hover = event.type === 'mouseenter';\n                });\n\n                 // Watch for cursor over controls so they don't hide when trying to interact\n                _on(plyr.controls, 'mousedown mouseup touchstart touchend touchcancel', function(event) {\n                    plyr.controls.pressed = _inArray(['mousedown', 'touchstart'], event.type);\n                });\n\n                // Focus in/out on controls\n                _on(plyr.controls, 'focus blur', _toggleControls, true);\n            }\n\n            // Adjust volume on scroll\n            _on(plyr.volume.input, 'wheel', function(event) {\n                event.preventDefault();\n\n                // Detect \"natural\" scroll - suppored on OS X Safari only\n                // Other browsers on OS X will be inverted until support improves\n                var inverted = event.webkitDirectionInvertedFromDevice,\n                    step = (config.volumeStep / 5);\n\n                // Scroll down (or up on natural) to decrease\n                if (event.deltaY < 0 || event.deltaX > 0) {\n                    if (inverted) {\n                        _decreaseVolume(step);\n                    } else {\n                        _increaseVolume(step);\n                    }\n                }\n\n                // Scroll up (or down on natural) to increase\n                if (event.deltaY > 0 || event.deltaX < 0) {\n                    if (inverted) {\n                        _increaseVolume(step);\n                    } else {\n                        _decreaseVolume(step);\n                    }\n                }\n            });\n        }\n\n        // Listen for media events\n        function _mediaListeners() {\n            // Time change on media\n            _on(plyr.media, 'timeupdate seeking', _timeUpdate);\n\n            // Update manual captions\n            _on(plyr.media, 'timeupdate', _seekManualCaptions);\n\n            // Display duration\n            _on(plyr.media, 'durationchange loadedmetadata', _displayDuration);\n\n            // Handle the media finishing\n            _on(plyr.media, 'ended', function() {\n                // Show poster on end\n                if (plyr.type === 'video' && config.showPosterOnEnd) {\n                    // Clear\n                    if (plyr.type === 'video') {\n                        _setCaption();\n                    }\n\n                    // Restart\n                    _seek();\n\n                    // Re-load media\n                    plyr.media.load();\n                }\n            });\n\n            // Check for buffer progress\n            _on(plyr.media, 'progress playing', _updateProgress);\n\n            // Handle native mute\n            _on(plyr.media, 'volumechange', _updateVolume);\n\n            // Handle native play/pause\n            _on(plyr.media, 'play pause ended', _checkPlaying);\n\n            // Loading\n            _on(plyr.media, 'waiting canplay seeked', _checkLoading);\n\n            // Click video\n            if (config.clickToPlay && plyr.type !== 'audio') {\n                // Re-fetch the wrapper\n                var wrapper = _getElement('.' + config.classes.videoWrapper);\n\n                // Bail if there's no wrapper (this should never happen)\n                if (!wrapper) {\n                    return;\n                }\n\n                // Set cursor\n                wrapper.style.cursor = \"pointer\";\n\n                // On click play, pause ore restart\n                _on(wrapper, 'click', function() {\n                    // Touch devices will just show controls (if we're hiding controls)\n                    if (config.hideControls && plyr.browser.isTouch && !plyr.media.paused) {\n                        return;\n                    }\n\n                    if (plyr.media.paused) {\n                        _play();\n                    } else if (plyr.media.ended) {\n                        _seek();\n                        _play();\n                    } else {\n                        _pause();\n                    }\n                });\n            }\n\n            // Disable right click\n            if (config.disableContextMenu) {\n                _on(plyr.media, 'contextmenu', function(event) { event.preventDefault(); });\n            }\n\n            // Proxy events to container\n            // Bubble up key events for Edge\n            _on(plyr.media, config.events.concat(['keyup', 'keydown']).join(' '), function(event) {\n                _triggerEvent(plyr.container, event.type, true);\n            });\n        }\n\n        // Cancel current network requests\n        // See https://github.com/sampotts/plyr/issues/174\n        function _cancelRequests() {\n            if (!_inArray(config.types.html5, plyr.type)) {\n                return;\n            }\n\n            // Remove child sources\n            var sources = plyr.media.querySelectorAll('source');\n            for (var i = 0; i < sources.length; i++) {\n                _remove(sources[i]);\n            }\n\n            // Set blank video src attribute\n            // This is to prevent a MEDIA_ERR_SRC_NOT_SUPPORTED error\n            // Info: http://stackoverflow.com/questions/32231579/how-to-properly-dispose-of-an-html5-video-and-close-socket-or-connection\n            plyr.media.setAttribute('src', config.blankUrl);\n\n            // Load the new empty source\n            // This will cancel existing requests\n            // See https://github.com/sampotts/plyr/issues/174\n            plyr.media.load();\n\n            // Debugging\n            _log('Cancelled network requests');\n        }\n\n        // Destroy an instance\n        // Event listeners are removed when elements are removed\n        // http://stackoverflow.com/questions/12528049/if-a-dom-element-is-removed-are-its-listeners-also-removed-from-memory\n        function _destroy(callback, restore) {\n            // Bail if the element is not initialized\n            if (!plyr.init) {\n                return null;\n            }\n\n            // Type specific stuff\n            switch (plyr.type) {\n                case 'youtube':\n                    // Clear timers\n                    window.clearInterval(timers.buffering);\n                    window.clearInterval(timers.playing);\n\n                    // Destroy YouTube API\n                    plyr.embed.destroy();\n\n                    // Clean up\n                    cleanUp();\n\n                    break;\n\n                case 'vimeo':\n                    // Destroy Vimeo API\n                    // then clean up (wait, to prevent postmessage errors)\n                    plyr.embed.unload().then(cleanUp);\n\n                    // Vimeo does not always return\n                    timers.cleanUp = window.setTimeout(cleanUp, 200);\n\n                    break;\n\n                case 'video':\n                case 'audio':\n                    // Restore native video controls\n                    _toggleNativeControls(true);\n\n                    // Clean up\n                    cleanUp();\n\n                    break;\n            }\n\n            function cleanUp() {\n                clearTimeout(timers.cleanUp);\n\n                // Default to restore original element\n                if (!_is.boolean(restore)) {\n                    restore = true;\n                }\n\n                // Callback\n                if (_is.function(callback)) {\n                    callback.call(original);\n                }\n\n                // Bail if we don't need to restore the original element\n                if (!restore) {\n                    return;\n                }\n\n                // Remove init flag\n                plyr.init = false;\n\n                // Replace the container with the original element provided\n                plyr.container.parentNode.replaceChild(original, plyr.container);\n\n                // Allow overflow (set on fullscreen)\n                document.body.style.overflow = '';\n\n                // Event\n                _triggerEvent(original, 'destroyed', true);\n            }\n        }\n\n        // Setup a player\n        function _init() {\n            // Bail if the element is initialized\n            if (plyr.init) {\n                return null;\n            }\n\n            // Setup the fullscreen api\n            fullscreen = _fullscreen();\n\n            // Sniff out the browser\n            plyr.browser = _browserSniff();\n\n            // Bail if nothing to setup\n            if (!_is.htmlElement(plyr.media)) {\n                return;\n            }\n\n            // Load saved settings from localStorage\n            _setupStorage();\n\n            // Set media type based on tag or data attribute\n            // Supported: video, audio, vimeo, youtube\n            var tagName = media.tagName.toLowerCase();\n            if (tagName === 'div') {\n                plyr.type     = media.getAttribute('data-type');\n                plyr.embedId  = media.getAttribute('data-video-id');\n\n                // Clean up\n                media.removeAttribute('data-type');\n                media.removeAttribute('data-video-id');\n            } else {\n                plyr.type           = tagName;\n                config.crossorigin  = (media.getAttribute('crossorigin') !== null);\n                config.autoplay     = (config.autoplay || (media.getAttribute('autoplay') !== null));\n                config.loop         = (config.loop || (media.getAttribute('loop') !== null));\n            }\n\n            // Check for support\n            plyr.supported = supported(plyr.type);\n\n            // If no native support, bail\n            if (!plyr.supported.basic) {\n                return;\n            }\n\n            // Wrap media\n            plyr.container = _wrap(media, document.createElement('div'));\n\n            // Allow focus to be captured\n            plyr.container.setAttribute('tabindex', 0);\n\n            // Add style hook\n            _toggleStyleHook();\n\n            // Debug info\n            _log('' + plyr.browser.name + ' ' + plyr.browser.version);\n\n            // Setup media\n            _setupMedia();\n\n            // Setup interface\n            // If embed but not fully supported, setupInterface (to avoid flash of controls) and call ready now\n            if (_inArray(config.types.html5, plyr.type) || (_inArray(config.types.embed, plyr.type) && !plyr.supported.full)) {\n                // Setup UI\n                _setupInterface();\n\n                // Call ready\n                _ready();\n\n                // Set title on button and frame\n                _setTitle();\n            }\n\n            // Successful setup\n            plyr.init = true;\n        }\n\n        // Setup the UI\n        function _setupInterface() {\n            // Don't setup interface if no support\n            if (!plyr.supported.full) {\n                _warn('Basic support only', plyr.type);\n\n                // Remove controls\n                _remove(_getElement(config.selectors.controls.wrapper));\n\n                // Remove large play\n                _remove(_getElement(config.selectors.buttons.play));\n\n                // Restore native controls\n                _toggleNativeControls(true);\n\n                // Bail\n                return;\n            }\n\n            // Inject custom controls if not present\n            var controlsMissing = !_getElements(config.selectors.controls.wrapper).length;\n            if (controlsMissing) {\n                // Inject custom controls\n                _injectControls();\n            }\n\n            // Find the elements\n            if (!_findElements()) {\n                return;\n            }\n\n            // If the controls are injected, re-bind listeners for controls\n            if (controlsMissing) {\n                _controlListeners();\n            }\n\n            // Media element listeners\n            _mediaListeners();\n\n            // Remove native controls\n            _toggleNativeControls();\n\n            // Setup fullscreen\n            _setupFullscreen();\n\n            // Captions\n            _setupCaptions();\n\n            // Set volume\n            _setVolume();\n            _updateVolume();\n\n            // Reset time display\n            _timeUpdate();\n\n            // Update the UI\n            _checkPlaying();\n        }\n\n        api = {\n            getOriginal:        function() { return original; },\n            getContainer:       function() { return plyr.container },\n            getEmbed:           function() { return plyr.embed; },\n            getMedia:           function() { return plyr.media; },\n            getType:            function() { return plyr.type; },\n            getDuration:        _getDuration,\n            getCurrentTime:     function() { return plyr.media.currentTime; },\n            getVolume:          function() { return plyr.media.volume; },\n            isMuted:            function() { return plyr.media.muted; },\n            isReady:            function() { return _hasClass(plyr.container, config.classes.ready); },\n            isLoading:          function() { return _hasClass(plyr.container, config.classes.loading); },\n            isPaused:           function() { return plyr.media.paused; },\n            on:                 function(event, callback) { _on(plyr.container, event, callback); return this; },\n            play:               _play,\n            pause:              _pause,\n            stop:               function() { _pause(); _seek(); },\n            restart:            _seek,\n            rewind:             _rewind,\n            forward:            _forward,\n            seek:               _seek,\n            source:             _source,\n            poster:             _updatePoster,\n            setVolume:          _setVolume,\n            togglePlay:         _togglePlay,\n            toggleMute:         _toggleMute,\n            toggleCaptions:     _toggleCaptions,\n            toggleFullscreen:   _toggleFullscreen,\n            toggleControls:     _toggleControls,\n            isFullscreen:       function() { return plyr.isFullscreen || false; },\n            support:            function(mimeType) { return _supportMime(plyr, mimeType); },\n            destroy:            _destroy\n        };\n\n        // Everything done\n        function _ready() {\n            // Ready event at end of execution stack\n            window.setTimeout(function() {\n                _triggerEvent(plyr.media, 'ready');\n            }, 0);\n\n            // Set class hook on media element\n            _toggleClass(plyr.media, defaults.classes.setup, true);\n\n            // Set container class for ready\n            _toggleClass(plyr.container, config.classes.ready, true);\n\n            // Store a refernce to instance\n            plyr.media.plyr = api;\n\n            // Autoplay\n            if (config.autoplay) {\n                _play();\n            }\n        }\n\n        // Initialize instance\n        _init();\n\n        // If init failed, return null\n        if (!plyr.init) {\n            return null;\n        }\n\n        return api;\n    }\n\n    // Load a sprite\n    function loadSprite(url, id) {\n        var x = new XMLHttpRequest();\n\n        // If the id is set and sprite exists, bail\n        if (_is.string(id) && _is.htmlElement(document.querySelector('#' + id))) {\n            return;\n        }\n\n        // Create placeholder (to prevent loading twice)\n        var container = document.createElement('div');\n        container.setAttribute('hidden', '');\n        if (_is.string(id)) {\n            container.setAttribute('id', id);\n        }\n        document.body.insertBefore(container, document.body.childNodes[0]);\n\n        // Check for CORS support\n        if ('withCredentials' in x) {\n            x.open('GET', url, true);\n        } else {\n            return;\n        }\n\n        // Inject hidden div with sprite on load\n        x.onload = function() {\n            container.innerHTML = x.responseText;\n        }\n\n        x.send();\n    }\n\n    // Check for support\n    function supported(type) {\n        var browser     = _browserSniff(),\n            isOldIE     = (browser.isIE && browser.version <= 9),\n            isIos       = browser.isIos,\n            isIphone    = browser.isIphone,\n            audioSupport = !!document.createElement('audio').canPlayType,\n            videoSupport = !!document.createElement('video').canPlayType,\n            basic       = false,\n            full        = false;\n\n        switch (type) {\n            case 'video':\n                basic = videoSupport;\n                full  = (basic && (!isOldIE && !isIphone));\n                break;\n\n            case 'audio':\n                basic = audioSupport;\n                full  = (basic && !isOldIE);\n                break;\n\n            // Vimeo does not seem to be supported on iOS via API\n            // Issue raised https://github.com/vimeo/player.js/issues/87\n            case 'vimeo':\n                basic = true;\n                full = (!isOldIE && !isIos);\n                break;\n\n            case 'youtube':\n                basic = true;\n                full = (!isOldIE && !isIos);\n\n                // YouTube seems to work on iOS 10+ on iPad\n                if (isIos && !isIphone && browser.version >= 10) {\n                    full = true;\n                }\n\n                break;\n\n            case 'soundcloud':\n                basic = true;\n                full  = (!isOldIE && !isIphone);\n                break;\n\n            default:\n                basic = (audioSupport && videoSupport);\n                full  = (basic && !isOldIE);\n        }\n\n        return {\n            basic:  basic,\n            full:   full\n        };\n    }\n\n    // Setup function\n    function setup(targets, options) {\n        // Get the players\n        var players     = [],\n            instances   = [],\n            selector    = [defaults.selectors.html5, defaults.selectors.embed].join(',');\n\n        // Select the elements\n        if (_is.string(targets)) {\n            // String selector passed\n            targets = document.querySelectorAll(targets);\n        }  else if (_is.htmlElement(targets)) {\n            // Single HTMLElement passed\n            targets = [targets];\n        }  else if (!_is.nodeList(targets) && !_is.array(targets) && !_is.string(targets))  {\n            // No selector passed, possibly options as first argument\n            // If options are the first argument\n            if (_is.undefined(options) && _is.object(targets)) {\n                options = targets;\n            }\n\n            // Use default selector\n            targets = document.querySelectorAll(selector);\n        }\n\n        // Convert NodeList to array\n        if (_is.nodeList(targets)) {\n            targets = Array.prototype.slice.call(targets);\n        }\n\n        // Bail if disabled or no basic support\n        // You may want to disable certain UAs etc\n        if (!supported().basic || !targets.length) {\n            return false;\n        }\n\n        // Add to container list\n        function add(target, media) {\n            if (!_hasClass(media, defaults.classes.hook)) {\n                players.push({\n                    // Always wrap in a <div> for styling\n                    //container:  _wrap(media, document.createElement('div')),\n                    // Could be a container or the media itself\n                    target:     target,\n                    // This should be the <video>, <audio> or <div> (YouTube/Vimeo)\n                    media:      media\n                });\n            }\n        }\n\n        // Check if the targets have multiple media elements\n        for (var i = 0; i < targets.length; i++) {\n            var target = targets[i];\n\n            // Get children\n            var children = target.querySelectorAll(selector);\n\n            // If there's more than one media element child, wrap them\n            if (children.length) {\n                for (var x = 0; x < children.length; x++) {\n                    add(target, children[x]);\n                }\n            } else if (_matches(target, selector)) {\n                // Target is media element\n                add(target, target);\n            }\n        }\n\n        // Create a player instance for each element\n        players.forEach(function(player) {\n            var element     = player.target,\n                media       = player.media,\n                match       = false;\n\n            // The target element can also be the media element\n            if (media === element) {\n                match = true;\n            }\n\n            // Setup a player instance and add to the element\n            // Create instance-specific config\n            var data = {};\n\n            // Try parsing data attribute config\n            try { data = JSON.parse(element.getAttribute('data-plyr')); }\n            catch(e) { }\n\n            var config = _extend({}, defaults, options, data);\n\n            // Bail if not enabled\n            if (!config.enabled) {\n                return null;\n            }\n\n            // Create new instance\n            var instance = new Plyr(media, config);\n\n            // Go to next if setup failed\n            if (!_is.object(instance)) {\n                return;\n            }\n\n            // Listen for events if debugging\n            if (config.debug) {\n                var events = config.events.concat(['setup', 'statechange', 'enterfullscreen', 'exitfullscreen', 'captionsenabled', 'captionsdisabled']);\n\n                _on(instance.getContainer(), events.join(' '), function(event) {\n                    console.log([config.logPrefix, 'event:', event.type].join(' '), event.detail.plyr);\n                });\n            }\n\n            // Callback\n            _event(instance.getContainer(), 'setup', true, {\n                plyr: instance\n            });\n\n            // Add to return array even if it's already setup\n            instances.push(instance);\n        });\n\n        return instances;\n    }\n\n    // Get all instances within a provided container\n    function get(container) {\n        if (_is.string(container)) {\n            // Get selector if string passed\n            container = document.querySelector(container);\n        } else if (_is.undefined(container)) {\n            // Use body by default to get all on page\n            container = document.body;\n        }\n\n        // If we have a HTML element\n        if (_is.htmlElement(container)) {\n            var elements = container.querySelectorAll('.' + defaults.classes.setup),\n                instances = [];\n\n            Array.prototype.slice.call(elements).forEach(function(element) {\n                if (_is.object(element.plyr)) {\n                    instances.push(element.plyr);\n                }\n            });\n\n            return instances;\n        }\n\n        return [];\n    }\n\n    return {\n        setup:      setup,\n        supported:  supported,\n        loadSprite: loadSprite,\n        get:        get\n    };\n}));\n\n// Custom event polyfill\n// https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent\n(function () {\n    if (typeof window.CustomEvent === 'function') {\n        return;\n    }\n\n    function CustomEvent(event, params) {\n        params = params || { bubbles: false, cancelable: false, detail: undefined };\n        var evt = document.createEvent('CustomEvent');\n        evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n        return evt;\n    }\n\n    CustomEvent.prototype = window.Event.prototype;\n\n    window.CustomEvent = CustomEvent;\n})();\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// Touchscreen detector\n// http://www.javascriptkit.com/dhtmltutors/sticky-hover-issue-solutions.shtml\n\nvar detectTouch = function detectTouch() {\n  var isTouch = false; // variable to indicate current input type (is touch versus no touch)\n  var isTouchTimer = void 0;\n  var curRootClass = ''; // variable indicating current document root class (\"isTouchscreen\" or \"\")\n\n  function addTouchClass() {\n    clearTimeout(isTouchTimer);\n    isTouch = true;\n\n    // add \"isTouchscreen' class if it's not already present\n    if (curRootClass !== 'isTouchscreen') {\n      curRootClass = 'isTouchscreen';\n      document.documentElement.classList.add(curRootClass);\n    }\n\n    // maintain \"istouch\" state for 500ms\n    // so removeTouchClass doesn't get fired immediately following a touch event\n    isTouchTimer = setTimeout(function () {\n      isTouch = false;\n    }, 500);\n  }\n\n  function removeTouchClass() {\n    // remove 'isTouchscreen' class if not triggered by a touch event and class is present\n    if (!isTouch && curRootClass === 'isTouchscreen') {\n      isTouch = false;\n      curRootClass = '';\n      document.documentElement.classList.remove('isTouchscreen');\n    }\n  }\n\n  // this event only gets called when input type is touch\n  document.addEventListener('touchstart', addTouchClass, false);\n\n  // this event gets called when input type is everything from touch to mouse/trackpad\n  document.addEventListener('mouseover', removeTouchClass, false);\n};\n\nexports.default = detectTouch;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _plyr = __webpack_require__(0);\n\nvar _plyr2 = _interopRequireDefault(_plyr);\n\nvar _device = __webpack_require__(7);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar visibleClass = 'is-visible';\n\n/*\n//const playReelButton = document.getElementById('js-play-reel')\n//const overlay = document.getElementById('js-overlay')\nconst overlayContent = document.getElementById('js-overlay-content')\nconst overlayBlobs = document.getElementById('js-overlay-blobs')\nconst overlayCloseButton = document.getElementById('js-close-overlay')\n\nlet reelPlayer\n\nconst overlayVisible = () => {\n  return overlay.classList.contains(visibleClass)\n}\n\nconst showOverlayContent = () => {\n  overlayContent.classList.add(visibleClass)\n}\n\nconst hideOverlayContent = () => {\n  overlayContent.classList.remove(visibleClass)\n}\n\nconst closeOverlay = () => {\n  document.body.classList.remove('u-no-scroll')\n  overlayCloseButton.classList.remove(visibleClass)\n\n  reelPlayer.pause()\n  hideOverlayContent()\n\n  setTimeout(() => {\n    overlay.classList.remove(visibleClass)\n  }, 300)\n}\n\nconst openOverlay = () => {\n  document.body.classList.add('u-no-scroll')\n\n  overlay.classList.add(visibleClass)\n  // Wait for animation to complete to pause video in the back\n  setTimeout(() => {\n    showOverlayContent()\n\n    // only auto play if it's not mobile and ios\n    if (device.desktop) {\n      reelPlayer.play()\n    }\n\n    overlayCloseButton.classList.add(visibleClass)\n  }, 300)\n}\n\nconst playReel = () => {\n  playReelButton.addEventListener('click', (e) => {\n    e.preventDefault()\n\n    if (!reelPlayer) {\n      reelPlayer = plyr.setup('.js-homepage-reel')[0]\n      reelPlayer.on('ended', () => {\n        closeOverlay()\n      })\n    }\n\n    if (overlayVisible()) {\n      closeOverlay()\n    } else {\n      openOverlay()\n    }\n  })\n\n  overlayBlobs.addEventListener('click', () => {\n    if (overlayVisible()) {\n      closeOverlay()\n    }\n  })\n\n  overlayCloseButton.addEventListener('click', () => {\n    if (overlayVisible()) {\n      closeOverlay()\n    }\n  })\n}\n\nexport default playReel*/\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar mobileNav = function mobileNav() {\n  console.log(\"HEEEY\");\n  var navToggles = document.querySelectorAll('.js-toggle-nav');\n  var nav = document.querySelector('.js-nav');\n  var overlay = document.querySelector('.js-overlay');\n\n  Array.from(navToggles).forEach(function (toggle) {\n    toggle.addEventListener('click', function (e) {\n      nav.classList.toggle('is-open');\n      toggle.classList.toggle('is-active');\n      overlay.classList.toggle('is-active');\n\n      if (nav.classList.contains('is-open')) {\n        nav.setAttribute('aria-label', 'Close mobile menu');\n      } else {\n        nav.setAttribute('aria-label', 'Open mobile menu');\n      }\n    });\n  });\n};\n\nexports.default = mobileNav;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar formatTime = exports.formatTime = function formatTime(timeString) {\n  var secNum = parseInt(timeString, 10);\n  var hours = Math.floor(secNum / 3600);\n  var minutes = Math.floor((secNum - hours * 3600) / 60);\n  var seconds = secNum - hours * 3600 - minutes * 60;\n\n  if (hours < 10) {\n    hours = \"0\" + hours;\n  }\n\n  if (minutes < 10) {\n    minutes = \"0\" + minutes;\n  }\n\n  if (seconds < 10) {\n    seconds = \"0\" + seconds;\n  }\n\n  return minutes + \":\" + seconds;\n};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createWaypoint = undefined;\n\n__webpack_require__(8);\n\nvar createWaypoint = exports.createWaypoint = function createWaypoint(element, offset) {\n  var direction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'down';\n\n  if (!element) {\n    return;\n  }\n\n  new Waypoint({ // eslint-disable-line\n    element: element,\n    handler: function handler(d) {\n      if (d === direction) {\n        this.element.classList.add('is-loaded');\n        this.destroy();\n      }\n    },\n\n    offset: offset\n  });\n};\n\n// Header logo\ncreateWaypoint(document.querySelector('.js-way-logo'), '32%');\n\n// Primary nav, Projects filter nav, and other items\nArray.from(document.querySelectorAll('.js-way-nav')).forEach(function (el) {\n  createWaypoint(el, '50%');\n});\n\n// Hero items\n/*Array.from(document.querySelectorAll('.js-way-heroItem')).forEach((el) => {\n  createWaypoint(el, '100%')\n})*/\n\n// About text - mobile\ncreateWaypoint(document.querySelector('.js-way-aboutMb'), '80%');\n\n// About text - desktop\ncreateWaypoint(document.querySelector('.js-way-aboutDt'), '80%');\n\n// Main text\ncreateWaypoint(document.querySelector('.js-way-mainText'), '90%');\n\n// Bio - job title\ncreateWaypoint(document.querySelector('.js-way-bioJobTitle'), '80%');\n\n// Bio text\ncreateWaypoint(document.querySelector('.js-way-bioText'), '90%');\n\n// Projects title (\"Our Work\")\ncreateWaypoint(document.querySelector('.js-way-projTitle'), '80%');\n\n// Project items\nvar projItems = Array.from(document.querySelectorAll('.js-way-project-home'));\nprojItems.forEach(function (element) {\n  createWaypoint(element, '75%');\n});\n\n// Project items legacy\nvar legacyProjItems = Array.from(document.querySelectorAll('.js-way-projItems'));\nlegacyProjItems.forEach(function (element) {\n  createWaypoint(element, '75%');\n});\n\n// Gallery items\nArray.from(document.querySelectorAll('.js-way-galleryItems')).forEach(function (element) {\n  createWaypoint(element, '65%');\n});\n\n// Footer CTA\ncreateWaypoint(document.querySelector('.js-way-footerCTA'), '100%');\n\n// Footer - \"Watch Next\" text\ncreateWaypoint(document.querySelector('.js-way-watchNext'), '80%');\n\n// Footer links\ncreateWaypoint(document.querySelector('.js-way-footerLinks'), '97%');\n\n// Contact\nArray.from(document.querySelectorAll('.js-way-contact')).forEach(function (element) {\n  createWaypoint(element, '80%');\n});\n\n/*\nvar waypoint = new Waypoint({\n  element: document.getElementById('phone-waypoint'),\n  handler: function() {\n    console.log(\"wayyyypoint\");\n    document.getElementById('phone-waypoint').classList.add(\"mainphone--fixed\");\n  }\n})*/\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n//import projects from './components/projects'\n\n\nvar _homepage = __webpack_require__(2);\n\nvar _homepage2 = _interopRequireDefault(_homepage);\n\nvar _mobileNav = __webpack_require__(3);\n\nvar _mobileNav2 = _interopRequireDefault(_mobileNav);\n\nvar _detectTouch = __webpack_require__(1);\n\nvar _detectTouch2 = _interopRequireDefault(_detectTouch);\n\nvar _plyr = __webpack_require__(0);\n\nvar _plyr2 = _interopRequireDefault(_plyr);\n\nvar _time = __webpack_require__(4);\n\n__webpack_require__(5);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar el = document.querySelector(\".content--sticky\");\nvar observer = new IntersectionObserver(function (_ref) {\n  var _ref2 = _slicedToArray(_ref, 1),\n      e = _ref2[0];\n\n  return e.target.classList.toggle(\"is-pinned\", e.intersectionRatio < 1);\n}, { threshold: [1] });\n\nobserver.observe(el);\n\nconsole.log(\"HEEEYx2\");\n\nif (document.getElementById('js-overlay')) {\n  //playReel()\n}\n\nif (document.getElementById('js-projects')) {\n  projects();\n}\n\n(0, _detectTouch2.default)();\n(0, _mobileNav2.default)();\n\n// Plyr initialization\nvar plyrOptions = {\n  controls: ['play-large', 'fullscreen']\n};\n\nvar instance = _plyr2.default.setup(document.querySelectorAll('.js-plyr'), plyrOptions)[0];\n\nif (instance) {\n  var videoLength = document.querySelector('.js-video-length');\n\n  // on play add hasPlayed class so we know it's dirty\n  instance.on('play', function (e) {\n    e.target.classList.add('plyr--hasPlayed');\n  });\n\n  // reset hasPlayed so we can show the poster again\n  instance.on('ended', function (e) {\n    e.target.classList.remove('plyr--hasPlayed');\n\n    // reset the video length to the original length\n    if (videoLength) {\n      videoLength.innerHTML = videoLength.dataset.originalTime;\n    }\n  });\n\n  // if there's a video lenght on the page update it on play\n  if (videoLength) {\n    instance.on('timeupdate', function (e) {\n      // prevent the initial pass through that returns 0\n      if (!e.target.classList.contains('plyr--hasPlayed')) {\n        return;\n      }\n\n      var secondsLeft = e.detail.plyr.getDuration() - e.detail.plyr.getCurrentTime();\n      videoLength.innerHTML = (0, _time.formatTime)('' + secondsLeft);\n    });\n  }\n}\n\n/***/ }),\n/* 7 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"device\", function() { return device; });\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n\n\n\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar hasClass_1 = createCommonjsModule(function (module, exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = hasClass;\nfunction hasClass(element, className) {\n  if (element.classList) { return !!className && element.classList.contains(className); }else { return (\" \" + element.className + \" \").indexOf(\" \" + className + \" \") !== -1; }\n}\nmodule.exports = exports[\"default\"];\n});\n\nvar addClass_1 = createCommonjsModule(function (module, exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addClass;\n\n\n\nvar _hasClass2 = _interopRequireDefault(hasClass_1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction addClass(element, className) {\n  if (element.classList) { element.classList.add(className); }else if (!(0, _hasClass2.default)(element)) { element.className = element.className + ' ' + className; }\n}\nmodule.exports = exports['default'];\n});\n\nvar removeClass = function removeClass(element, className) {\n  if (element.classList) { element.classList.remove(className); }else { element.className = element.className.replace(new RegExp('(^|\\\\s)' + className + '(?:\\\\s|$)', 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, ''); }\n};\n\nvar index = createCommonjsModule(function (module, exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hasClass = exports.removeClass = exports.addClass = undefined;\n\n\n\nvar _addClass2 = _interopRequireDefault(addClass_1);\n\n\n\nvar _removeClass2 = _interopRequireDefault(removeClass);\n\n\n\nvar _hasClass2 = _interopRequireDefault(hasClass_1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.addClass = _addClass2.default;\nexports.removeClass = _removeClass2.default;\nexports.hasClass = _hasClass2.default;\nexports.default = { addClass: _addClass2.default, removeClass: _removeClass2.default, hasClass: _hasClass2.default };\n});\n\nvar index_2 = index.removeClass;\nvar index_3 = index.addClass;\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nvar isObject_1 = isObject;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof commonjsGlobal == 'object' && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;\n\nvar _freeGlobal = freeGlobal;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = _freeGlobal || freeSelf || Function('return this')();\n\nvar _root = root;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return _root.Date.now();\n};\n\nvar now_1 = now;\n\n/** Built-in value references. */\nvar Symbol = _root.Symbol;\n\nvar _Symbol = Symbol;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag$1 = _Symbol ? _Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag$1),\n      tag = value[symToStringTag$1];\n\n  try {\n    value[symToStringTag$1] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag$1] = tag;\n    } else {\n      delete value[symToStringTag$1];\n    }\n  }\n  return result;\n}\n\nvar _getRawTag = getRawTag;\n\n/** Used for built-in method references. */\nvar objectProto$1 = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString$1 = objectProto$1.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString$1.call(value);\n}\n\nvar _objectToString = objectToString;\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]';\nvar undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = _Symbol ? _Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? _getRawTag(value)\n    : _objectToString(value);\n}\n\nvar _baseGetTag = baseGetTag;\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nvar isObjectLike_1 = isObjectLike;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike_1(value) && _baseGetTag(value) == symbolTag);\n}\n\nvar isSymbol_1 = isSymbol;\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol_1(value)) {\n    return NAN;\n  }\n  if (isObject_1(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject_1(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nvar toNumber_1 = toNumber;\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT$1 = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\nvar nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT$1);\n  }\n  wait = toNumber_1(wait) || 0;\n  if (isObject_1(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber_1(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now_1();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now_1());\n  }\n\n  function debounced() {\n    var time = now_1(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nvar debounce_1 = debounce;\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject_1(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce_1(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nvar throttle_1 = throttle;\n\nvar documentTimeout = null;\n\nvar documentCallbacks = [];\nvar stopDocumentTimeout = function () {\n  if (documentTimeout) {\n    clearTimeout(documentTimeout);\n    documentTimeout = null;\n  }\n};\n\nvar waitForDocument = function (callback) {\n  if (callback) {\n    documentCallbacks.push(callback);\n  }\n  if (typeof document !== 'undefined') {\n    stopDocumentTimeout();\n    for (var i = 0, l = documentCallbacks.length; i < l; i++) {\n      documentCallbacks[i](document);\n    }\n    documentCallbacks.length = 0;\n    return;\n  }\n  stopDocumentTimeout();\n  setTimeout(function () {\n    waitForDocument();\n  }, 100);\n};\n\nvar getUserAgent = function () {\n  if (typeof document !== 'undefined') {\n    return window.navigator.userAgent;\n  }\n  return '';\n};\n\n\nvar isIE = function (v) {\n  return RegExp('msie' + (!isNaN(v)?('\\\\s'+v):''), 'i').test(navigator.userAgent);\n};\n\n// const getDocumentElement = () => {\n//   if (typeof document !== 'undefined') {\n//     return document.documentElement;\n//   }\n//   return null;\n// };\n\n// Check if documentElement already has a given class.\n// const hasClass = (domNode, className) => {\n//   let regex;\n//   regex = new RegExp(className, 'i');\n//   return domNode.className.match(regex);\n// };\n\n// // Add one or more CSS classes to the <html> element.\n// const addClass = (domNode, className) => {\n//   let currentClassNames = null;\n//   if (!hasClass(domNode, className)) {\n//     currentClassNames = domNode.className.replace(/^\\s+|\\s+$/g, '');\n//     domNode.className = currentClassNames + ' ' + className;\n//   }\n// };\n\n// // Remove single CSS class from the <html> element.\n// const removeClass = (domNode, className) => {\n//   if (hasClass(domNode, className)) {\n//     domNode.className = domNode.className.replace(' ' + className, '');\n//   }\n// };\n\nvar staticDevice = null;\n\nvar Device = function Device(userAgent) {\n  var this$1 = this;\n  if ( userAgent === void 0 ) userAgent = null;\n\n  this.state = {\n    addedClasses: false\n  };\n\n  this.matchCache = {};\n  this.featureCache = {};\n  this.classes = '';\n\n  this.setUserAgent(userAgent);\n\n  this.callback = null;\n\n  if (typeof document === 'undefined' && !this.userAgent) {\n    // console.log('document net defined');\n    waitForDocument(function () {\n      this$1.setUserAgent();\n    });\n  }\n};\n\nvar prototypeAccessors = { features: {},deviceorientation: {},ie9: {},touchDevice: {},touch: {},ios: {},iphone: {},ipod: {},ipad: {},android: {},androidPhone: {},androidTablet: {},blackberry: {},blackberryPhone: {},blackberryTablet: {},windows: {},ie10: {},windowsPhone: {},windowsTablet: {},fxos: {},fxosPhone: {},fxosTablet: {},meego: {},cordova: {},nodeWebkit: {},mobile: {},tablet: {},desktop: {},television: {},portrait: {},landscape: {} };\nvar staticAccessors = { device: {} };\n\nstaticAccessors.device.get = function () {\n  if (!staticDevice) {\n    staticDevice = new Device();\n  }\n  return staticDevice;\n};\n\nDevice.prototype.match = function match (needle) {\n  if (!this.matchCache[needle]) {\n    this.matchCache[needle] = this.userAgent.indexOf(needle) > -1;\n  }\n  return this.matchCache[needle];\n};\n\nDevice.prototype.feature = function feature (key) {\n\n  return this.featureCache[key];\n};\n\nDevice.prototype.addFeature = function addFeature (key, value) {\n  if (!this.featureCache[key]) {\n    this.featureCache[key] = value;\n  }\n  return value;\n};\n\nDevice.prototype.setUserAgent = function setUserAgent (userAgent) {\n    if ( userAgent === void 0 ) userAgent = null;\n\n  this.userAgent = userAgent || this.userAgent || getUserAgent();\n\n  if (this.userAgent) {\n    stopDocumentTimeout();\n    this.matchCache = {};\n    this.userAgent = this.userAgent.toLowerCase();\n  }\n};\n\nDevice.prototype.onOrientationChange = function onOrientationChange (orientation) {\n  // console.log('orientation', orientation);\n};\n\nDevice.prototype.getClasses = function getClasses () {\n  if (this.classes) {\n    return this.classes;\n  }\n\n  if (!this.userAgent) {\n    this.setUserAgent();\n  }\n\n  if (this.landscape) {\n    this.classes += 'landscape ';\n  } else {\n    this.classes += 'portrait ';\n  }\n\n  if (this.touch) {\n    this.classes += 'touch ';\n  }\n  if (this.ios) {\n    if (this.ipad) {\n      this.classes += 'ios ipad tablet ';\n    } else if (this.iphone) {\n      this.classes += 'ios iphone mobile ';\n    } else if (this.ipod) {\n      this.classes += 'ios ipod mobile ';\n    }\n  } else if (this.android) {\n    if (this.androidTablet) {\n      this.classes += 'android tablet ';\n    } else {\n      this.classes += 'android mobile ';\n    }\n  } else if (this.blackberry) {\n    if (this.blackberryTablet) {\n      this.classes += 'blackberry tablet ';\n    } else {\n      this.classes += 'blackberry mobile ';\n    }\n  } else if (this.windows) {\n    if (this.windowsTablet) {\n      this.classes += 'windows tablet ';\n    } else if (this.windowsPhone) {\n      this.classes += 'windows mobile ';\n    } else {\n      this.classes += 'windows desktop ';\n    }\n  } else if (this.fxos) {\n    if (this.fxosTablet) {\n      this.classes += 'fxos tablet ';\n    } else {\n      this.classes += 'fxos mobile ';\n    }\n  } else if (this.meego) {\n    this.classes += 'meego mobile ';\n  } else if (this.nodeWebkit) {\n    this.classes += 'node-webkit ';\n  } else if (this.television) {\n    this.classes += 'television ';\n  } else if (this.desktop) {\n    this.classes += 'desktop ';\n  }\n\n  if (this.cordova) {\n    this.classes += 'cordova ';\n  }\n\n  if (!this.desktop && this.deviceorientation) {\n    this.classes += 'deviceorientation ';\n  }\n  this.classes = this.classes.slice(0, -1);\n  return this.classes;\n};\n\nDevice.prototype.addClasses = function addClasses (targetNode) {\n  if (!this.targetNode) {\n    this.targetNode = targetNode;\n    if (!targetNode && typeof document !== 'undefined') {\n      this.targetNode = document.documentElement;\n    }\n\n    if (!this.targetNode) {\n      // console.warn('addClasses to nothing?');\n      return;\n    }\n\n    if (!this.userAgent) {\n      this.setUserAgent();\n    }\n\n    this.commitClasses();\n\n    this.addListener();\n  }\n};\n\nDevice.prototype.addListener = function addListener () {\n    var this$1 = this;\n\n\n  if (this.hasListener) {\n    return;\n  }\n\n  this.hasListener = true;\n  this.handleOrientation = this.handleOrientation.bind(this);\n  this.onResize = throttle_1(this.handleOrientation, 200);\n\n  var onOrientationChange = function () {\n    setTimeout(function () {\n      this$1.handleOrientation();\n    }, 10);\n  };\n\n  if ('onorientationchange' in window) {\n    window.addEventListener('orientationchange', onOrientationChange, false);\n  } else {\n    window.addEventListener('resize', this.onResize, false);\n  }\n  onOrientationChange();\n};\n\nDevice.prototype.handleOrientation = function handleOrientation () {\n  this.onOrientationChange(this.landscape);\n  if (!this.targetNode){\n    return;\n  }\n  if (this.landscape) {\n    index_2(this.targetNode, 'portrait');\n    index_3(this.targetNode, 'landscape');\n  } else {\n    index_2(this.targetNode, 'landscape');\n    index_3(this.targetNode, 'portrait');\n  }\n};\n\nDevice.prototype.commitClasses = function commitClasses () {\n  if (this.state.addedClasses || !this.targetNode) {\n    return;\n  }\n  this.state.addedClasses = true;\n  this.targetNode.className += this.getClasses();\n};\n\nprototypeAccessors.features.get = function () {\n\n  return {\n    wheelEvent: this.feature('wheelEvent') || this.addFeature('wheelEvent', ('onwheel' in document.createElement('div') ? 'wheel' : // Modern browsers support \"wheel\"\n        document.onmousewheel !== undefined ? 'mousewheel' : // Webkit and IE support at least \"mousewheel\"\n        'DOMMouseScroll')) // let's assume that remaining browsers are older Firefox\n  };\n  // detect available wheel event\n  // support = 'onwheel' in document.createElement('div') ? 'wheel' : // Modern browsers support \"wheel\"\n  // document.onmousewheel !== undefined ? 'mousewheel' : // Webkit and IE support at least \"mousewheel\"\n  // 'DOMMouseScroll'; // let's assume that remaining browsers are older Firefox\n\n};\n\nprototypeAccessors.deviceorientation.get = function () {\n  if (!this.canOrientate) {\n    this.canOrientate =\n      'ondeviceorientation' in window || 'deviceorientation' in window;\n  }\n  return !this.desktop && this.canOrientate;\n};\n\nprototypeAccessors.ie9.get = function (){\n  if (!this.matchCache['ie9']) {\n    if (typeof document !== 'undefined') {\n      this.matchCache['ie9'] = this.windows && isIE(10);\n    }\n  }\n  return this.matchCache['ie9'] || false;\n};\n\nprototypeAccessors.touchDevice.get = function () {\n  if (!this.matchCache['touchDevice']) {\n    if (typeof document !== 'undefined') {\n      this.matchCache['touchDevice'] = !!(navigator && navigator.userAgent) && navigator.userAgent.match(/(iPhone|iPod|iPad|Android|playbook|silk|BlackBerry|BB10|Windows Phone|Tizen|Bada|webOS|IEMobile|Opera Mini)/);\n    }\n  }\n  return this.matchCache['touchDevice'] || false;\n};\n\n\nprototypeAccessors.touch.get = function () {\n  if (!this.matchCache['touch']) {\n    if (typeof document !== 'undefined') {\n      this.matchCache['touch'] = (('ontouchstart' in window) ||( window.DocumentTouch && document instanceof DocumentTouch) || (navigator && navigator.msMaxTouchPoints > 0) || (navigator && navigator.maxTouchPoints));\n    }\n  }\n  return this.matchCache['touch'] || false;\n\n};\n\nprototypeAccessors.ios.get = function () {\n  return this.iphone || this.ipod || this.ipad;\n};\n\nprototypeAccessors.iphone.get = function () {\n  return !this.windows && this.match('iphone');\n};\n\nprototypeAccessors.ipod.get = function () {\n  return this.match('ipod');\n};\n\nprototypeAccessors.ipad.get = function () {\n  return this.match('ipad');\n};\n\nprototypeAccessors.android.get = function () {\n  return !this.windows && this.match('android');\n};\n\nprototypeAccessors.androidPhone.get = function () {\n  return this.android && this.match('mobile');\n};\n\nprototypeAccessors.androidTablet.get = function () {\n  return this.android && !this.match('mobile');\n};\n\nprototypeAccessors.blackberry.get = function () {\n  return this.match('blackberry') || this.match('bb10') || this.match('rim');\n};\n\nprototypeAccessors.blackberryPhone.get = function () {\n  return this.blackberry && !this.match('tablet');\n};\n\nprototypeAccessors.blackberryTablet.get = function () {\n  return this.blackberry && this.match('tablet');\n};\n\nprototypeAccessors.windows.get = function () {\n  return this.match('windows');\n};\n\nprototypeAccessors.ie10.get = function (){\n  if (!this.matchCache['ie10']) {\n    if (typeof document !== 'undefined') {\n      this.matchCache['ie10'] = this.windows && isIE(10);\n    }\n  }\n  return this.matchCache['ie10'] || false;\n};\n\nprototypeAccessors.windowsPhone.get = function () {\n  return this.windows && this.match('phone');\n};\n\nprototypeAccessors.windowsTablet.get = function () {\n  return this.windows && (this.match('touch') && !this.windowsPhone);\n};\n\nprototypeAccessors.fxos.get = function () {\n  return (\n    (this.match('(mobile;') || this.match('(tablet;')) && this.match('; rv:')\n  );\n};\n\nprototypeAccessors.fxosPhone.get = function () {\n  return this.fxos && this.match('mobile');\n};\n\nprototypeAccessors.fxosTablet.get = function () {\n  return this.fxos && this.match('tablet');\n};\n\nprototypeAccessors.meego.get = function () {\n  return this.match('meego');\n};\n\nprototypeAccessors.cordova.get = function () {\n  return window.cordova && location.protocol === 'file:';\n};\n\nprototypeAccessors.nodeWebkit.get = function () {\n  return typeof window.process === 'object';\n};\n\nprototypeAccessors.mobile.get = function () {\n  return (\n    this.androidPhone ||\n    this.iphone ||\n    this.ipod ||\n    this.windowsPhone ||\n    this.blackberryPhone ||\n    this.fxosPhone ||\n    this.meego\n  );\n};\n\nprototypeAccessors.tablet.get = function () {\n  return (\n    this.ipad ||\n    this.androidTablet ||\n    this.blackberryTablet ||\n    this.windowsTablet ||\n    this.fxosTablet\n  );\n};\n\nprototypeAccessors.desktop.get = function () {\n  return !this.tablet && !this.mobile;\n};\n\nprototypeAccessors.television.get = function () {\n    var this$1 = this;\n\n  var i,\n    television = [\n      'googletv',\n      'viera',\n      'smarttv',\n      'internet.tv',\n      'netcast',\n      'nettv',\n      'appletv',\n      'boxee',\n      'kylo',\n      'roku',\n      'dlnadoc',\n      'roku',\n      'pov_tv',\n      'hbbtv',\n      'ce-html'\n    ];\n\n  i = 0;\n  while (i++ < television.length) {\n    if (this$1.match(television[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\nprototypeAccessors.portrait.get = function () {\n  if ('orientation' in window) {\n    return window.orientation === 0;\n  }\n  if (typeof window !== 'undefined') {\n    return window.innerHeight / window.innerWidth > 1;\n  }\n  return false;\n};\n\nprototypeAccessors.landscape.get = function () {\n  if (typeof window !== 'undefined') {\n    if ('orientation' in window) {\n      return window.orientation !== 0;\n    }\n    return window.innerHeight / window.innerWidth < 1;\n  }\n  return false;\n};\n\nObject.defineProperties( Device.prototype, prototypeAccessors );\nObject.defineProperties( Device, staticAccessors );\nvar device = new Device();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Device);\n//# sourceMappingURL=device.es.js.map\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(9)))\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n/*!\nWaypoints - 4.0.1\nCopyright © 2011-2016 Caleb Troughton\nLicensed under the MIT license.\nhttps://github.com/imakewebthings/waypoints/blob/master/licenses.txt\n*/\n(function() {\n  'use strict'\n\n  var keyCounter = 0\n  var allWaypoints = {}\n\n  /* http://imakewebthings.com/waypoints/api/waypoint */\n  function Waypoint(options) {\n    if (!options) {\n      throw new Error('No options passed to Waypoint constructor')\n    }\n    if (!options.element) {\n      throw new Error('No element option passed to Waypoint constructor')\n    }\n    if (!options.handler) {\n      throw new Error('No handler option passed to Waypoint constructor')\n    }\n\n    this.key = 'waypoint-' + keyCounter\n    this.options = Waypoint.Adapter.extend({}, Waypoint.defaults, options)\n    this.element = this.options.element\n    this.adapter = new Waypoint.Adapter(this.element)\n    this.callback = options.handler\n    this.axis = this.options.horizontal ? 'horizontal' : 'vertical'\n    this.enabled = this.options.enabled\n    this.triggerPoint = null\n    this.group = Waypoint.Group.findOrCreate({\n      name: this.options.group,\n      axis: this.axis\n    })\n    this.context = Waypoint.Context.findOrCreateByElement(this.options.context)\n\n    if (Waypoint.offsetAliases[this.options.offset]) {\n      this.options.offset = Waypoint.offsetAliases[this.options.offset]\n    }\n    this.group.add(this)\n    this.context.add(this)\n    allWaypoints[this.key] = this\n    keyCounter += 1\n  }\n\n  /* Private */\n  Waypoint.prototype.queueTrigger = function(direction) {\n    this.group.queueTrigger(this, direction)\n  }\n\n  /* Private */\n  Waypoint.prototype.trigger = function(args) {\n    if (!this.enabled) {\n      return\n    }\n    if (this.callback) {\n      this.callback.apply(this, args)\n    }\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/destroy */\n  Waypoint.prototype.destroy = function() {\n    this.context.remove(this)\n    this.group.remove(this)\n    delete allWaypoints[this.key]\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/disable */\n  Waypoint.prototype.disable = function() {\n    this.enabled = false\n    return this\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/enable */\n  Waypoint.prototype.enable = function() {\n    this.context.refresh()\n    this.enabled = true\n    return this\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/next */\n  Waypoint.prototype.next = function() {\n    return this.group.next(this)\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/previous */\n  Waypoint.prototype.previous = function() {\n    return this.group.previous(this)\n  }\n\n  /* Private */\n  Waypoint.invokeAll = function(method) {\n    var allWaypointsArray = []\n    for (var waypointKey in allWaypoints) {\n      allWaypointsArray.push(allWaypoints[waypointKey])\n    }\n    for (var i = 0, end = allWaypointsArray.length; i < end; i++) {\n      allWaypointsArray[i][method]()\n    }\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/destroy-all */\n  Waypoint.destroyAll = function() {\n    Waypoint.invokeAll('destroy')\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/disable-all */\n  Waypoint.disableAll = function() {\n    Waypoint.invokeAll('disable')\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/enable-all */\n  Waypoint.enableAll = function() {\n    Waypoint.Context.refreshAll()\n    for (var waypointKey in allWaypoints) {\n      allWaypoints[waypointKey].enabled = true\n    }\n    return this\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/refresh-all */\n  Waypoint.refreshAll = function() {\n    Waypoint.Context.refreshAll()\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/viewport-height */\n  Waypoint.viewportHeight = function() {\n    return window.innerHeight || document.documentElement.clientHeight\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/viewport-width */\n  Waypoint.viewportWidth = function() {\n    return document.documentElement.clientWidth\n  }\n\n  Waypoint.adapters = []\n\n  Waypoint.defaults = {\n    context: window,\n    continuous: true,\n    enabled: true,\n    group: 'default',\n    horizontal: false,\n    offset: 0\n  }\n\n  Waypoint.offsetAliases = {\n    'bottom-in-view': function() {\n      return this.context.innerHeight() - this.adapter.outerHeight()\n    },\n    'right-in-view': function() {\n      return this.context.innerWidth() - this.adapter.outerWidth()\n    }\n  }\n\n  window.Waypoint = Waypoint\n}())\n;(function() {\n  'use strict'\n\n  function requestAnimationFrameShim(callback) {\n    window.setTimeout(callback, 1000 / 60)\n  }\n\n  var keyCounter = 0\n  var contexts = {}\n  var Waypoint = window.Waypoint\n  var oldWindowLoad = window.onload\n\n  /* http://imakewebthings.com/waypoints/api/context */\n  function Context(element) {\n    this.element = element\n    this.Adapter = Waypoint.Adapter\n    this.adapter = new this.Adapter(element)\n    this.key = 'waypoint-context-' + keyCounter\n    this.didScroll = false\n    this.didResize = false\n    this.oldScroll = {\n      x: this.adapter.scrollLeft(),\n      y: this.adapter.scrollTop()\n    }\n    this.waypoints = {\n      vertical: {},\n      horizontal: {}\n    }\n\n    element.waypointContextKey = this.key\n    contexts[element.waypointContextKey] = this\n    keyCounter += 1\n    if (!Waypoint.windowContext) {\n      Waypoint.windowContext = true\n      Waypoint.windowContext = new Context(window)\n    }\n\n    this.createThrottledScrollHandler()\n    this.createThrottledResizeHandler()\n  }\n\n  /* Private */\n  Context.prototype.add = function(waypoint) {\n    var axis = waypoint.options.horizontal ? 'horizontal' : 'vertical'\n    this.waypoints[axis][waypoint.key] = waypoint\n    this.refresh()\n  }\n\n  /* Private */\n  Context.prototype.checkEmpty = function() {\n    var horizontalEmpty = this.Adapter.isEmptyObject(this.waypoints.horizontal)\n    var verticalEmpty = this.Adapter.isEmptyObject(this.waypoints.vertical)\n    var isWindow = this.element == this.element.window\n    if (horizontalEmpty && verticalEmpty && !isWindow) {\n      this.adapter.off('.waypoints')\n      delete contexts[this.key]\n    }\n  }\n\n  /* Private */\n  Context.prototype.createThrottledResizeHandler = function() {\n    var self = this\n\n    function resizeHandler() {\n      self.handleResize()\n      self.didResize = false\n    }\n\n    this.adapter.on('resize.waypoints', function() {\n      if (!self.didResize) {\n        self.didResize = true\n        Waypoint.requestAnimationFrame(resizeHandler)\n      }\n    })\n  }\n\n  /* Private */\n  Context.prototype.createThrottledScrollHandler = function() {\n    var self = this\n    function scrollHandler() {\n      self.handleScroll()\n      self.didScroll = false\n    }\n\n    this.adapter.on('scroll.waypoints', function() {\n      if (!self.didScroll || Waypoint.isTouch) {\n        self.didScroll = true\n        Waypoint.requestAnimationFrame(scrollHandler)\n      }\n    })\n  }\n\n  /* Private */\n  Context.prototype.handleResize = function() {\n    Waypoint.Context.refreshAll()\n  }\n\n  /* Private */\n  Context.prototype.handleScroll = function() {\n    var triggeredGroups = {}\n    var axes = {\n      horizontal: {\n        newScroll: this.adapter.scrollLeft(),\n        oldScroll: this.oldScroll.x,\n        forward: 'right',\n        backward: 'left'\n      },\n      vertical: {\n        newScroll: this.adapter.scrollTop(),\n        oldScroll: this.oldScroll.y,\n        forward: 'down',\n        backward: 'up'\n      }\n    }\n\n    for (var axisKey in axes) {\n      var axis = axes[axisKey]\n      var isForward = axis.newScroll > axis.oldScroll\n      var direction = isForward ? axis.forward : axis.backward\n\n      for (var waypointKey in this.waypoints[axisKey]) {\n        var waypoint = this.waypoints[axisKey][waypointKey]\n        if (waypoint.triggerPoint === null) {\n          continue\n        }\n        var wasBeforeTriggerPoint = axis.oldScroll < waypoint.triggerPoint\n        var nowAfterTriggerPoint = axis.newScroll >= waypoint.triggerPoint\n        var crossedForward = wasBeforeTriggerPoint && nowAfterTriggerPoint\n        var crossedBackward = !wasBeforeTriggerPoint && !nowAfterTriggerPoint\n        if (crossedForward || crossedBackward) {\n          waypoint.queueTrigger(direction)\n          triggeredGroups[waypoint.group.id] = waypoint.group\n        }\n      }\n    }\n\n    for (var groupKey in triggeredGroups) {\n      triggeredGroups[groupKey].flushTriggers()\n    }\n\n    this.oldScroll = {\n      x: axes.horizontal.newScroll,\n      y: axes.vertical.newScroll\n    }\n  }\n\n  /* Private */\n  Context.prototype.innerHeight = function() {\n    /*eslint-disable eqeqeq */\n    if (this.element == this.element.window) {\n      return Waypoint.viewportHeight()\n    }\n    /*eslint-enable eqeqeq */\n    return this.adapter.innerHeight()\n  }\n\n  /* Private */\n  Context.prototype.remove = function(waypoint) {\n    delete this.waypoints[waypoint.axis][waypoint.key]\n    this.checkEmpty()\n  }\n\n  /* Private */\n  Context.prototype.innerWidth = function() {\n    /*eslint-disable eqeqeq */\n    if (this.element == this.element.window) {\n      return Waypoint.viewportWidth()\n    }\n    /*eslint-enable eqeqeq */\n    return this.adapter.innerWidth()\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/context-destroy */\n  Context.prototype.destroy = function() {\n    var allWaypoints = []\n    for (var axis in this.waypoints) {\n      for (var waypointKey in this.waypoints[axis]) {\n        allWaypoints.push(this.waypoints[axis][waypointKey])\n      }\n    }\n    for (var i = 0, end = allWaypoints.length; i < end; i++) {\n      allWaypoints[i].destroy()\n    }\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/context-refresh */\n  Context.prototype.refresh = function() {\n    /*eslint-disable eqeqeq */\n    var isWindow = this.element == this.element.window\n    /*eslint-enable eqeqeq */\n    var contextOffset = isWindow ? undefined : this.adapter.offset()\n    var triggeredGroups = {}\n    var axes\n\n    this.handleScroll()\n    axes = {\n      horizontal: {\n        contextOffset: isWindow ? 0 : contextOffset.left,\n        contextScroll: isWindow ? 0 : this.oldScroll.x,\n        contextDimension: this.innerWidth(),\n        oldScroll: this.oldScroll.x,\n        forward: 'right',\n        backward: 'left',\n        offsetProp: 'left'\n      },\n      vertical: {\n        contextOffset: isWindow ? 0 : contextOffset.top,\n        contextScroll: isWindow ? 0 : this.oldScroll.y,\n        contextDimension: this.innerHeight(),\n        oldScroll: this.oldScroll.y,\n        forward: 'down',\n        backward: 'up',\n        offsetProp: 'top'\n      }\n    }\n\n    for (var axisKey in axes) {\n      var axis = axes[axisKey]\n      for (var waypointKey in this.waypoints[axisKey]) {\n        var waypoint = this.waypoints[axisKey][waypointKey]\n        var adjustment = waypoint.options.offset\n        var oldTriggerPoint = waypoint.triggerPoint\n        var elementOffset = 0\n        var freshWaypoint = oldTriggerPoint == null\n        var contextModifier, wasBeforeScroll, nowAfterScroll\n        var triggeredBackward, triggeredForward\n\n        if (waypoint.element !== waypoint.element.window) {\n          elementOffset = waypoint.adapter.offset()[axis.offsetProp]\n        }\n\n        if (typeof adjustment === 'function') {\n          adjustment = adjustment.apply(waypoint)\n        }\n        else if (typeof adjustment === 'string') {\n          adjustment = parseFloat(adjustment)\n          if (waypoint.options.offset.indexOf('%') > - 1) {\n            adjustment = Math.ceil(axis.contextDimension * adjustment / 100)\n          }\n        }\n\n        contextModifier = axis.contextScroll - axis.contextOffset\n        waypoint.triggerPoint = Math.floor(elementOffset + contextModifier - adjustment)\n        wasBeforeScroll = oldTriggerPoint < axis.oldScroll\n        nowAfterScroll = waypoint.triggerPoint >= axis.oldScroll\n        triggeredBackward = wasBeforeScroll && nowAfterScroll\n        triggeredForward = !wasBeforeScroll && !nowAfterScroll\n\n        if (!freshWaypoint && triggeredBackward) {\n          waypoint.queueTrigger(axis.backward)\n          triggeredGroups[waypoint.group.id] = waypoint.group\n        }\n        else if (!freshWaypoint && triggeredForward) {\n          waypoint.queueTrigger(axis.forward)\n          triggeredGroups[waypoint.group.id] = waypoint.group\n        }\n        else if (freshWaypoint && axis.oldScroll >= waypoint.triggerPoint) {\n          waypoint.queueTrigger(axis.forward)\n          triggeredGroups[waypoint.group.id] = waypoint.group\n        }\n      }\n    }\n\n    Waypoint.requestAnimationFrame(function() {\n      for (var groupKey in triggeredGroups) {\n        triggeredGroups[groupKey].flushTriggers()\n      }\n    })\n\n    return this\n  }\n\n  /* Private */\n  Context.findOrCreateByElement = function(element) {\n    return Context.findByElement(element) || new Context(element)\n  }\n\n  /* Private */\n  Context.refreshAll = function() {\n    for (var contextId in contexts) {\n      contexts[contextId].refresh()\n    }\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/context-find-by-element */\n  Context.findByElement = function(element) {\n    return contexts[element.waypointContextKey]\n  }\n\n  window.onload = function() {\n    if (oldWindowLoad) {\n      oldWindowLoad()\n    }\n    Context.refreshAll()\n  }\n\n\n  Waypoint.requestAnimationFrame = function(callback) {\n    var requestFn = window.requestAnimationFrame ||\n      window.mozRequestAnimationFrame ||\n      window.webkitRequestAnimationFrame ||\n      requestAnimationFrameShim\n    requestFn.call(window, callback)\n  }\n  Waypoint.Context = Context\n}())\n;(function() {\n  'use strict'\n\n  function byTriggerPoint(a, b) {\n    return a.triggerPoint - b.triggerPoint\n  }\n\n  function byReverseTriggerPoint(a, b) {\n    return b.triggerPoint - a.triggerPoint\n  }\n\n  var groups = {\n    vertical: {},\n    horizontal: {}\n  }\n  var Waypoint = window.Waypoint\n\n  /* http://imakewebthings.com/waypoints/api/group */\n  function Group(options) {\n    this.name = options.name\n    this.axis = options.axis\n    this.id = this.name + '-' + this.axis\n    this.waypoints = []\n    this.clearTriggerQueues()\n    groups[this.axis][this.name] = this\n  }\n\n  /* Private */\n  Group.prototype.add = function(waypoint) {\n    this.waypoints.push(waypoint)\n  }\n\n  /* Private */\n  Group.prototype.clearTriggerQueues = function() {\n    this.triggerQueues = {\n      up: [],\n      down: [],\n      left: [],\n      right: []\n    }\n  }\n\n  /* Private */\n  Group.prototype.flushTriggers = function() {\n    for (var direction in this.triggerQueues) {\n      var waypoints = this.triggerQueues[direction]\n      var reverse = direction === 'up' || direction === 'left'\n      waypoints.sort(reverse ? byReverseTriggerPoint : byTriggerPoint)\n      for (var i = 0, end = waypoints.length; i < end; i += 1) {\n        var waypoint = waypoints[i]\n        if (waypoint.options.continuous || i === waypoints.length - 1) {\n          waypoint.trigger([direction])\n        }\n      }\n    }\n    this.clearTriggerQueues()\n  }\n\n  /* Private */\n  Group.prototype.next = function(waypoint) {\n    this.waypoints.sort(byTriggerPoint)\n    var index = Waypoint.Adapter.inArray(waypoint, this.waypoints)\n    var isLast = index === this.waypoints.length - 1\n    return isLast ? null : this.waypoints[index + 1]\n  }\n\n  /* Private */\n  Group.prototype.previous = function(waypoint) {\n    this.waypoints.sort(byTriggerPoint)\n    var index = Waypoint.Adapter.inArray(waypoint, this.waypoints)\n    return index ? this.waypoints[index - 1] : null\n  }\n\n  /* Private */\n  Group.prototype.queueTrigger = function(waypoint, direction) {\n    this.triggerQueues[direction].push(waypoint)\n  }\n\n  /* Private */\n  Group.prototype.remove = function(waypoint) {\n    var index = Waypoint.Adapter.inArray(waypoint, this.waypoints)\n    if (index > -1) {\n      this.waypoints.splice(index, 1)\n    }\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/first */\n  Group.prototype.first = function() {\n    return this.waypoints[0]\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/last */\n  Group.prototype.last = function() {\n    return this.waypoints[this.waypoints.length - 1]\n  }\n\n  /* Private */\n  Group.findOrCreate = function(options) {\n    return groups[options.axis][options.name] || new Group(options)\n  }\n\n  Waypoint.Group = Group\n}())\n;(function() {\n  'use strict'\n\n  var Waypoint = window.Waypoint\n\n  function isWindow(element) {\n    return element === element.window\n  }\n\n  function getWindow(element) {\n    if (isWindow(element)) {\n      return element\n    }\n    return element.defaultView\n  }\n\n  function NoFrameworkAdapter(element) {\n    this.element = element\n    this.handlers = {}\n  }\n\n  NoFrameworkAdapter.prototype.innerHeight = function() {\n    var isWin = isWindow(this.element)\n    return isWin ? this.element.innerHeight : this.element.clientHeight\n  }\n\n  NoFrameworkAdapter.prototype.innerWidth = function() {\n    var isWin = isWindow(this.element)\n    return isWin ? this.element.innerWidth : this.element.clientWidth\n  }\n\n  NoFrameworkAdapter.prototype.off = function(event, handler) {\n    function removeListeners(element, listeners, handler) {\n      for (var i = 0, end = listeners.length - 1; i < end; i++) {\n        var listener = listeners[i]\n        if (!handler || handler === listener) {\n          element.removeEventListener(listener)\n        }\n      }\n    }\n\n    var eventParts = event.split('.')\n    var eventType = eventParts[0]\n    var namespace = eventParts[1]\n    var element = this.element\n\n    if (namespace && this.handlers[namespace] && eventType) {\n      removeListeners(element, this.handlers[namespace][eventType], handler)\n      this.handlers[namespace][eventType] = []\n    }\n    else if (eventType) {\n      for (var ns in this.handlers) {\n        removeListeners(element, this.handlers[ns][eventType] || [], handler)\n        this.handlers[ns][eventType] = []\n      }\n    }\n    else if (namespace && this.handlers[namespace]) {\n      for (var type in this.handlers[namespace]) {\n        removeListeners(element, this.handlers[namespace][type], handler)\n      }\n      this.handlers[namespace] = {}\n    }\n  }\n\n  /* Adapted from jQuery 1.x offset() */\n  NoFrameworkAdapter.prototype.offset = function() {\n    if (!this.element.ownerDocument) {\n      return null\n    }\n\n    var documentElement = this.element.ownerDocument.documentElement\n    var win = getWindow(this.element.ownerDocument)\n    var rect = {\n      top: 0,\n      left: 0\n    }\n\n    if (this.element.getBoundingClientRect) {\n      rect = this.element.getBoundingClientRect()\n    }\n\n    return {\n      top: rect.top + win.pageYOffset - documentElement.clientTop,\n      left: rect.left + win.pageXOffset - documentElement.clientLeft\n    }\n  }\n\n  NoFrameworkAdapter.prototype.on = function(event, handler) {\n    var eventParts = event.split('.')\n    var eventType = eventParts[0]\n    var namespace = eventParts[1] || '__default'\n    var nsHandlers = this.handlers[namespace] = this.handlers[namespace] || {}\n    var nsTypeList = nsHandlers[eventType] = nsHandlers[eventType] || []\n\n    nsTypeList.push(handler)\n    this.element.addEventListener(eventType, handler)\n  }\n\n  NoFrameworkAdapter.prototype.outerHeight = function(includeMargin) {\n    var height = this.innerHeight()\n    var computedStyle\n\n    if (includeMargin && !isWindow(this.element)) {\n      computedStyle = window.getComputedStyle(this.element)\n      height += parseInt(computedStyle.marginTop, 10)\n      height += parseInt(computedStyle.marginBottom, 10)\n    }\n\n    return height\n  }\n\n  NoFrameworkAdapter.prototype.outerWidth = function(includeMargin) {\n    var width = this.innerWidth()\n    var computedStyle\n\n    if (includeMargin && !isWindow(this.element)) {\n      computedStyle = window.getComputedStyle(this.element)\n      width += parseInt(computedStyle.marginLeft, 10)\n      width += parseInt(computedStyle.marginRight, 10)\n    }\n\n    return width\n  }\n\n  NoFrameworkAdapter.prototype.scrollLeft = function() {\n    var win = getWindow(this.element)\n    return win ? win.pageXOffset : this.element.scrollLeft\n  }\n\n  NoFrameworkAdapter.prototype.scrollTop = function() {\n    var win = getWindow(this.element)\n    return win ? win.pageYOffset : this.element.scrollTop\n  }\n\n  NoFrameworkAdapter.extend = function() {\n    var args = Array.prototype.slice.call(arguments)\n\n    function merge(target, obj) {\n      if (typeof target === 'object' && typeof obj === 'object') {\n        for (var key in obj) {\n          if (obj.hasOwnProperty(key)) {\n            target[key] = obj[key]\n          }\n        }\n      }\n\n      return target\n    }\n\n    for (var i = 1, end = args.length; i < end; i++) {\n      merge(args[0], args[i])\n    }\n    return args[0]\n  }\n\n  NoFrameworkAdapter.inArray = function(element, array, i) {\n    return array == null ? -1 : array.indexOf(element, i)\n  }\n\n  NoFrameworkAdapter.isEmptyObject = function(obj) {\n    /* eslint no-unused-vars: 0 */\n    for (var name in obj) {\n      return false\n    }\n    return true\n  }\n\n  Waypoint.adapters.push({\n    name: 'noframework',\n    Adapter: NoFrameworkAdapter\n  })\n  Waypoint.Adapter = NoFrameworkAdapter\n}())\n;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 535db6ad09fa41c4e5c3","// ==========================================================================\n// Plyr\n// plyr.js v2.0.13\n// https://github.com/sampotts/plyr\n// License: The MIT License (MIT)\n// ==========================================================================\n// Credits: http://paypal.github.io/accessible-html5-video-player/\n// ==========================================================================\n\n;(function(root, factory) {\n    'use strict';\n    /*global define,module*/\n\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        // Node, CommonJS-like\n        module.exports = factory(root, document);\n    } else if (typeof define === 'function' && define.amd) {\n        // AMD\n        define([], function () { return factory(root, document); });\n    } else {\n        // Browser globals (root is window)\n        root.plyr = factory(root, document);\n    }\n}(typeof window !== 'undefined' ? window : this, function(window, document) {\n    'use strict';\n\n    // Globals\n    var fullscreen,\n    scroll = { x: 0, y: 0 },\n\n    // Default config\n    defaults = {\n        enabled:                true,\n        debug:                  false,\n        autoplay:               false,\n        loop:                   false,\n        seekTime:               10,\n        volume:                 10,\n        volumeMin:              0,\n        volumeMax:              10,\n        volumeStep:             1,\n        duration:               null,\n        displayDuration:        true,\n        loadSprite:             true,\n        iconPrefix:             'plyr',\n        iconUrl:                'https://cdn.plyr.io/2.0.13/plyr.svg',\n        blankUrl:               'https://cdn.selz.com/plyr/blank.mp4',\n        clickToPlay:            true,\n        hideControls:           true,\n        showPosterOnEnd:        false,\n        disableContextMenu:     true,\n        keyboardShorcuts:       {\n            focused:            true,\n            global:             false\n        },\n        tooltips: {\n            controls:           false,\n            seek:               true\n        },\n        selectors: {\n            html5:              'video, audio',\n            embed:              '[data-type]',\n            editable:           'input, textarea, select, [contenteditable]',\n            container:          '.plyr',\n            controls: {\n                container:      null,\n                wrapper:        '.plyr__controls'\n            },\n            labels:             '[data-plyr]',\n            buttons: {\n                seek:           '[data-plyr=\"seek\"]',\n                play:           '[data-plyr=\"play\"]',\n                pause:          '[data-plyr=\"pause\"]',\n                restart:        '[data-plyr=\"restart\"]',\n                rewind:         '[data-plyr=\"rewind\"]',\n                forward:        '[data-plyr=\"fast-forward\"]',\n                mute:           '[data-plyr=\"mute\"]',\n                captions:       '[data-plyr=\"captions\"]',\n                fullscreen:     '[data-plyr=\"fullscreen\"]'\n            },\n            volume: {\n                input:          '[data-plyr=\"volume\"]',\n                display:        '.plyr__volume--display'\n            },\n            progress: {\n                container:      '.plyr__progress',\n                buffer:         '.plyr__progress--buffer',\n                played:         '.plyr__progress--played'\n            },\n            captions:           '.plyr__captions',\n            currentTime:        '.plyr__time--current',\n            duration:           '.plyr__time--duration'\n        },\n        classes: {\n            setup:              'plyr--setup',\n            ready:              'plyr--ready',\n            videoWrapper:       'plyr__video-wrapper',\n            embedWrapper:       'plyr__video-embed',\n            type:               'plyr--{0}',\n            stopped:            'plyr--stopped',\n            playing:            'plyr--playing',\n            muted:              'plyr--muted',\n            loading:            'plyr--loading',\n            hover:              'plyr--hover',\n            tooltip:            'plyr__tooltip',\n            hidden:             'plyr__sr-only',\n            hideControls:       'plyr--hide-controls',\n            isIos:              'plyr--is-ios',\n            isTouch:            'plyr--is-touch',\n            captions: {\n                enabled:        'plyr--captions-enabled',\n                active:         'plyr--captions-active'\n            },\n            fullscreen: {\n                enabled:        'plyr--fullscreen-enabled',\n                active:         'plyr--fullscreen-active'\n            },\n            tabFocus:           'tab-focus'\n        },\n        captions: {\n            defaultActive:      false\n        },\n        fullscreen: {\n            enabled:            true,\n            fallback:           true,\n            allowAudio:         false\n        },\n        storage: {\n            enabled:            true,\n            key:                'plyr'\n        },\n        controls:               ['play-large', 'play', 'progress', 'current-time', 'mute', 'volume', 'captions', 'fullscreen'],\n        i18n: {\n            restart:            'Restart',\n            rewind:             'Rewind {seektime} secs',\n            play:               'Play',\n            pause:              'Pause',\n            forward:            'Forward {seektime} secs',\n            played:             'played',\n            buffered:           'buffered',\n            currentTime:        'Current time',\n            duration:           'Duration',\n            volume:             'Volume',\n            toggleMute:         'Toggle Mute',\n            toggleCaptions:     'Toggle Captions',\n            toggleFullscreen:   'Toggle Fullscreen',\n            frameTitle:         'Player for {title}'\n        },\n        types: {\n            embed:              ['youtube', 'vimeo', 'soundcloud'],\n            html5:              ['video', 'audio']\n        },\n        // URLs\n        urls: {\n            vimeo: {\n                api:            'https://player.vimeo.com/api/player.js',\n            },\n            youtube: {\n                api:            'https://www.youtube.com/iframe_api'\n            },\n            soundcloud: {\n                api:            'https://w.soundcloud.com/player/api.js'\n            }\n        },\n        // Custom control listeners\n        listeners: {\n            seek:               null,\n            play:               null,\n            pause:              null,\n            restart:            null,\n            rewind:             null,\n            forward:            null,\n            mute:               null,\n            volume:             null,\n            captions:           null,\n            fullscreen:         null\n        },\n        // Events to watch on HTML5 media elements\n        events:                 ['ready', 'ended', 'progress', 'stalled', 'playing', 'waiting', 'canplay', 'canplaythrough', 'loadstart', 'loadeddata', 'loadedmetadata', 'timeupdate', 'volumechange', 'play', 'pause', 'error', 'seeking', 'seeked', 'emptied'],\n        // Logging\n        logPrefix:              '[Plyr]'\n    };\n\n    // Credits: http://paypal.github.io/accessible-html5-video-player/\n    // Unfortunately, due to mixed support, UA sniffing is required\n    function _browserSniff() {\n        var ua = navigator.userAgent,\n            name = navigator.appName,\n            fullVersion = '' + parseFloat(navigator.appVersion),\n            majorVersion = parseInt(navigator.appVersion, 10),\n            nameOffset,\n            verOffset,\n            ix,\n            isIE = false,\n            isFirefox = false,\n            isChrome = false,\n            isSafari = false;\n\n        if ((navigator.appVersion.indexOf('Windows NT') !== -1) && (navigator.appVersion.indexOf('rv:11') !== -1)) {\n            // MSIE 11\n            isIE = true;\n            name = 'IE';\n            fullVersion = '11';\n        } else if ((verOffset = ua.indexOf('MSIE')) !== -1) {\n            // MSIE\n            isIE = true;\n            name = 'IE';\n            fullVersion = ua.substring(verOffset + 5);\n        } else if ((verOffset = ua.indexOf('Chrome')) !== -1) {\n            // Chrome\n            isChrome = true;\n            name = 'Chrome';\n            fullVersion = ua.substring(verOffset + 7);\n        } else if ((verOffset = ua.indexOf('Safari')) !== -1) {\n            // Safari\n            isSafari = true;\n            name = 'Safari';\n            fullVersion = ua.substring(verOffset + 7);\n            if ((verOffset = ua.indexOf('Version')) !== -1) {\n                fullVersion = ua.substring(verOffset + 8);\n            }\n        } else if ((verOffset = ua.indexOf('Firefox')) !== -1) {\n            // Firefox\n            isFirefox = true;\n            name = 'Firefox';\n            fullVersion = ua.substring(verOffset + 8);\n        } else if ((nameOffset = ua.lastIndexOf(' ') + 1) < (verOffset = ua.lastIndexOf('/'))) {\n            // In most other browsers, 'name/version' is at the end of userAgent\n            name = ua.substring(nameOffset,verOffset);\n            fullVersion = ua.substring(verOffset + 1);\n\n            if (name.toLowerCase() === name.toUpperCase()) {\n                name = navigator.appName;\n            }\n        }\n\n        // Trim the fullVersion string at semicolon/space if present\n        if ((ix = fullVersion.indexOf(';')) !== -1) {\n            fullVersion = fullVersion.substring(0, ix);\n        }\n        if ((ix = fullVersion.indexOf(' ')) !== -1) {\n            fullVersion = fullVersion.substring(0, ix);\n        }\n\n        // Get major version\n        majorVersion = parseInt('' + fullVersion, 10);\n        if (isNaN(majorVersion)) {\n            fullVersion = '' + parseFloat(navigator.appVersion);\n            majorVersion = parseInt(navigator.appVersion, 10);\n        }\n\n        // Return data\n        return {\n            name:       name,\n            version:    majorVersion,\n            isIE:       isIE,\n            isFirefox:  isFirefox,\n            isChrome:   isChrome,\n            isSafari:   isSafari,\n            isIos:      /(iPad|iPhone|iPod)/g.test(navigator.platform),\n            isIphone:   /(iPhone|iPod)/g.test(navigator.userAgent),\n            isTouch:    'ontouchstart' in document.documentElement\n        };\n    }\n\n    // Check for mime type support against a player instance\n    // Credits: http://diveintohtml5.info/everything.html\n    // Related: http://www.leanbackplyr.com/test/h5mt.html\n    function _supportMime(plyr, mimeType) {\n        var media = plyr.media;\n\n        if (plyr.type === 'video') {\n            // Check type\n            switch (mimeType) {\n                case 'video/webm':   return !!(media.canPlayType && media.canPlayType('video/webm; codecs=\"vp8, vorbis\"').replace(/no/, ''));\n                case 'video/mp4':    return !!(media.canPlayType && media.canPlayType('video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"').replace(/no/, ''));\n                case 'video/ogg':    return !!(media.canPlayType && media.canPlayType('video/ogg; codecs=\"theora\"').replace(/no/, ''));\n            }\n        } else if (plyr.type === 'audio') {\n            // Check type\n            switch (mimeType) {\n                case 'audio/mpeg':   return !!(media.canPlayType && media.canPlayType('audio/mpeg;').replace(/no/, ''));\n                case 'audio/ogg':    return !!(media.canPlayType && media.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/no/, ''));\n                case 'audio/wav':    return !!(media.canPlayType && media.canPlayType('audio/wav; codecs=\"1\"').replace(/no/, ''));\n            }\n        }\n\n        // If we got this far, we're stuffed\n        return false;\n    }\n\n    // Inject a script\n    function _injectScript(source) {\n        if (document.querySelectorAll('script[src=\"' + source + '\"]').length) {\n            return;\n        }\n\n        var tag = document.createElement('script');\n        tag.src = source;\n        var firstScriptTag = document.getElementsByTagName('script')[0];\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n    }\n\n    // Element exists in an array\n    function _inArray(haystack, needle) {\n        return Array.prototype.indexOf && (haystack.indexOf(needle) !== -1);\n    }\n\n    // Replace all\n    function _replaceAll(string, find, replace) {\n        return string.replace(new RegExp(find.replace(/([.*+?\\^=!:${}()|\\[\\]\\/\\\\])/g, '\\\\$1'), 'g'), replace);\n    }\n\n    // Wrap an element\n    function _wrap(elements, wrapper) {\n        // Convert `elements` to an array, if necessary.\n        if (!elements.length) {\n            elements = [elements];\n        }\n\n        // Loops backwards to prevent having to clone the wrapper on the\n        // first element (see `child` below).\n        for (var i = elements.length - 1; i >= 0; i--) {\n            var child   = (i > 0) ? wrapper.cloneNode(true) : wrapper;\n            var element = elements[i];\n\n            // Cache the current parent and sibling.\n            var parent  = element.parentNode;\n            var sibling = element.nextSibling;\n\n            // Wrap the element (is automatically removed from its current\n            // parent).\n            child.appendChild(element);\n\n            // If the element had a sibling, insert the wrapper before\n            // the sibling to maintain the HTML structure; otherwise, just\n            // append it to the parent.\n            if (sibling) {\n                parent.insertBefore(child, sibling);\n            } else {\n                parent.appendChild(child);\n            }\n\n            return child;\n        }\n    }\n\n    // Unwrap an element\n    // http://plainjs.com/javascript/manipulation/unwrap-a-dom-element-35/\n    /*function _unwrap(wrapper) {\n        // Get the element's parent node\n        var parent = wrapper.parentNode;\n\n        // Move all children out of the element\n        while (wrapper.firstChild) {\n            parent.insertBefore(wrapper.firstChild, wrapper);\n        }\n\n        // Remove the empty element\n        parent.removeChild(wrapper);\n    }*/\n\n    // Remove an element\n    function _remove(element) {\n        if (!element) {\n            return;\n        }\n        element.parentNode.removeChild(element);\n    }\n\n    // Prepend child\n    function _prependChild(parent, element) {\n        parent.insertBefore(element, parent.firstChild);\n    }\n\n    // Set attributes\n    function _setAttributes(element, attributes) {\n        for (var key in attributes) {\n            element.setAttribute(key, (_is.boolean(attributes[key]) && attributes[key]) ? '' : attributes[key]);\n        }\n    }\n\n    // Insert a HTML element\n    function _insertElement(type, parent, attributes) {\n        // Create a new <element>\n        var element = document.createElement(type);\n\n        // Set all passed attributes\n        _setAttributes(element, attributes);\n\n        // Inject the new element\n        _prependChild(parent, element);\n    }\n\n    // Get a classname from selector\n    function _getClassname(selector) {\n        return selector.replace('.', '');\n    }\n\n    // Toggle class on an element\n    function _toggleClass(element, className, state) {\n        if (element) {\n            if (element.classList) {\n                element.classList[state ? 'add' : 'remove'](className);\n            } else {\n                var name = (' ' + element.className + ' ').replace(/\\s+/g, ' ').replace(' ' + className + ' ', '');\n                element.className = name + (state ? ' ' + className : '');\n            }\n        }\n    }\n\n    // Has class name\n    function _hasClass(element, className) {\n        if (element) {\n            if (element.classList) {\n                return element.classList.contains(className);\n            } else {\n                return new RegExp('(\\\\s|^)' + className + '(\\\\s|$)').test(element.className);\n            }\n        }\n        return false;\n    }\n\n    // Element matches selector\n    function _matches(element, selector) {\n        var p = Element.prototype;\n\n        var f = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || function(s) {\n            return [].indexOf.call(document.querySelectorAll(s), this) !== -1;\n        };\n\n        return f.call(element, selector);\n    }\n\n    // Bind along with custom handler\n    function _proxyListener(element, eventName, userListener, defaultListener, useCapture) {\n        _on(element, eventName, function(event) {\n            if (userListener) {\n                userListener.apply(element, [event]);\n            }\n            defaultListener.apply(element, [event]);\n        }, useCapture);\n    }\n\n    // Toggle event listener\n    function _toggleListener(element, events, callback, toggle, useCapture) {\n        var eventList = events.split(' ');\n\n        // Whether the listener is a capturing listener or not\n        // Default to false\n        if (!_is.boolean(useCapture)) {\n            useCapture = false;\n        }\n\n        // If a nodelist is passed, call itself on each node\n        if (element instanceof NodeList) {\n            for (var x = 0; x < element.length; x++) {\n                if (element[x] instanceof Node) {\n                    _toggleListener(element[x], arguments[1], arguments[2], arguments[3]);\n                }\n            }\n            return;\n        }\n\n        // If a single node is passed, bind the event listener\n        for (var i = 0; i < eventList.length; i++) {\n            element[toggle ? 'addEventListener' : 'removeEventListener'](eventList[i], callback, useCapture);\n        }\n    }\n\n    // Bind event\n    function _on(element, events, callback, useCapture) {\n        if (element) {\n            _toggleListener(element, events, callback, true, useCapture);\n        }\n    }\n\n    // Unbind event\n    /*function _off(element, events, callback, useCapture) {\n        if (element) {\n            _toggleListener(element, events, callback, false, useCapture);\n        }\n    }*/\n\n    // Trigger event\n    function _event(element, type, bubbles, properties) {\n        // Bail if no element\n        if (!element || !type) {\n            return;\n        }\n\n        // Default bubbles to false\n        if (!_is.boolean(bubbles)) {\n            bubbles = false;\n        }\n\n        // Create and dispatch the event\n        var event = new CustomEvent(type, {\n            bubbles:    bubbles,\n            detail:     properties\n        });\n\n        // Dispatch the event\n        element.dispatchEvent(event);\n    }\n\n    // Toggle aria-pressed state on a toggle button\n    // http://www.ssbbartgroup.com/blog/how-not-to-misuse-aria-states-properties-and-roles\n    function _toggleState(target, state) {\n        // Bail if no target\n        if (!target) {\n            return;\n        }\n\n        // Get state\n        state = (_is.boolean(state) ? state : !target.getAttribute('aria-pressed'));\n\n        // Set the attribute on target\n        target.setAttribute('aria-pressed', state);\n\n        return state;\n    }\n\n    // Get percentage\n    function _getPercentage(current, max) {\n        if (current === 0 || max === 0 || isNaN(current) || isNaN(max)) {\n            return 0;\n        }\n        return ((current / max) * 100).toFixed(2);\n    }\n\n    // Deep extend/merge destination object with N more objects\n    // http://andrewdupont.net/2009/08/28/deep-extending-objects-in-javascript/\n    // Removed call to arguments.callee (used explicit function name instead)\n    function _extend() {\n        // Get arguments\n        var objects = arguments;\n\n        // Bail if nothing to merge\n        if (!objects.length) {\n            return;\n        }\n\n        // Return first if specified but nothing to merge\n        if (objects.length === 1) {\n            return objects[0];\n        }\n\n        // First object is the destination\n        var destination = Array.prototype.shift.call(objects),\n            length      = objects.length;\n\n        // Loop through all objects to merge\n        for (var i = 0; i < length; i++) {\n            var source = objects[i];\n\n            for (var property in source) {\n                if (source[property] && source[property].constructor && source[property].constructor === Object) {\n                    destination[property] = destination[property] || {};\n                    _extend(destination[property], source[property]);\n                } else {\n                    destination[property] = source[property];\n                }\n            }\n        }\n\n        return destination;\n    }\n\n    // Check variable types\n    var _is = {\n        object: function(input) {\n            return input !== null && typeof(input) === 'object';\n        },\n        array: function(input) {\n            return input !== null && (typeof(input) === 'object' && input.constructor === Array);\n        },\n        number: function(input) {\n            return input !== null && (typeof(input) === 'number' && !isNaN(input - 0) || (typeof input === 'object' && input.constructor === Number));\n        },\n        string: function(input) {\n            return input !== null && (typeof input === 'string' || (typeof input === 'object' && input.constructor === String));\n        },\n        boolean: function(input) {\n            return input !== null && typeof input === 'boolean';\n        },\n        nodeList: function(input) {\n            return input !== null && input instanceof NodeList;\n        },\n        htmlElement: function(input) {\n            return input !== null && input instanceof HTMLElement;\n        },\n        function: function(input) {\n            return input !== null && typeof input === 'function';\n        },\n        undefined: function(input) {\n            return input !== null && typeof input === 'undefined';\n        }\n    };\n\n    // Parse YouTube ID from url\n    function _parseYouTubeId(url) {\n        var regex = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=)([^#\\&\\?]*).*/;\n        return (url.match(regex)) ? RegExp.$2 : url;\n    }\n\n    // Parse Vimeo ID from url\n    function _parseVimeoId(url) {\n        var regex = /^.*(vimeo.com\\/|video\\/)(\\d+).*/;\n        return (url.match(regex)) ? RegExp.$2 : url;\n    }\n\n    // Fullscreen API\n    function _fullscreen() {\n        var fullscreen = {\n                supportsFullScreen: false,\n                isFullScreen: function() { return false; },\n                requestFullScreen: function() {},\n                cancelFullScreen: function() {},\n                fullScreenEventName: '',\n                element: null,\n                prefix: ''\n            },\n            browserPrefixes = 'webkit o moz ms khtml'.split(' ');\n\n        // Check for native support\n        if (!_is.undefined(document.cancelFullScreen)) {\n            fullscreen.supportsFullScreen = true;\n        } else {\n            // Check for fullscreen support by vendor prefix\n            for (var i = 0, il = browserPrefixes.length; i < il; i++ ) {\n                fullscreen.prefix = browserPrefixes[i];\n\n                if (!_is.undefined(document[fullscreen.prefix + 'CancelFullScreen'])) {\n                    fullscreen.supportsFullScreen = true;\n                    break;\n                } else if (!_is.undefined(document.msExitFullscreen) && document.msFullscreenEnabled) {\n                    // Special case for MS (when isn't it?)\n                    fullscreen.prefix = 'ms';\n                    fullscreen.supportsFullScreen = true;\n                    break;\n                }\n            }\n        }\n\n        // Update methods to do something useful\n        if (fullscreen.supportsFullScreen) {\n            // Yet again Microsoft awesomeness,\n            // Sometimes the prefix is 'ms', sometimes 'MS' to keep you on your toes\n            fullscreen.fullScreenEventName = (fullscreen.prefix === 'ms' ? 'MSFullscreenChange' : fullscreen.prefix + 'fullscreenchange');\n\n            fullscreen.isFullScreen = function(element) {\n                if (_is.undefined(element)) {\n                    element = document.body;\n                }\n                switch (this.prefix) {\n                    case '':\n                        return document.fullscreenElement === element;\n                    case 'moz':\n                        return document.mozFullScreenElement === element;\n                    default:\n                        return document[this.prefix + 'FullscreenElement'] === element;\n                }\n            };\n            fullscreen.requestFullScreen = function(element) {\n                if (_is.undefined(element)) {\n                    element = document.body;\n                }\n                return (this.prefix === '') ? element.requestFullScreen() : element[this.prefix + (this.prefix === 'ms' ? 'RequestFullscreen' : 'RequestFullScreen')]();\n            };\n            fullscreen.cancelFullScreen = function() {\n                return (this.prefix === '') ? document.cancelFullScreen() : document[this.prefix + (this.prefix === 'ms' ? 'ExitFullscreen' : 'CancelFullScreen')]();\n            };\n            fullscreen.element = function() {\n                return (this.prefix === '') ? document.fullscreenElement : document[this.prefix + 'FullscreenElement'];\n            };\n        }\n\n        return fullscreen;\n    }\n\n    // Local storage\n    var _storage = {\n        supported: (function() {\n            if (!('localStorage' in window)) {\n                return false;\n            }\n\n            // Try to use it (it might be disabled, e.g. user is in private/porn mode)\n            // see: https://github.com/sampotts/plyr/issues/131\n            try {\n                // Add test item\n                window.localStorage.setItem('___test', 'OK');\n\n                // Get the test item\n                var result = window.localStorage.getItem('___test');\n\n                // Clean up\n                window.localStorage.removeItem('___test');\n\n                // Check if value matches\n                return (result === 'OK');\n            }\n            catch (e) {\n                return false;\n            }\n\n            return false;\n        })()\n    };\n\n    // Player instance\n    function Plyr(media, config) {\n        var plyr = this,\n        timers = {},\n        api;\n\n        // Set media\n        plyr.media = media;\n        var original = media.cloneNode(true);\n\n        // Trigger events, with plyr instance passed\n        function _triggerEvent(element, type, bubbles, properties) {\n            _event(element, type, bubbles, _extend({}, properties, {\n                plyr: api\n            }));\n        }\n\n        // Debugging\n        function _console(type, args) {\n            if (config.debug && window.console) {\n                args = Array.prototype.slice.call(args);\n\n                if (_is.string(config.logPrefix) && config.logPrefix.length) {\n                    args.unshift(config.logPrefix);\n                }\n\n                console[type].apply(console, args);\n            }\n        }\n        var _log = function() { _console('log', arguments) },\n            _warn = function() { _console('warn', arguments) };\n\n        // Log config options\n        _log('Config', config);\n\n        // Get icon URL\n        function _getIconUrl() {\n            return {\n                url:        config.iconUrl,\n                absolute:   (config.iconUrl.indexOf(\"http\") === 0) || plyr.browser.isIE\n            };\n        }\n\n        // Build the default HTML\n        function _buildControls() {\n            // Create html array\n            var html        = [],\n                iconUrl     = _getIconUrl(),\n                iconPath    = (!iconUrl.absolute ? iconUrl.url : '') + '#' + config.iconPrefix;\n\n            // Larger overlaid play button\n            if (_inArray(config.controls, 'play-large')) {\n                html.push(\n                    '<button type=\"button\" data-plyr=\"play\" class=\"plyr__play-large\">',\n                        '<svg><use xlink:href=\"' + iconPath + '-play\" /></svg>',\n                        '<span class=\"plyr__sr-only\">' + config.i18n.play + '</span>',\n                    '</button>'\n                );\n            }\n\n            html.push('<div class=\"plyr__controls\">');\n\n            // Restart button\n            if (_inArray(config.controls, 'restart')) {\n                html.push(\n                    '<button type=\"button\" data-plyr=\"restart\">',\n                        '<svg><use xlink:href=\"' + iconPath + '-restart\" /></svg>',\n                        '<span class=\"plyr__sr-only\">' + config.i18n.restart + '</span>',\n                    '</button>'\n                );\n            }\n\n            // Rewind button\n            if (_inArray(config.controls, 'rewind')) {\n                html.push(\n                    '<button type=\"button\" data-plyr=\"rewind\">',\n                        '<svg><use xlink:href=\"' + iconPath + '-rewind\" /></svg>',\n                        '<span class=\"plyr__sr-only\">' + config.i18n.rewind + '</span>',\n                    '</button>'\n                );\n            }\n\n            // Play Pause button\n            // TODO: This should be a toggle button really?\n            if (_inArray(config.controls, 'play')) {\n                html.push(\n                    '<button type=\"button\" data-plyr=\"play\">',\n                        '<svg><use xlink:href=\"' + iconPath + '-play\" /></svg>',\n                        '<span class=\"plyr__sr-only\">' + config.i18n.play + '</span>',\n                    '</button>',\n                    '<button type=\"button\" data-plyr=\"pause\">',\n                        '<svg><use xlink:href=\"' + iconPath + '-pause\" /></svg>',\n                        '<span class=\"plyr__sr-only\">' + config.i18n.pause + '</span>',\n                    '</button>'\n                );\n            }\n\n            // Fast forward button\n            if (_inArray(config.controls, 'fast-forward')) {\n                html.push(\n                    '<button type=\"button\" data-plyr=\"fast-forward\">',\n                        '<svg><use xlink:href=\"' + iconPath + '-fast-forward\" /></svg>',\n                        '<span class=\"plyr__sr-only\">' + config.i18n.forward + '</span>',\n                    '</button>'\n                );\n            }\n\n            // Progress\n            if (_inArray(config.controls, 'progress')) {\n                // Create progress\n                html.push('<span class=\"plyr__progress\">',\n                    '<label for=\"seek{id}\" class=\"plyr__sr-only\">Seek</label>',\n                    '<input id=\"seek{id}\" class=\"plyr__progress--seek\" type=\"range\" min=\"0\" max=\"100\" step=\"0.1\" value=\"0\" data-plyr=\"seek\">',\n                    '<progress class=\"plyr__progress--played\" max=\"100\" value=\"0\" role=\"presentation\"></progress>',\n                    '<progress class=\"plyr__progress--buffer\" max=\"100\" value=\"0\">',\n                        '<span>0</span>% ' + config.i18n.buffered,\n                    '</progress>');\n\n                // Seek tooltip\n                if (config.tooltips.seek) {\n                    html.push('<span class=\"plyr__tooltip\">00:00</span>');\n                }\n\n                // Close\n                html.push('</span>');\n            }\n\n            // Media current time display\n            if (_inArray(config.controls, 'current-time')) {\n                html.push(\n                    '<span class=\"plyr__time\">',\n                        '<span class=\"plyr__sr-only\">' + config.i18n.currentTime + '</span>',\n                        '<span class=\"plyr__time--current\">00:00</span>',\n                    '</span>'\n                );\n            }\n\n            // Media duration display\n            if (_inArray(config.controls, 'duration')) {\n                html.push(\n                    '<span class=\"plyr__time\">',\n                        '<span class=\"plyr__sr-only\">' + config.i18n.duration + '</span>',\n                        '<span class=\"plyr__time--duration\">00:00</span>',\n                    '</span>'\n                );\n            }\n\n            // Toggle mute button\n            if (_inArray(config.controls, 'mute')) {\n                html.push(\n                    '<button type=\"button\" data-plyr=\"mute\">',\n                        '<svg class=\"icon--muted\"><use xlink:href=\"' + iconPath + '-muted\" /></svg>',\n                        '<svg><use xlink:href=\"' + iconPath + '-volume\" /></svg>',\n                        '<span class=\"plyr__sr-only\">' + config.i18n.toggleMute + '</span>',\n                    '</button>'\n                );\n            }\n\n            // Volume range control\n            if (_inArray(config.controls, 'volume')) {\n                html.push(\n                    '<span class=\"plyr__volume\">',\n                        '<label for=\"volume{id}\" class=\"plyr__sr-only\">' + config.i18n.volume + '</label>',\n                        '<input id=\"volume{id}\" class=\"plyr__volume--input\" type=\"range\" min=\"' + config.volumeMin + '\" max=\"' + config.volumeMax + '\" value=\"' + config.volume + '\" data-plyr=\"volume\">',\n                        '<progress class=\"plyr__volume--display\" max=\"' + config.volumeMax + '\" value=\"' + config.volumeMin + '\" role=\"presentation\"></progress>',\n                    '</span>'\n                );\n            }\n\n            // Toggle captions button\n            if (_inArray(config.controls, 'captions')) {\n                html.push(\n                    '<button type=\"button\" data-plyr=\"captions\">',\n                        '<svg class=\"icon--captions-on\"><use xlink:href=\"' + iconPath + '-captions-on\" /></svg>',\n                        '<svg><use xlink:href=\"' + iconPath+ '-captions-off\" /></svg>',\n                        '<span class=\"plyr__sr-only\">' + config.i18n.toggleCaptions + '</span>',\n                    '</button>'\n                );\n            }\n\n            // Toggle fullscreen button\n            if (_inArray(config.controls, 'fullscreen')) {\n                html.push(\n                    '<button type=\"button\" data-plyr=\"fullscreen\">',\n                        '<svg class=\"icon--exit-fullscreen\"><use xlink:href=\"' + iconPath + '-exit-fullscreen\" /></svg>',\n                        '<svg><use xlink:href=\"' + iconPath + '-enter-fullscreen\" /></svg>',\n                        '<span class=\"plyr__sr-only\">' + config.i18n.toggleFullscreen + '</span>',\n                    '</button>'\n                );\n            }\n\n            // Close everything\n            html.push('</div>');\n\n            return html.join('');\n        }\n\n        // Setup fullscreen\n        function _setupFullscreen() {\n            if (!plyr.supported.full) {\n                return;\n            }\n\n            if ((plyr.type !== 'audio' || config.fullscreen.allowAudio) && config.fullscreen.enabled) {\n                // Check for native support\n                var nativeSupport = fullscreen.supportsFullScreen;\n\n                if (nativeSupport || (config.fullscreen.fallback && !_inFrame())) {\n                    _log((nativeSupport ? 'Native' : 'Fallback') + ' fullscreen enabled');\n\n                    // Add styling hook\n                    _toggleClass(plyr.container, config.classes.fullscreen.enabled, true);\n                } else {\n                    _log('Fullscreen not supported and fallback disabled');\n                }\n\n                // Toggle state\n                if (plyr.buttons && plyr.buttons.fullscreen) {\n                    _toggleState(plyr.buttons.fullscreen, false);\n                }\n\n                // Setup focus trap\n                _focusTrap();\n            }\n        }\n\n        // Setup captions\n        function _setupCaptions() {\n            // Bail if not HTML5 video\n            if (plyr.type !== 'video') {\n                return;\n            }\n\n            // Inject the container\n            if (!_getElement(config.selectors.captions)) {\n                plyr.videoContainer.insertAdjacentHTML('afterbegin', '<div class=\"' + _getClassname(config.selectors.captions) + '\"></div>');\n            }\n\n            // Determine if HTML5 textTracks is supported\n            plyr.usingTextTracks = false;\n            if (plyr.media.textTracks) {\n                plyr.usingTextTracks = true;\n            }\n\n            // Get URL of caption file if exists\n            var captionSrc = '',\n                kind,\n                children = plyr.media.childNodes;\n\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].nodeName.toLowerCase() === 'track') {\n                    kind = children[i].kind;\n                    if (kind === 'captions' || kind === 'subtitles') {\n                        captionSrc = children[i].getAttribute('src');\n                    }\n                }\n            }\n\n            // Record if caption file exists or not\n            plyr.captionExists = true;\n            if (captionSrc === '') {\n                plyr.captionExists = false;\n                _log('No caption track found');\n            } else {\n                _log('Caption track found; URI: ' + captionSrc);\n            }\n\n            // If no caption file exists, hide container for caption text\n            if (!plyr.captionExists) {\n                _toggleClass(plyr.container, config.classes.captions.enabled);\n            } else {\n                // Turn off native caption rendering to avoid double captions\n                // This doesn't seem to work in Safari 7+, so the <track> elements are removed from the dom below\n                var tracks = plyr.media.textTracks;\n                for (var x = 0; x < tracks.length; x++) {\n                    tracks[x].mode = 'hidden';\n                }\n\n                // Enable UI\n                _showCaptions(plyr);\n\n                // Disable unsupported browsers than report false positive\n                // Firefox bug: https://bugzilla.mozilla.org/show_bug.cgi?id=1033144\n                if ((plyr.browser.isIE && plyr.browser.version >= 10) ||\n                    (plyr.browser.isFirefox && plyr.browser.version >= 31)) {\n\n                    // Debugging\n                    _log('Detected browser with known TextTrack issues - using manual fallback');\n\n                    // Set to false so skips to 'manual' captioning\n                    plyr.usingTextTracks = false;\n                }\n\n                // Rendering caption tracks\n                // Native support required - http://caniuse.com/webvtt\n                if (plyr.usingTextTracks) {\n                    _log('TextTracks supported');\n\n                    for (var y = 0; y < tracks.length; y++) {\n                        var track = tracks[y];\n\n                        if (track.kind === 'captions' || track.kind === 'subtitles') {\n                            _on(track, 'cuechange', function() {\n                                // Display a cue, if there is one\n                                if (this.activeCues[0] && 'text' in this.activeCues[0]) {\n                                    _setCaption(this.activeCues[0].getCueAsHTML());\n                                } else {\n                                    _setCaption();\n                                }\n                            });\n                        }\n                    }\n                } else {\n                    // Caption tracks not natively supported\n                    _log('TextTracks not supported so rendering captions manually');\n\n                    // Render captions from array at appropriate time\n                    plyr.currentCaption = '';\n                    plyr.captions = [];\n\n                    if (captionSrc !== '') {\n                        // Create XMLHttpRequest Object\n                        var xhr = new XMLHttpRequest();\n\n                        xhr.onreadystatechange = function() {\n                            if (xhr.readyState === 4) {\n                                if (xhr.status === 200) {\n                                    var captions = [],\n                                        caption,\n                                        req = xhr.responseText;\n\n                                    //According to webvtt spec, line terminator consists of one of the following\n                                    // CRLF (U+000D U+000A), LF (U+000A) or CR (U+000D)\n                                    var lineSeparator = '\\r\\n';\n                                    if(req.indexOf(lineSeparator+lineSeparator) === -1) {\n                                        if(req.indexOf('\\r\\r') !== -1){\n                                            lineSeparator = '\\r';\n                                        } else {\n                                            lineSeparator = '\\n';\n                                        }\n                                    }\n\n                                    captions = req.split(lineSeparator+lineSeparator);\n\n                                    for (var r = 0; r < captions.length; r++) {\n                                        caption = captions[r];\n                                        plyr.captions[r] = [];\n\n                                        // Get the parts of the captions\n                                        var parts = caption.split(lineSeparator),\n                                            index = 0;\n\n                                        // Incase caption numbers are added\n                                        if (parts[index].indexOf(\":\") === -1) {\n                                            index = 1;\n                                        }\n\n                                        plyr.captions[r] = [parts[index], parts[index + 1]];\n                                    }\n\n                                    // Remove first element ('VTT')\n                                    plyr.captions.shift();\n\n                                    _log('Successfully loaded the caption file via AJAX');\n                                } else {\n                                    _warn(config.logPrefix + 'There was a problem loading the caption file via AJAX');\n                                }\n                            }\n                        };\n\n                        xhr.open('get', captionSrc, true);\n\n                        xhr.send();\n                    }\n                }\n            }\n        }\n\n        // Set the current caption\n        function _setCaption(caption) {\n            /* jshint unused:false */\n            var container = _getElement(config.selectors.captions),\n                content = document.createElement('span');\n\n            // Empty the container\n            container.innerHTML = '';\n\n            // Default to empty\n            if (_is.undefined(caption)) {\n                caption = '';\n            }\n\n            // Set the span content\n            if (_is.string(caption)) {\n                content.innerHTML = caption.trim();\n            } else {\n                content.appendChild(caption);\n            }\n\n            // Set new caption text\n            container.appendChild(content);\n\n            // Force redraw (for Safari)\n            var redraw = container.offsetHeight;\n        }\n\n        // Captions functions\n        // Seek the manual caption time and update UI\n        function _seekManualCaptions(time) {\n            // Utilities for caption time codes\n            function _timecodeCommon(tc, pos) {\n                var tcpair = [];\n                tcpair = tc.split(' --> ');\n                for(var i = 0; i < tcpair.length; i++) {\n                    // WebVTT allows for extra meta data after the timestamp line\n                    // So get rid of this if it exists\n                    tcpair[i] = tcpair[i].replace(/(\\d+:\\d+:\\d+\\.\\d+).*/, \"$1\");\n                }\n                return _subTcSecs(tcpair[pos]);\n            }\n            function _timecodeMin(tc) {\n                return _timecodeCommon(tc, 0);\n            }\n            function _timecodeMax(tc) {\n                return _timecodeCommon(tc, 1);\n            }\n            function _subTcSecs(tc) {\n                if (tc === null || tc === undefined) {\n                    return 0;\n                } else {\n                    var tc1 = [],\n                        tc2 = [],\n                        seconds;\n                    tc1 = tc.split(',');\n                    tc2 = tc1[0].split(':');\n                    seconds = Math.floor(tc2[0]*60*60) + Math.floor(tc2[1]*60) + Math.floor(tc2[2]);\n                    return seconds;\n                }\n            }\n\n            // If it's not video, or we're using textTracks, bail.\n            if (plyr.usingTextTracks || plyr.type !== 'video' || !plyr.supported.full) {\n                return;\n            }\n\n            // Reset subcount\n            plyr.subcount = 0;\n\n            // Check time is a number, if not use currentTime\n            // IE has a bug where currentTime doesn't go to 0\n            // https://twitter.com/Sam_Potts/status/573715746506731521\n            time = _is.number(time) ? time : plyr.media.currentTime;\n\n            // If there's no subs available, bail\n            if (!plyr.captions[plyr.subcount]) {\n                return;\n            }\n\n            while (_timecodeMax(plyr.captions[plyr.subcount][0]) < time.toFixed(1)) {\n                plyr.subcount++;\n                if (plyr.subcount > plyr.captions.length - 1) {\n                    plyr.subcount = plyr.captions.length - 1;\n                    break;\n                }\n            }\n\n            // Check if the next caption is in the current time range\n            if (plyr.media.currentTime.toFixed(1) >= _timecodeMin(plyr.captions[plyr.subcount][0]) &&\n                plyr.media.currentTime.toFixed(1) <= _timecodeMax(plyr.captions[plyr.subcount][0])) {\n                    plyr.currentCaption = plyr.captions[plyr.subcount][1];\n\n                // Render the caption\n                _setCaption(plyr.currentCaption);\n            } else {\n                _setCaption();\n            }\n        }\n\n        // Display captions container and button (for initialization)\n        function _showCaptions() {\n            // If there's no caption toggle, bail\n            if (!plyr.buttons.captions) {\n                return;\n            }\n\n            _toggleClass(plyr.container, config.classes.captions.enabled, true);\n\n            // Try to load the value from storage\n            var active = plyr.storage.captionsEnabled;\n\n            // Otherwise fall back to the default config\n            if (!_is.boolean(active)) {\n                active = config.captions.defaultActive;\n            }\n\n            if (active) {\n                _toggleClass(plyr.container, config.classes.captions.active, true);\n                _toggleState(plyr.buttons.captions, true);\n            }\n        }\n\n        // Find all elements\n        function _getElements(selector) {\n            return plyr.container.querySelectorAll(selector);\n        }\n\n        // Find a single element\n        function _getElement(selector) {\n            return _getElements(selector)[0];\n        }\n\n        // Determine if we're in an iframe\n        function _inFrame() {\n            try {\n                return window.self !== window.top;\n            }\n            catch (e) {\n                return true;\n            }\n        }\n\n        // Trap focus inside container\n        function _focusTrap() {\n            var tabbables   = _getElements('input:not([disabled]), button:not([disabled])'),\n                first       = tabbables[0],\n                last        = tabbables[tabbables.length - 1];\n\n            function _checkFocus(event) {\n                // If it is TAB\n                if (event.which === 9 && plyr.isFullscreen) {\n                    if (event.target === last && !event.shiftKey) {\n                        // Move focus to first element that can be tabbed if Shift isn't used\n                        event.preventDefault();\n                        first.focus();\n                    } else if (event.target === first && event.shiftKey) {\n                        // Move focus to last element that can be tabbed if Shift is used\n                        event.preventDefault();\n                        last.focus();\n                    }\n                }\n            }\n\n            // Bind the handler\n            _on(plyr.container, 'keydown', _checkFocus);\n        }\n\n        // Add elements to HTML5 media (source, tracks, etc)\n        function _insertChildElements(type, attributes) {\n            if (_is.string(attributes)) {\n               _insertElement(type, plyr.media, { src: attributes });\n            } else if (attributes.constructor === Array) {\n                for (var i = attributes.length - 1; i >= 0; i--) {\n                    _insertElement(type, plyr.media, attributes[i]);\n                }\n            }\n        }\n\n        // Insert controls\n        function _injectControls() {\n            // Sprite\n            if (config.loadSprite) {\n                var iconUrl = _getIconUrl();\n\n                // Only load external sprite using AJAX\n                if (iconUrl.absolute) {\n                    _log('AJAX loading absolute SVG sprite' + (plyr.browser.isIE ? ' (due to IE)' : ''));\n                    loadSprite(iconUrl.url, \"sprite-plyr\");\n                } else {\n                    _log('Sprite will be used as external resource directly');\n                }\n            }\n\n            // Make a copy of the html\n            var html = config.html;\n\n            // Insert custom video controls\n            _log('Injecting custom controls');\n\n            // If no controls are specified, create default\n            if (!html) {\n                html = _buildControls();\n            }\n\n            // Replace seek time instances\n            html = _replaceAll(html, '{seektime}', config.seekTime);\n\n            // Replace all id references with random numbers\n            html = _replaceAll(html, '{id}', Math.floor(Math.random() * (10000)));\n\n            // Controls container\n            var target;\n\n            // Inject to custom location\n            if (_is.string(config.selectors.controls.container)) {\n                target = document.querySelector(config.selectors.controls.container);\n            }\n\n            // Inject into the container by default\n            if (!_is.htmlElement(target)) {\n                target = plyr.container\n            }\n\n            // Inject controls HTML\n            target.insertAdjacentHTML('beforeend', html);\n\n            // Setup tooltips\n            if (config.tooltips.controls) {\n                var labels = _getElements([config.selectors.controls.wrapper, ' ', config.selectors.labels, ' .', config.classes.hidden].join(''));\n\n                for (var i = labels.length - 1; i >= 0; i--) {\n                    var label = labels[i];\n\n                    _toggleClass(label, config.classes.hidden, false);\n                    _toggleClass(label, config.classes.tooltip, true);\n                }\n            }\n        }\n\n        // Find the UI controls and store references\n        function _findElements() {\n            try {\n                plyr.controls                 = _getElement(config.selectors.controls.wrapper);\n\n                // Buttons\n                plyr.buttons = {};\n                plyr.buttons.seek             = _getElement(config.selectors.buttons.seek);\n                plyr.buttons.play             = _getElements(config.selectors.buttons.play);\n                plyr.buttons.pause            = _getElement(config.selectors.buttons.pause);\n                plyr.buttons.restart          = _getElement(config.selectors.buttons.restart);\n                plyr.buttons.rewind           = _getElement(config.selectors.buttons.rewind);\n                plyr.buttons.forward          = _getElement(config.selectors.buttons.forward);\n                plyr.buttons.fullscreen       = _getElement(config.selectors.buttons.fullscreen);\n\n                // Inputs\n                plyr.buttons.mute             = _getElement(config.selectors.buttons.mute);\n                plyr.buttons.captions         = _getElement(config.selectors.buttons.captions);\n\n                // Progress\n                plyr.progress = {};\n                plyr.progress.container       = _getElement(config.selectors.progress.container);\n\n                // Progress - Buffering\n                plyr.progress.buffer          = {};\n                plyr.progress.buffer.bar      = _getElement(config.selectors.progress.buffer);\n                plyr.progress.buffer.text     = plyr.progress.buffer.bar && plyr.progress.buffer.bar.getElementsByTagName('span')[0];\n\n                // Progress - Played\n                plyr.progress.played          = _getElement(config.selectors.progress.played);\n\n                // Seek tooltip\n                plyr.progress.tooltip         = plyr.progress.container && plyr.progress.container.querySelector('.' + config.classes.tooltip);\n\n                // Volume\n                plyr.volume                   = {};\n                plyr.volume.input             = _getElement(config.selectors.volume.input);\n                plyr.volume.display           = _getElement(config.selectors.volume.display);\n\n                // Timing\n                plyr.duration                 = _getElement(config.selectors.duration);\n                plyr.currentTime              = _getElement(config.selectors.currentTime);\n                plyr.seekTime                 = _getElements(config.selectors.seekTime);\n\n                return true;\n            }\n            catch(e) {\n                _warn('It looks like there is a problem with your controls HTML');\n\n                // Restore native video controls\n                _toggleNativeControls(true);\n\n                return false;\n            }\n        }\n\n        // Toggle style hook\n        function _toggleStyleHook() {\n            _toggleClass(plyr.container, config.selectors.container.replace('.', ''), plyr.supported.full);\n        }\n\n        // Toggle native controls\n        function _toggleNativeControls(toggle) {\n            if (toggle && _inArray(config.types.html5, plyr.type)) {\n                plyr.media.setAttribute('controls', '');\n            } else {\n                plyr.media.removeAttribute('controls');\n            }\n        }\n\n        // Setup aria attribute for play and iframe title\n        function _setTitle(iframe) {\n            // Find the current text\n            var label = config.i18n.play;\n\n            // If there's a media title set, use that for the label\n            if (_is.string(config.title) && config.title.length) {\n                label += ', ' + config.title;\n\n                // Set container label\n                plyr.container.setAttribute('aria-label', config.title);\n            }\n\n            // If there's a play button, set label\n            if (plyr.supported.full && plyr.buttons.play) {\n                for (var i = plyr.buttons.play.length - 1; i >= 0; i--) {\n                    plyr.buttons.play[i].setAttribute('aria-label', label);\n                }\n            }\n\n            // Set iframe title\n            // https://github.com/sampotts/plyr/issues/124\n            if (_is.htmlElement(iframe)) {\n                iframe.setAttribute('title', config.i18n.frameTitle.replace('{title}', config.title));\n            }\n        }\n\n        // Setup localStorage\n        function _setupStorage() {\n            var value = null;\n            plyr.storage = {};\n\n            // Bail if we don't have localStorage support or it's disabled\n            if (!_storage.supported || !config.storage.enabled) {\n                return;\n            }\n\n            // Clean up old volume\n            // https://github.com/sampotts/plyr/issues/171\n            window.localStorage.removeItem('plyr-volume');\n\n            // load value from the current key\n            value = window.localStorage.getItem(config.storage.key);\n\n            if (!value) {\n                // Key wasn't set (or had been cleared), move along\n                return;\n            } else if (/^\\d+(\\.\\d+)?$/.test(value)) {\n                // If value is a number, it's probably volume from an older\n                // version of plyr. See: https://github.com/sampotts/plyr/pull/313\n                // Update the key to be JSON\n                _updateStorage({volume: parseFloat(value)});\n            } else {\n                // Assume it's JSON from this or a later version of plyr\n                plyr.storage = JSON.parse(value);\n            }\n        }\n\n        // Save a value back to local storage\n        function _updateStorage(value) {\n            // Bail if we don't have localStorage support or it's disabled\n            if (!_storage.supported || !config.storage.enabled) {\n                return;\n            }\n\n            // Update the working copy of the values\n            _extend(plyr.storage, value);\n\n            // Update storage\n            window.localStorage.setItem(config.storage.key, JSON.stringify(plyr.storage));\n        }\n\n        // Setup media\n        function _setupMedia() {\n            // If there's no media, bail\n            if (!plyr.media) {\n                _warn('No media element found!');\n                return;\n            }\n\n            if (plyr.supported.full) {\n                // Add type class\n                _toggleClass(plyr.container, config.classes.type.replace('{0}', plyr.type), true);\n\n                // Add video class for embeds\n                // This will require changes if audio embeds are added\n                if (_inArray(config.types.embed, plyr.type)) {\n                    _toggleClass(plyr.container, config.classes.type.replace('{0}', 'video'), true);\n                }\n\n                // If there's no autoplay attribute, assume the video is stopped and add state class\n                _toggleClass(plyr.container, config.classes.stopped, config.autoplay);\n\n                // Add iOS class\n                _toggleClass(plyr.container, config.classes.isIos, plyr.browser.isIos);\n\n                // Add touch class\n                _toggleClass(plyr.container, config.classes.isTouch, plyr.browser.isTouch);\n\n                // Inject the player wrapper\n                if (plyr.type === 'video') {\n                    // Create the wrapper div\n                    var wrapper = document.createElement('div');\n                    wrapper.setAttribute('class', config.classes.videoWrapper);\n\n                    // Wrap the video in a container\n                    _wrap(plyr.media, wrapper);\n\n                    // Cache the container\n                    plyr.videoContainer = wrapper;\n                }\n            }\n\n            // Embeds\n            if (_inArray(config.types.embed, plyr.type)) {\n                _setupEmbed();\n            }\n        }\n\n        // Setup YouTube/Vimeo\n        function _setupEmbed() {\n            var container = document.createElement('div'),\n                mediaId,\n                id = plyr.type + '-' + Math.floor(Math.random() * (10000));\n\n            // Parse IDs from URLs if supplied\n            switch (plyr.type) {\n                case 'youtube':\n                    mediaId = _parseYouTubeId(plyr.embedId);\n                    break;\n\n                case 'vimeo':\n                    mediaId = _parseVimeoId(plyr.embedId);\n                    break;\n\n                default:\n                    mediaId = plyr.embedId;\n            }\n\n            // Remove old containers\n            var containers = _getElements('[id^=\"' + plyr.type + '-\"]');\n            for (var i = containers.length - 1; i >= 0; i--) {\n                _remove(containers[i]);\n            }\n\n            // Add embed class for responsive\n            _toggleClass(plyr.media, config.classes.videoWrapper, true);\n            _toggleClass(plyr.media, config.classes.embedWrapper, true);\n\n            if (plyr.type === 'youtube') {\n                // Create the YouTube container\n                plyr.media.appendChild(container);\n\n                // Set ID\n                container.setAttribute('id', id);\n\n                // Setup API\n                if (_is.object(window.YT)) {\n                    _youTubeReady(mediaId, container);\n                } else {\n                    // Load the API\n                    _injectScript(config.urls.youtube.api);\n\n                    // Setup callback for the API\n                    window.onYouTubeReadyCallbacks = window.onYouTubeReadyCallbacks || [];\n\n                    // Add to queue\n                    window.onYouTubeReadyCallbacks.push(function() { _youTubeReady(mediaId, container); });\n\n                    // Set callback to process queue\n                    window.onYouTubeIframeAPIReady = function () {\n                        window.onYouTubeReadyCallbacks.forEach(function(callback) { callback(); });\n                    };\n                }\n            } else if (plyr.type === 'vimeo') {\n                // Vimeo needs an extra div to hide controls on desktop (which has full support)\n                if (plyr.supported.full) {\n                    plyr.media.appendChild(container);\n                } else {\n                    container = plyr.media;\n                }\n\n                // Set ID\n                container.setAttribute('id', id);\n\n                // Load the API if not already\n                if (!_is.object(window.Vimeo)) {\n                    _injectScript(config.urls.vimeo.api);\n\n                    // Wait for fragaloop load\n                    var vimeoTimer = window.setInterval(function() {\n                        if (_is.object(window.Vimeo)) {\n                            window.clearInterval(vimeoTimer);\n                            _vimeoReady(mediaId, container);\n                        }\n                    }, 50);\n                } else {\n                    _vimeoReady(mediaId, container);\n                }\n            } else if (plyr.type === 'soundcloud') {\n                // TODO: Currently unsupported and undocumented\n                // Inject the iframe\n                var soundCloud = document.createElement('iframe');\n\n                // Watch for iframe load\n                soundCloud.loaded = false;\n                _on(soundCloud, 'load', function() { soundCloud.loaded = true; });\n\n                _setAttributes(soundCloud, {\n                    'src':  'https://w.soundcloud.com/player/?url=https://api.soundcloud.com/tracks/' + mediaId,\n                    'id':   id\n                });\n\n                container.appendChild(soundCloud);\n                plyr.media.appendChild(container);\n\n                // Load the API if not already\n                if (!window.SC) {\n                    _injectScript(config.urls.soundcloud.api);\n                }\n\n                // Wait for SC load\n                var soundCloudTimer = window.setInterval(function() {\n                    if (window.SC && soundCloud.loaded) {\n                        window.clearInterval(soundCloudTimer);\n                        _soundcloudReady.call(soundCloud);\n                    }\n                }, 50);\n            }\n        }\n\n        // When embeds are ready\n        function _embedReady() {\n            // Setup the UI and call ready if full support\n            if (plyr.supported.full) {\n                _setupInterface();\n                _ready();\n            }\n\n            // Set title\n            _setTitle(_getElement('iframe'));\n        }\n\n        // Handle YouTube API ready\n        function _youTubeReady(videoId, container) {\n            // Setup instance\n            // https://developers.google.com/youtube/iframe_api_reference\n            plyr.embed = new window.YT.Player(container.id, {\n                videoId: videoId,\n                playerVars: {\n                    autoplay:       (config.autoplay ? 1 : 0),\n                    controls:       (plyr.supported.full ? 0 : 1),\n                    rel:            0,\n                    showinfo:       0,\n                    iv_load_policy: 3,\n                    cc_load_policy: (config.captions.defaultActive ? 1 : 0),\n                    cc_lang_pref:   'en',\n                    wmode:          'transparent',\n                    modestbranding: 1,\n                    disablekb:      1,\n                    origin:         '*' // https://code.google.com/p/gdata-issues/issues/detail?id=5788#c45\n                },\n                events: {\n                    'onError': function(event) {\n                        _triggerEvent(plyr.container, 'error', true, {\n                            code:   event.data,\n                            embed:  event.target\n                        });\n                    },\n                    'onReady': function(event) {\n                        // Get the instance\n                        var instance = event.target;\n\n                        // Create a faux HTML5 API using the YouTube API\n                        plyr.media.play = function() {\n                            instance.playVideo();\n                            plyr.media.paused = false;\n                        };\n                        plyr.media.pause = function() {\n                            instance.pauseVideo();\n                            plyr.media.paused = true;\n                        };\n                        plyr.media.stop = function() {\n                            instance.stopVideo();\n                            plyr.media.paused = true;\n                        };\n                        plyr.media.duration = instance.getDuration();\n                        plyr.media.paused = true;\n                        plyr.media.currentTime = 0;\n                        plyr.media.muted = instance.isMuted();\n\n                        // Set title\n                        config.title = instance.getVideoData().title;\n\n                        // Set the tabindex\n                        if (plyr.supported.full) {\n                            plyr.media.querySelector('iframe').setAttribute('tabindex', '-1');\n                        }\n\n                        // Update UI\n                        _embedReady();\n\n                        // Trigger timeupdate\n                        _triggerEvent(plyr.media, 'timeupdate');\n\n                        // Trigger timeupdate\n                        _triggerEvent(plyr.media, 'durationchange');\n\n                        // Reset timer\n                        window.clearInterval(timers.buffering);\n\n                        // Setup buffering\n                        timers.buffering = window.setInterval(function() {\n                            // Get loaded % from YouTube\n                            plyr.media.buffered = instance.getVideoLoadedFraction();\n\n                            // Trigger progress only when we actually buffer something\n                            if (plyr.media.lastBuffered === null || plyr.media.lastBuffered < plyr.media.buffered) {\n                                _triggerEvent(plyr.media, 'progress');\n                            }\n\n                            // Set last buffer point\n                            plyr.media.lastBuffered = plyr.media.buffered;\n\n                            // Bail if we're at 100%\n                            if (plyr.media.buffered === 1) {\n                                window.clearInterval(timers.buffering);\n\n                                // Trigger event\n                                _triggerEvent(plyr.media, 'canplaythrough');\n                            }\n                        }, 200);\n                    },\n                    'onStateChange': function(event) {\n                        // Get the instance\n                        var instance = event.target;\n\n                        // Reset timer\n                        window.clearInterval(timers.playing);\n\n                        // Handle events\n                        // -1   Unstarted\n                        // 0    Ended\n                        // 1    Playing\n                        // 2    Paused\n                        // 3    Buffering\n                        // 5    Video cued\n                        switch (event.data) {\n                            case 0:\n                                plyr.media.paused = true;\n                                _triggerEvent(plyr.media, 'ended');\n                                break;\n\n                            case 1:\n                                plyr.media.paused = false;\n\n                                // If we were seeking, fire seeked event\n                                if (plyr.media.seeking) {\n                                    _triggerEvent(plyr.media, 'seeked');\n                                }\n\n                                plyr.media.seeking = false;\n                                _triggerEvent(plyr.media, 'play');\n                                _triggerEvent(plyr.media, 'playing');\n\n                                // Poll to get playback progress\n                                timers.playing = window.setInterval(function() {\n                                    // Set the current time\n                                    plyr.media.currentTime = instance.getCurrentTime();\n\n                                    // Trigger timeupdate\n                                    _triggerEvent(plyr.media, 'timeupdate');\n                                }, 100);\n\n                                // Check duration again due to YouTube bug\n                                // https://github.com/sampotts/plyr/issues/374\n                                // https://code.google.com/p/gdata-issues/issues/detail?id=8690\n                                if (plyr.media.duration !== instance.getDuration()) {\n                                    plyr.media.duration = instance.getDuration();\n                                    _triggerEvent(plyr.media, 'durationchange');\n                                }\n\n                                break;\n\n                            case 2:\n                                plyr.media.paused = true;\n                                _triggerEvent(plyr.media, 'pause');\n                                break;\n                        }\n\n                        _triggerEvent(plyr.container, 'statechange', false, {\n                            code: event.data\n                        });\n                    }\n                }\n            });\n        }\n\n        // Vimeo ready\n        function _vimeoReady(mediaId, container) {\n            // Setup instance\n            // https://github.com/vimeo/player.js\n            plyr.embed = new window.Vimeo.Player(container, {\n                id:         parseInt(mediaId),\n                loop:       config.loop,\n                autoplay:   config.autoplay,\n                byline:     false,\n                portrait:   false,\n                title:      false\n            });\n\n            // Create a faux HTML5 API using the Vimeo API\n            plyr.media.play = function() {\n                plyr.embed.play();\n                plyr.media.paused = false;\n            };\n            plyr.media.pause = function() {\n                plyr.embed.pause();\n                plyr.media.paused = true;\n            };\n            plyr.media.stop = function() {\n                plyr.embed.stop();\n                plyr.media.paused = true;\n            };\n\n            plyr.media.paused = true;\n            plyr.media.currentTime = 0;\n\n            // Update UI\n            _embedReady();\n\n            plyr.embed.getCurrentTime().then(function(value) {\n                plyr.media.currentTime = value;\n\n                // Trigger timeupdate\n                _triggerEvent(plyr.media, 'timeupdate');\n            });\n\n            plyr.embed.getDuration().then(function(value) {\n                plyr.media.duration = value;\n\n                // Trigger timeupdate\n                _triggerEvent(plyr.media, 'durationchange');\n            });\n\n            // TODO: Captions\n            /*if (config.captions.defaultActive) {\n                plyr.embed.enableTextTrack('en');\n            }*/\n\n            plyr.embed.on('loaded', function() {\n                // Fix keyboard focus issues\n                // https://github.com/sampotts/plyr/issues/317\n                if (_is.htmlElement(plyr.embed.element) && plyr.supported.full) {\n                    plyr.embed.element.setAttribute('tabindex', '-1');\n                }\n            });\n\n            plyr.embed.on('play', function() {\n                plyr.media.paused = false;\n                _triggerEvent(plyr.media, 'play');\n                _triggerEvent(plyr.media, 'playing');\n            });\n\n            plyr.embed.on('pause', function() {\n                plyr.media.paused = true;\n                _triggerEvent(plyr.media, 'pause');\n            });\n\n            plyr.embed.on('timeupdate', function(data) {\n                plyr.media.seeking = false;\n                plyr.media.currentTime = data.seconds;\n                _triggerEvent(plyr.media, 'timeupdate');\n            });\n\n            plyr.embed.on('progress', function(data) {\n                plyr.media.buffered = data.percent;\n                _triggerEvent(plyr.media, 'progress');\n\n                if (parseInt(data.percent) === 1) {\n                    // Trigger event\n                    _triggerEvent(plyr.media, 'canplaythrough');\n                }\n            });\n\n            plyr.embed.on('seeked', function() {\n                plyr.media.seeking = false;\n                _triggerEvent(plyr.media, 'seeked');\n                _triggerEvent(plyr.media, 'play');\n            });\n\n            plyr.embed.on('ended', function() {\n                plyr.media.paused = true;\n                _triggerEvent(plyr.media, 'ended');\n            });\n        }\n\n        // Soundcloud ready\n        function _soundcloudReady() {\n            /* jshint validthis: true */\n            plyr.embed = window.SC.Widget(this);\n\n            // Setup on ready\n            plyr.embed.bind(window.SC.Widget.Events.READY, function() {\n                // Create a faux HTML5 API using the Soundcloud API\n                plyr.media.play = function() {\n                    plyr.embed.play();\n                    plyr.media.paused = false;\n                };\n                plyr.media.pause = function() {\n                    plyr.embed.pause();\n                    plyr.media.paused = true;\n                };\n                plyr.media.stop = function() {\n                    plyr.embed.seekTo(0);\n                    plyr.embed.pause();\n                    plyr.media.paused = true;\n                };\n\n                plyr.media.paused = true;\n                plyr.media.currentTime = 0;\n\n                plyr.embed.getDuration(function(value) {\n                    plyr.media.duration = value/1000;\n\n                    // Update UI\n                    _embedReady();\n                });\n\n                plyr.embed.getPosition(function(value) {\n                    plyr.media.currentTime = value;\n\n                    // Trigger timeupdate\n                    _triggerEvent(plyr.media, 'timeupdate');\n                });\n\n                plyr.embed.bind(window.SC.Widget.Events.PLAY, function() {\n                    plyr.media.paused = false;\n                    _triggerEvent(plyr.media, 'play');\n                    _triggerEvent(plyr.media, 'playing');\n                });\n\n                plyr.embed.bind(window.SC.Widget.Events.PAUSE, function() {\n                    plyr.media.paused = true;\n                    _triggerEvent(plyr.media, 'pause');\n                });\n\n                plyr.embed.bind(window.SC.Widget.Events.PLAY_PROGRESS, function(data) {\n                    plyr.media.seeking = false;\n                    plyr.media.currentTime = data.currentPosition/1000;\n                    _triggerEvent(plyr.media, 'timeupdate');\n                });\n\n                plyr.embed.bind(window.SC.Widget.Events.LOAD_PROGRESS, function(data) {\n                    plyr.media.buffered = data.loadProgress;\n                    _triggerEvent(plyr.media, 'progress');\n\n                    if (parseInt(data.loadProgress) === 1) {\n                        // Trigger event\n                        _triggerEvent(plyr.media, 'canplaythrough');\n                    }\n                });\n\n                plyr.embed.bind(window.SC.Widget.Events.FINISH, function() {\n                    plyr.media.paused = true;\n                    _triggerEvent(plyr.media, 'ended');\n                });\n            });\n        }\n\n        // Play media\n        function _play() {\n            if ('play' in plyr.media) {\n                plyr.media.play();\n            }\n        }\n\n        // Pause media\n        function _pause() {\n            if ('pause' in plyr.media) {\n                plyr.media.pause();\n            }\n        }\n\n        // Toggle playback\n        function _togglePlay(toggle) {\n            // True toggle\n            if (!_is.boolean(toggle)) {\n                toggle = plyr.media.paused;\n            }\n\n            if (toggle) {\n                _play();\n            } else {\n                _pause();\n            }\n\n            return toggle;\n        }\n\n        // Rewind\n        function _rewind(seekTime) {\n            // Use default if needed\n            if (!_is.number(seekTime)) {\n                seekTime = config.seekTime;\n            }\n            _seek(plyr.media.currentTime - seekTime);\n        }\n\n        // Fast forward\n        function _forward(seekTime) {\n            // Use default if needed\n            if (!_is.number(seekTime)) {\n                seekTime = config.seekTime;\n            }\n            _seek(plyr.media.currentTime + seekTime);\n        }\n\n        // Seek to time\n        // The input parameter can be an event or a number\n        function _seek(input) {\n            var targetTime  = 0,\n                paused      = plyr.media.paused,\n                duration    = _getDuration();\n\n            if (_is.number(input)) {\n                targetTime = input;\n            } else if (_is.object(input) && _inArray(['input', 'change'], input.type)) {\n                // It's the seek slider\n                // Seek to the selected time\n                targetTime = ((input.target.value / input.target.max) * duration);\n            }\n\n            // Normalise targetTime\n            if (targetTime < 0) {\n                targetTime = 0;\n            } else if (targetTime > duration) {\n                targetTime = duration;\n            }\n\n            // Update seek range and progress\n            _updateSeekDisplay(targetTime);\n\n            // Set the current time\n            // Try/catch incase the media isn't set and we're calling seek() from source() and IE moans\n            try {\n                plyr.media.currentTime = targetTime.toFixed(4);\n            }\n            catch(e) {}\n\n            // Embeds\n            if (_inArray(config.types.embed, plyr.type)) {\n                switch(plyr.type) {\n                    case 'youtube':\n                        plyr.embed.seekTo(targetTime);\n                        break;\n\n                    case 'vimeo':\n                        // Round to nearest second for vimeo\n                        plyr.embed.setCurrentTime(targetTime.toFixed(0));\n                        break;\n\n                    case 'soundcloud':\n                        plyr.embed.seekTo(targetTime * 1000);\n                        break;\n                }\n\n                if (paused) {\n                    _pause();\n                }\n\n                // Trigger timeupdate\n                _triggerEvent(plyr.media, 'timeupdate');\n\n                // Set seeking flag\n                plyr.media.seeking = true;\n\n                // Trigger seeking\n                _triggerEvent(plyr.media, 'seeking');\n            }\n\n            // Logging\n            _log('Seeking to ' + plyr.media.currentTime + ' seconds');\n\n            // Special handling for 'manual' captions\n            _seekManualCaptions(targetTime);\n        }\n\n        // Get the duration (or custom if set)\n        function _getDuration() {\n            // It should be a number, but parse it just incase\n            var duration = parseInt(config.duration),\n\n            // True duration\n            mediaDuration = 0;\n\n            // Only if duration available\n            if (plyr.media.duration !== null && !isNaN(plyr.media.duration)) {\n                mediaDuration = plyr.media.duration;\n            }\n\n            // If custom duration is funky, use regular duration\n            return (isNaN(duration) ? mediaDuration : duration);\n        }\n\n        // Check playing state\n        function _checkPlaying() {\n            _toggleClass(plyr.container, config.classes.playing, !plyr.media.paused);\n\n            _toggleClass(plyr.container, config.classes.stopped, plyr.media.paused);\n\n            _toggleControls(plyr.media.paused);\n        }\n\n        // Save scroll position\n        function _saveScrollPosition() {\n            scroll = {\n                x: window.pageXOffset || 0,\n                y: window.pageYOffset || 0\n            };\n        }\n\n        // Restore scroll position\n        function _restoreScrollPosition() {\n            window.scrollTo(scroll.x, scroll.y);\n        }\n\n        // Toggle fullscreen\n        function _toggleFullscreen(event) {\n            // Check for native support\n            var nativeSupport = fullscreen.supportsFullScreen;\n\n            if (nativeSupport) {\n                // If it's a fullscreen change event, update the UI\n                if (event && event.type === fullscreen.fullScreenEventName) {\n                    plyr.isFullscreen = fullscreen.isFullScreen(plyr.container);\n                } else {\n                    // Else it's a user request to enter or exit\n                    if (!fullscreen.isFullScreen(plyr.container)) {\n                        // Save scroll position\n                        _saveScrollPosition();\n\n                        // Request full screen\n                        fullscreen.requestFullScreen(plyr.container);\n                    } else {\n                        // Bail from fullscreen\n                        fullscreen.cancelFullScreen();\n                    }\n\n                    // Check if we're actually full screen (it could fail)\n                    plyr.isFullscreen = fullscreen.isFullScreen(plyr.container);\n\n                    return;\n                }\n            } else {\n                // Otherwise, it's a simple toggle\n                plyr.isFullscreen = !plyr.isFullscreen;\n\n                // Bind/unbind escape key\n                document.body.style.overflow = plyr.isFullscreen ? 'hidden' : '';\n            }\n\n            // Set class hook\n            _toggleClass(plyr.container, config.classes.fullscreen.active, plyr.isFullscreen);\n\n            // Trap focus\n            _focusTrap(plyr.isFullscreen);\n\n            // Set button state\n            if (plyr.buttons && plyr.buttons.fullscreen) {\n                _toggleState(plyr.buttons.fullscreen, plyr.isFullscreen);\n            }\n\n            // Trigger an event\n            _triggerEvent(plyr.container, plyr.isFullscreen ? 'enterfullscreen' : 'exitfullscreen', true);\n\n            // Restore scroll position\n            if (!plyr.isFullscreen && nativeSupport) {\n                _restoreScrollPosition();\n            }\n        }\n\n        // Mute\n        function _toggleMute(muted) {\n            // If the method is called without parameter, toggle based on current value\n            if (!_is.boolean(muted)) {\n                muted = !plyr.media.muted;\n            }\n\n            // Set button state\n            _toggleState(plyr.buttons.mute, muted);\n\n            // Set mute on the player\n            plyr.media.muted = muted;\n\n            // If volume is 0 after unmuting, set to default\n            if (plyr.media.volume === 0) {\n                _setVolume(config.volume);\n            }\n\n            // Embeds\n            if (_inArray(config.types.embed, plyr.type)) {\n                // YouTube\n                switch(plyr.type) {\n                    case 'youtube':\n                        plyr.embed[plyr.media.muted ? 'mute' : 'unMute']();\n                        break;\n\n                    case 'vimeo':\n                    case 'soundcloud':\n                        plyr.embed.setVolume(plyr.media.muted ? 0 : parseFloat(config.volume / config.volumeMax));\n                        break;\n                }\n\n                // Trigger volumechange for embeds\n                _triggerEvent(plyr.media, 'volumechange');\n            }\n        }\n\n        // Set volume\n        function _setVolume(volume) {\n            var max = config.volumeMax,\n                min = config.volumeMin;\n\n            // Load volume from storage if no value specified\n            if (_is.undefined(volume)) {\n                volume = plyr.storage.volume;\n            }\n\n            // Use config if all else fails\n            if (volume === null || isNaN(volume)) {\n                volume = config.volume;\n            }\n\n            // Maximum is volumeMax\n            if (volume > max) {\n                volume = max;\n            }\n            // Minimum is volumeMin\n            if (volume < min) {\n                volume = min;\n            }\n\n            // Set the player volume\n            plyr.media.volume = parseFloat(volume / max);\n\n            // Set the display\n            if (plyr.volume.display) {\n                plyr.volume.display.value = volume;\n            }\n\n            // Embeds\n            if (_inArray(config.types.embed, plyr.type)) {\n                switch(plyr.type) {\n                    case 'youtube':\n                        plyr.embed.setVolume(plyr.media.volume * 100);\n                        break;\n\n                    case 'vimeo':\n                    case 'soundcloud':\n                        plyr.embed.setVolume(plyr.media.volume);\n                        break;\n                }\n\n                // Trigger volumechange for embeds\n                _triggerEvent(plyr.media, 'volumechange');\n            }\n\n            // Toggle muted state\n            if (volume === 0) {\n                plyr.media.muted = true;\n            } else if (plyr.media.muted && volume > 0) {\n                _toggleMute();\n            }\n        }\n\n        // Increase volume\n        function _increaseVolume(step) {\n            var volume = plyr.media.muted ? 0 : (plyr.media.volume * config.volumeMax);\n\n            if (!_is.number(step)) {\n                step = config.volumeStep;\n            }\n\n            _setVolume(volume + step);\n        }\n\n        // Decrease volume\n        function _decreaseVolume(step) {\n            var volume = plyr.media.muted ? 0 : (plyr.media.volume * config.volumeMax);\n\n            if (!_is.number(step)) {\n                step = config.volumeStep;\n            }\n\n            _setVolume(volume - step);\n        }\n\n        // Update volume UI and storage\n        function _updateVolume() {\n            // Get the current volume\n            var volume = plyr.media.muted ? 0 : (plyr.media.volume * config.volumeMax);\n\n            // Update the <input type=\"range\"> if present\n            if (plyr.supported.full) {\n                if (plyr.volume.input) {\n                    plyr.volume.input.value = volume;\n                }\n                if (plyr.volume.display) {\n                    plyr.volume.display.value = volume;\n                }\n            }\n\n            // Update the volume in storage\n            _updateStorage({volume: volume});\n\n            // Toggle class if muted\n            _toggleClass(plyr.container, config.classes.muted, (volume === 0));\n\n            // Update checkbox for mute state\n            if (plyr.supported.full && plyr.buttons.mute) {\n                _toggleState(plyr.buttons.mute, (volume === 0));\n            }\n        }\n\n        // Toggle captions\n        function _toggleCaptions(show) {\n            // If there's no full support, or there's no caption toggle\n            if (!plyr.supported.full || !plyr.buttons.captions) {\n                return;\n            }\n\n            // If the method is called without parameter, toggle based on current value\n            if (!_is.boolean(show)) {\n                show = (plyr.container.className.indexOf(config.classes.captions.active) === -1);\n            }\n\n            // Set global\n            plyr.captionsEnabled = show;\n\n            // Toggle state\n            _toggleState(plyr.buttons.captions, plyr.captionsEnabled);\n\n            // Add class hook\n            _toggleClass(plyr.container, config.classes.captions.active, plyr.captionsEnabled);\n\n            // Trigger an event\n            _triggerEvent(plyr.container, plyr.captionsEnabled ? 'captionsenabled' : 'captionsdisabled', true);\n\n            // Save captions state to localStorage\n            _updateStorage({captionsEnabled: plyr.captionsEnabled});\n        }\n\n        // Check if media is loading\n        function _checkLoading(event) {\n            var loading = (event.type === 'waiting');\n\n            // Clear timer\n            clearTimeout(timers.loading);\n\n            // Timer to prevent flicker when seeking\n            timers.loading = setTimeout(function() {\n                // Toggle container class hook\n                _toggleClass(plyr.container, config.classes.loading, loading);\n\n                // Show controls if loading, hide if done\n                _toggleControls(loading);\n            }, (loading ? 250 : 0));\n        }\n\n        // Update <progress> elements\n        function _updateProgress(event) {\n            if (!plyr.supported.full) {\n                return;\n            }\n\n            var progress    = plyr.progress.played,\n                value       = 0,\n                duration    = _getDuration();\n\n            if (event) {\n                switch (event.type) {\n                    // Video playing\n                    case 'timeupdate':\n                    case 'seeking':\n                        if (plyr.controls.pressed) {\n                            return;\n                        }\n\n                        value = _getPercentage(plyr.media.currentTime, duration);\n\n                        // Set seek range value only if it's a 'natural' time event\n                        if (event.type === 'timeupdate' && plyr.buttons.seek) {\n                            plyr.buttons.seek.value = value;\n                        }\n\n                        break;\n\n                    // Check buffer status\n                    case 'playing':\n                    case 'progress':\n                        progress    = plyr.progress.buffer;\n                        value       = (function() {\n                            var buffered = plyr.media.buffered;\n\n                            if (buffered && buffered.length) {\n                                // HTML5\n                                return _getPercentage(buffered.end(0), duration);\n                            } else if (_is.number(buffered)) {\n                                // YouTube returns between 0 and 1\n                                return (buffered * 100);\n                            }\n\n                            return 0;\n                        })();\n\n                        break;\n                }\n            }\n\n            // Set values\n            _setProgress(progress, value);\n        }\n\n        // Set <progress> value\n        function _setProgress(progress, value) {\n            if (!plyr.supported.full) {\n                return;\n            }\n\n            // Default to 0\n            if (_is.undefined(value)) {\n                value = 0;\n            }\n            // Default to buffer or bail\n            if (_is.undefined(progress)) {\n                if (plyr.progress && plyr.progress.buffer) {\n                    progress = plyr.progress.buffer;\n                } else {\n                    return;\n                }\n            }\n\n            // One progress element passed\n            if (_is.htmlElement(progress)) {\n                progress.value = value;\n            } else if (progress) {\n                // Object of progress + text element\n                if (progress.bar) {\n                    progress.bar.value = value;\n                }\n                if (progress.text) {\n                    progress.text.innerHTML = value;\n                }\n            }\n        }\n\n        // Update the displayed time\n        function _updateTimeDisplay(time, element) {\n            // Bail if there's no duration display\n            if (!element) {\n                return;\n            }\n\n            // Fallback to 0\n            if (isNaN(time)) {\n                time = 0;\n            }\n\n            plyr.secs = parseInt(time % 60);\n            plyr.mins = parseInt((time / 60) % 60);\n            plyr.hours = parseInt(((time / 60) / 60) % 60);\n\n            // Do we need to display hours?\n            var displayHours = (parseInt(((_getDuration() / 60) / 60) % 60) > 0);\n\n            // Ensure it's two digits. For example, 03 rather than 3.\n            plyr.secs = ('0' + plyr.secs).slice(-2);\n            plyr.mins = ('0' + plyr.mins).slice(-2);\n\n            // Render\n            element.innerHTML = (displayHours ? plyr.hours + ':' : '') + plyr.mins + ':' + plyr.secs;\n        }\n\n        // Show the duration on metadataloaded\n        function _displayDuration() {\n            if (!plyr.supported.full) {\n                return;\n            }\n\n            // Determine duration\n            var duration = _getDuration() || 0;\n\n            // If there's only one time display, display duration there\n            if (!plyr.duration && config.displayDuration && plyr.media.paused) {\n                _updateTimeDisplay(duration, plyr.currentTime);\n            }\n\n            // If there's a duration element, update content\n            if (plyr.duration) {\n                _updateTimeDisplay(duration, plyr.duration);\n            }\n\n            // Update the tooltip (if visible)\n            _updateSeekTooltip();\n        }\n\n        // Handle time change event\n        function _timeUpdate(event) {\n            // Duration\n            _updateTimeDisplay(plyr.media.currentTime, plyr.currentTime);\n\n            // Ignore updates while seeking\n            if (event && event.type === 'timeupdate' && plyr.media.seeking) {\n                return;\n            }\n\n            // Playing progress\n            _updateProgress(event);\n        }\n\n        // Update seek range and progress\n        function _updateSeekDisplay(time) {\n            // Default to 0\n            if (!_is.number(time)) {\n                time = 0;\n            }\n\n            var duration    = _getDuration(),\n                value       = _getPercentage(time, duration);\n\n            // Update progress\n            if (plyr.progress && plyr.progress.played) {\n                plyr.progress.played.value = value;\n            }\n\n            // Update seek range input\n            if (plyr.buttons && plyr.buttons.seek) {\n                plyr.buttons.seek.value = value;\n            }\n        }\n\n        // Update hover tooltip for seeking\n        function _updateSeekTooltip(event) {\n            var duration = _getDuration();\n\n            // Bail if setting not true\n            if (!config.tooltips.seek || !plyr.progress.container || duration === 0) {\n                return;\n            }\n\n            // Calculate percentage\n            var clientRect  = plyr.progress.container.getBoundingClientRect(),\n                percent     = 0,\n                visible     = config.classes.tooltip + '--visible';\n\n            // Determine percentage, if already visible\n            if (!event) {\n                if (_hasClass(plyr.progress.tooltip, visible)) {\n                    percent = plyr.progress.tooltip.style.left.replace('%', '');\n                } else {\n                    return;\n                }\n            } else {\n                percent = ((100 / clientRect.width) * (event.pageX - clientRect.left));\n            }\n\n            // Set bounds\n            if (percent < 0) {\n                percent = 0;\n            } else if (percent > 100) {\n                percent = 100;\n            }\n\n            // Display the time a click would seek to\n            _updateTimeDisplay(((duration / 100) * percent), plyr.progress.tooltip);\n\n            // Set position\n            plyr.progress.tooltip.style.left = percent + \"%\";\n\n            // Show/hide the tooltip\n            // If the event is a moues in/out and percentage is inside bounds\n            if (event && _inArray(['mouseenter', 'mouseleave'], event.type)) {\n                _toggleClass(plyr.progress.tooltip, visible, (event.type === 'mouseenter'));\n            }\n        }\n\n        // Show the player controls in fullscreen mode\n        function _toggleControls(toggle) {\n            // Don't hide if config says not to, it's audio, or not ready or loading\n            if (!config.hideControls || plyr.type === 'audio') {\n                return;\n            }\n\n            var delay = 0,\n                isEnterFullscreen = false,\n                show = toggle,\n                loading = _hasClass(plyr.container, config.classes.loading);\n\n            // Default to false if no boolean\n            if (!_is.boolean(toggle)) {\n                if (toggle && toggle.type) {\n                    // Is the enter fullscreen event\n                    isEnterFullscreen = (toggle.type === 'enterfullscreen');\n\n                    // Whether to show controls\n                    show = _inArray(['mousemove', 'touchstart', 'mouseenter', 'focus'], toggle.type);\n\n                    // Delay hiding on move events\n                    if (_inArray(['mousemove', 'touchmove'], toggle.type)) {\n                        delay = 2000;\n                    }\n\n                    // Delay a little more for keyboard users\n                    if (toggle.type === 'focus') {\n                        delay = 3000;\n                    }\n                } else {\n                    show = _hasClass(plyr.container, config.classes.hideControls);\n                }\n            }\n\n            // Clear timer every movement\n            window.clearTimeout(timers.hover);\n\n            // If the mouse is not over the controls, set a timeout to hide them\n            if (show || plyr.media.paused || loading) {\n                _toggleClass(plyr.container, config.classes.hideControls, false);\n\n                // Always show controls when paused or if touch\n                if (plyr.media.paused || loading) {\n                    return;\n                }\n\n                // Delay for hiding on touch\n                if (plyr.browser.isTouch) {\n                    delay = 3000;\n                }\n            }\n\n            // If toggle is false or if we're playing (regardless of toggle),\n            // then set the timer to hide the controls\n            if (!show || !plyr.media.paused) {\n                timers.hover = window.setTimeout(function() {\n                    // If the mouse is over the controls (and not entering fullscreen), bail\n                    if ((plyr.controls.pressed || plyr.controls.hover) && !isEnterFullscreen) {\n                        return;\n                    }\n\n                    _toggleClass(plyr.container, config.classes.hideControls, true);\n                }, delay);\n            }\n        }\n\n        // Add common function to retrieve media source\n        function _source(source) {\n            // If not null or undefined, parse it\n            if (!_is.undefined(source)) {\n                _updateSource(source);\n                return;\n            }\n\n            // Return the current source\n            var url;\n            switch(plyr.type) {\n                case 'youtube':\n                    url = plyr.embed.getVideoUrl();\n                    break;\n\n                case 'vimeo':\n                    plyr.embed.getVideoUrl.then(function (value) {\n                        url = value;\n                    });\n                    break;\n\n                case 'soundcloud':\n                    plyr.embed.getCurrentSound(function(object) {\n                        url = object.permalink_url;\n                    });\n                    break;\n\n                default:\n                    url = plyr.media.currentSrc;\n                    break;\n            }\n\n            return url || '';\n        }\n\n        // Update source\n        // Sources are not checked for support so be careful\n        function _updateSource(source) {\n            if (!_is.object(source) || !('sources' in source) || !source.sources.length) {\n                _warn('Invalid source format');\n                return;\n            }\n\n            // Remove ready class hook\n            _toggleClass(plyr.container, config.classes.ready, false);\n\n            // Pause playback\n            _pause();\n\n            // Update seek range and progress\n            _updateSeekDisplay();\n\n            // Reset buffer progress\n            _setProgress();\n\n            // Cancel current network requests\n            _cancelRequests();\n\n            // Setup new source\n            function setup() {\n                // Remove embed object\n                plyr.embed = null;\n\n                // Remove the old media\n                _remove(plyr.media);\n\n                // Remove video container\n                if (plyr.type === 'video' && plyr.videoContainer) {\n                    _remove(plyr.videoContainer);\n                }\n\n                // Reset class name\n                if (plyr.container) {\n                    plyr.container.removeAttribute('class');\n                }\n\n                // Set the type\n                if ('type' in source) {\n                    plyr.type = source.type;\n\n                    // Get child type for video (it might be an embed)\n                    if (plyr.type === 'video') {\n                        var firstSource = source.sources[0];\n\n                        if ('type' in firstSource && _inArray(config.types.embed, firstSource.type)) {\n                            plyr.type = firstSource.type;\n                        }\n                    }\n                }\n\n                // Check for support\n                plyr.supported = supported(plyr.type);\n\n                // Create new markup\n                switch(plyr.type) {\n                    case 'video':\n                        plyr.media = document.createElement('video');\n                        break;\n\n                    case 'audio':\n                        plyr.media = document.createElement('audio');\n                        break;\n\n                    case 'youtube':\n                    case 'vimeo':\n                    case 'soundcloud':\n                        plyr.media = document.createElement('div');\n                        plyr.embedId = source.sources[0].src;\n                        break;\n                }\n\n                // Inject the new element\n                _prependChild(plyr.container, plyr.media);\n\n                // Autoplay the new source?\n                if (_is.boolean(source.autoplay)) {\n                    config.autoplay = source.autoplay;\n                }\n\n                // Set attributes for audio and video\n                if (_inArray(config.types.html5, plyr.type)) {\n                    if (config.crossorigin) {\n                        plyr.media.setAttribute('crossorigin', '');\n                    }\n                    if (config.autoplay) {\n                        plyr.media.setAttribute('autoplay', '');\n                    }\n                    if ('poster' in source) {\n                        plyr.media.setAttribute('poster', source.poster);\n                    }\n                    if (config.loop) {\n                        plyr.media.setAttribute('loop', '');\n                    }\n                }\n\n                // Restore class hooks\n                _toggleClass(plyr.container, config.classes.fullscreen.active, plyr.isFullscreen);\n                _toggleClass(plyr.container, config.classes.captions.active, plyr.captionsEnabled);\n                _toggleStyleHook();\n\n                // Set new sources for html5\n                if (_inArray(config.types.html5, plyr.type)) {\n                    _insertChildElements('source', source.sources);\n                }\n\n                // Set up from scratch\n                _setupMedia();\n\n                // HTML5 stuff\n                if (_inArray(config.types.html5, plyr.type)) {\n                    // Setup captions\n                    if ('tracks' in source) {\n                        _insertChildElements('track', source.tracks);\n                    }\n\n                    // Load HTML5 sources\n                    plyr.media.load();\n                }\n\n                // If HTML5 or embed but not fully supported, setupInterface and call ready now\n                if (_inArray(config.types.html5, plyr.type) || (_inArray(config.types.embed, plyr.type) && !plyr.supported.full)) {\n                    // Setup interface\n                    _setupInterface();\n\n                    // Call ready\n                    _ready();\n                }\n\n                // Set aria title and iframe title\n                config.title = source.title;\n                _setTitle();\n            }\n\n            // Destroy instance adn wait for callback\n            // Vimeo throws a wobbly if you don't wait\n            _destroy(setup, false);\n        }\n\n        // Update poster\n        function _updatePoster(source) {\n            if (plyr.type === 'video') {\n                plyr.media.setAttribute('poster', source);\n            }\n        }\n\n        // Listen for control events\n        function _controlListeners() {\n            // IE doesn't support input event, so we fallback to change\n            var inputEvent = (plyr.browser.isIE ? 'change' : 'input');\n\n            // Click play/pause helper\n            function togglePlay() {\n                var play = _togglePlay();\n\n                // Determine which buttons\n                var trigger = plyr.buttons[play ? 'play' : 'pause'],\n                    target = plyr.buttons[play ? 'pause' : 'play'];\n\n                // Get the last play button to account for the large play button\n                if (target && target.length > 1) {\n                    target = target[target.length - 1];\n                } else {\n                    target = target[0];\n                }\n\n                // Setup focus and tab focus\n                if (target) {\n                    var hadTabFocus = _hasClass(trigger, config.classes.tabFocus);\n\n                    setTimeout(function() {\n                        target.focus();\n\n                        if (hadTabFocus) {\n                            _toggleClass(trigger, config.classes.tabFocus, false);\n                            _toggleClass(target, config.classes.tabFocus, true);\n                        }\n                    }, 100);\n                }\n            }\n\n            // Get the focused element\n            function getFocusElement() {\n                var focused = document.activeElement;\n\n                if (!focused || focused === document.body) {\n                    focused = null;\n                } else {\n                    focused = document.querySelector(':focus');\n                }\n\n                return focused;\n            }\n\n            // Get the key code for an event\n            function getKeyCode(event) {\n                return event.keyCode ? event.keyCode : event.which;\n            }\n\n            // Detect tab focus\n            function checkTabFocus(focused) {\n                for (var button in plyr.buttons) {\n                    var element = plyr.buttons[button];\n\n                    if (_is.nodeList(element)) {\n                        for (var i = 0; i < element.length; i++) {\n                            _toggleClass(element[i], config.classes.tabFocus, (element[i] === focused));\n                        }\n                    } else {\n                        _toggleClass(element, config.classes.tabFocus, (element === focused));\n                    }\n                }\n            }\n\n            // Keyboard shortcuts\n            if (config.keyboardShorcuts.focused) {\n                var last = null;\n\n                // Handle global presses\n                if (config.keyboardShorcuts.global) {\n                    _on(window, 'keydown keyup', function(event) {\n                        var code = getKeyCode(event),\n                        focused = getFocusElement(),\n                        allowed = [48,49,50,51,52,53,54,56,57,75,77,70,67],\n                        count   = get().length;\n\n                        // Only handle global key press if there's only one player\n                        // and the key is in the allowed keys\n                        // and if the focused element is not editable (e.g. text input)\n                        // and any that accept key input http://webaim.org/techniques/keyboard/\n                        if (count === 1 && _inArray(allowed, code) && (!_is.htmlElement(focused) || !_matches(focused, config.selectors.editable))) {\n                            handleKey(event);\n                        }\n                    });\n                }\n\n                // Handle presses on focused\n                _on(plyr.container, 'keydown keyup', handleKey);\n            }\n\n            function handleKey(event) {\n                var code = getKeyCode(event),\n                    pressed = event.type === 'keydown',\n                    held = pressed && code === last;\n\n                // If the event is bubbled from the media element\n                // Firefox doesn't get the keycode for whatever reason\n                if (!_is.number(code)) {\n                    return;\n                }\n\n                // Seek by the number keys\n                function seekByKey() {\n                    // Get current duration\n                    var duration = plyr.media.duration;\n\n                    // Bail if we have no duration set\n                    if (!_is.number(duration)) {\n                        return;\n                    }\n\n                    // Divide the max duration into 10th's and times by the number value\n                    _seek((duration / 10) * (code - 48));\n                }\n\n                // Handle the key on keydown\n                // Reset on keyup\n                if (pressed) {\n                    // Which keycodes should we prevent default\n                    var preventDefault = [48,49,50,51,52,53,54,56,57,32,75,38,40,77,39,37,70,67];\n\n                    // If the code is found prevent default (e.g. prevent scrolling for arrows)\n                    if (_inArray(preventDefault, code)) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n\n                    switch(code) {\n                        // 0-9\n                        case 48:\n                        case 49:\n                        case 50:\n                        case 51:\n                        case 52:\n                        case 53:\n                        case 54:\n                        case 55:\n                        case 56:\n                        case 57: if (!held) { seekByKey(); } break;\n                        // Space and K key\n                        case 32:\n                        case 75: if (!held) { _togglePlay(); } break;\n                        // Arrow up\n                        case 38: _increaseVolume(); break;\n                        // Arrow down\n                        case 40: _decreaseVolume(); break;\n                        // M key\n                        case 77: if (!held) { _toggleMute() } break;\n                        // Arrow forward\n                        case 39: _forward(); break;\n                        // Arrow back\n                        case 37: _rewind(); break;\n                        // F key\n                        case 70: _toggleFullscreen(); break;\n                        // C key\n                        case 67: if (!held) { _toggleCaptions(); } break;\n                    }\n\n                    // Escape is handle natively when in full screen\n                    // So we only need to worry about non native\n                    if (!fullscreen.supportsFullScreen && plyr.isFullscreen && code === 27) {\n                        _toggleFullscreen();\n                    }\n\n                    // Store last code for next cycle\n                    last = code;\n                } else {\n                    last = null;\n                }\n            }\n\n            // Focus/tab management\n            _on(window, 'keyup', function(event) {\n                var code = getKeyCode(event),\n                    focused = getFocusElement();\n\n                if (code === 9) {\n                    checkTabFocus(focused);\n                }\n            });\n            _on(document.body, 'click', function() {\n                _toggleClass(_getElement('.' + config.classes.tabFocus), config.classes.tabFocus, false);\n            });\n            for (var button in plyr.buttons) {\n                var element = plyr.buttons[button];\n\n                _on(element, 'blur', function() {\n                    _toggleClass(element, 'tab-focus', false);\n                });\n            }\n\n            // Play\n            _proxyListener(plyr.buttons.play, 'click', config.listeners.play, togglePlay);\n\n            // Pause\n            _proxyListener(plyr.buttons.pause, 'click', config.listeners.pause, togglePlay);\n\n            // Restart\n            _proxyListener(plyr.buttons.restart, 'click', config.listeners.restart, _seek);\n\n            // Rewind\n            _proxyListener(plyr.buttons.rewind, 'click', config.listeners.rewind, _rewind);\n\n            // Fast forward\n            _proxyListener(plyr.buttons.forward, 'click', config.listeners.forward, _forward);\n\n            // Seek\n            _proxyListener(plyr.buttons.seek, inputEvent, config.listeners.seek, _seek);\n\n            // Set volume\n            _proxyListener(plyr.volume.input, inputEvent, config.listeners.volume, function() {\n                _setVolume(plyr.volume.input.value);\n            });\n\n            // Mute\n            _proxyListener(plyr.buttons.mute, 'click', config.listeners.mute, _toggleMute);\n\n            // Fullscreen\n            _proxyListener(plyr.buttons.fullscreen, 'click', config.listeners.fullscreen, _toggleFullscreen);\n\n            // Handle user exiting fullscreen by escaping etc\n            if (fullscreen.supportsFullScreen) {\n                _on(document, fullscreen.fullScreenEventName, _toggleFullscreen);\n            }\n\n            // Captions\n            _proxyListener(plyr.buttons.captions, 'click', config.listeners.captions, _toggleCaptions);\n\n            // Seek tooltip\n            _on(plyr.progress.container, 'mouseenter mouseleave mousemove', _updateSeekTooltip);\n\n            // Toggle controls visibility based on mouse movement\n            if (config.hideControls) {\n                // Toggle controls on mouse events and entering fullscreen\n                _on(plyr.container, 'mouseenter mouseleave mousemove touchstart touchend touchcancel touchmove enterfullscreen', _toggleControls);\n\n                // Watch for cursor over controls so they don't hide when trying to interact\n                _on(plyr.controls, 'mouseenter mouseleave', function(event) {\n                    plyr.controls.hover = event.type === 'mouseenter';\n                });\n\n                 // Watch for cursor over controls so they don't hide when trying to interact\n                _on(plyr.controls, 'mousedown mouseup touchstart touchend touchcancel', function(event) {\n                    plyr.controls.pressed = _inArray(['mousedown', 'touchstart'], event.type);\n                });\n\n                // Focus in/out on controls\n                _on(plyr.controls, 'focus blur', _toggleControls, true);\n            }\n\n            // Adjust volume on scroll\n            _on(plyr.volume.input, 'wheel', function(event) {\n                event.preventDefault();\n\n                // Detect \"natural\" scroll - suppored on OS X Safari only\n                // Other browsers on OS X will be inverted until support improves\n                var inverted = event.webkitDirectionInvertedFromDevice,\n                    step = (config.volumeStep / 5);\n\n                // Scroll down (or up on natural) to decrease\n                if (event.deltaY < 0 || event.deltaX > 0) {\n                    if (inverted) {\n                        _decreaseVolume(step);\n                    } else {\n                        _increaseVolume(step);\n                    }\n                }\n\n                // Scroll up (or down on natural) to increase\n                if (event.deltaY > 0 || event.deltaX < 0) {\n                    if (inverted) {\n                        _increaseVolume(step);\n                    } else {\n                        _decreaseVolume(step);\n                    }\n                }\n            });\n        }\n\n        // Listen for media events\n        function _mediaListeners() {\n            // Time change on media\n            _on(plyr.media, 'timeupdate seeking', _timeUpdate);\n\n            // Update manual captions\n            _on(plyr.media, 'timeupdate', _seekManualCaptions);\n\n            // Display duration\n            _on(plyr.media, 'durationchange loadedmetadata', _displayDuration);\n\n            // Handle the media finishing\n            _on(plyr.media, 'ended', function() {\n                // Show poster on end\n                if (plyr.type === 'video' && config.showPosterOnEnd) {\n                    // Clear\n                    if (plyr.type === 'video') {\n                        _setCaption();\n                    }\n\n                    // Restart\n                    _seek();\n\n                    // Re-load media\n                    plyr.media.load();\n                }\n            });\n\n            // Check for buffer progress\n            _on(plyr.media, 'progress playing', _updateProgress);\n\n            // Handle native mute\n            _on(plyr.media, 'volumechange', _updateVolume);\n\n            // Handle native play/pause\n            _on(plyr.media, 'play pause ended', _checkPlaying);\n\n            // Loading\n            _on(plyr.media, 'waiting canplay seeked', _checkLoading);\n\n            // Click video\n            if (config.clickToPlay && plyr.type !== 'audio') {\n                // Re-fetch the wrapper\n                var wrapper = _getElement('.' + config.classes.videoWrapper);\n\n                // Bail if there's no wrapper (this should never happen)\n                if (!wrapper) {\n                    return;\n                }\n\n                // Set cursor\n                wrapper.style.cursor = \"pointer\";\n\n                // On click play, pause ore restart\n                _on(wrapper, 'click', function() {\n                    // Touch devices will just show controls (if we're hiding controls)\n                    if (config.hideControls && plyr.browser.isTouch && !plyr.media.paused) {\n                        return;\n                    }\n\n                    if (plyr.media.paused) {\n                        _play();\n                    } else if (plyr.media.ended) {\n                        _seek();\n                        _play();\n                    } else {\n                        _pause();\n                    }\n                });\n            }\n\n            // Disable right click\n            if (config.disableContextMenu) {\n                _on(plyr.media, 'contextmenu', function(event) { event.preventDefault(); });\n            }\n\n            // Proxy events to container\n            // Bubble up key events for Edge\n            _on(plyr.media, config.events.concat(['keyup', 'keydown']).join(' '), function(event) {\n                _triggerEvent(plyr.container, event.type, true);\n            });\n        }\n\n        // Cancel current network requests\n        // See https://github.com/sampotts/plyr/issues/174\n        function _cancelRequests() {\n            if (!_inArray(config.types.html5, plyr.type)) {\n                return;\n            }\n\n            // Remove child sources\n            var sources = plyr.media.querySelectorAll('source');\n            for (var i = 0; i < sources.length; i++) {\n                _remove(sources[i]);\n            }\n\n            // Set blank video src attribute\n            // This is to prevent a MEDIA_ERR_SRC_NOT_SUPPORTED error\n            // Info: http://stackoverflow.com/questions/32231579/how-to-properly-dispose-of-an-html5-video-and-close-socket-or-connection\n            plyr.media.setAttribute('src', config.blankUrl);\n\n            // Load the new empty source\n            // This will cancel existing requests\n            // See https://github.com/sampotts/plyr/issues/174\n            plyr.media.load();\n\n            // Debugging\n            _log('Cancelled network requests');\n        }\n\n        // Destroy an instance\n        // Event listeners are removed when elements are removed\n        // http://stackoverflow.com/questions/12528049/if-a-dom-element-is-removed-are-its-listeners-also-removed-from-memory\n        function _destroy(callback, restore) {\n            // Bail if the element is not initialized\n            if (!plyr.init) {\n                return null;\n            }\n\n            // Type specific stuff\n            switch (plyr.type) {\n                case 'youtube':\n                    // Clear timers\n                    window.clearInterval(timers.buffering);\n                    window.clearInterval(timers.playing);\n\n                    // Destroy YouTube API\n                    plyr.embed.destroy();\n\n                    // Clean up\n                    cleanUp();\n\n                    break;\n\n                case 'vimeo':\n                    // Destroy Vimeo API\n                    // then clean up (wait, to prevent postmessage errors)\n                    plyr.embed.unload().then(cleanUp);\n\n                    // Vimeo does not always return\n                    timers.cleanUp = window.setTimeout(cleanUp, 200);\n\n                    break;\n\n                case 'video':\n                case 'audio':\n                    // Restore native video controls\n                    _toggleNativeControls(true);\n\n                    // Clean up\n                    cleanUp();\n\n                    break;\n            }\n\n            function cleanUp() {\n                clearTimeout(timers.cleanUp);\n\n                // Default to restore original element\n                if (!_is.boolean(restore)) {\n                    restore = true;\n                }\n\n                // Callback\n                if (_is.function(callback)) {\n                    callback.call(original);\n                }\n\n                // Bail if we don't need to restore the original element\n                if (!restore) {\n                    return;\n                }\n\n                // Remove init flag\n                plyr.init = false;\n\n                // Replace the container with the original element provided\n                plyr.container.parentNode.replaceChild(original, plyr.container);\n\n                // Allow overflow (set on fullscreen)\n                document.body.style.overflow = '';\n\n                // Event\n                _triggerEvent(original, 'destroyed', true);\n            }\n        }\n\n        // Setup a player\n        function _init() {\n            // Bail if the element is initialized\n            if (plyr.init) {\n                return null;\n            }\n\n            // Setup the fullscreen api\n            fullscreen = _fullscreen();\n\n            // Sniff out the browser\n            plyr.browser = _browserSniff();\n\n            // Bail if nothing to setup\n            if (!_is.htmlElement(plyr.media)) {\n                return;\n            }\n\n            // Load saved settings from localStorage\n            _setupStorage();\n\n            // Set media type based on tag or data attribute\n            // Supported: video, audio, vimeo, youtube\n            var tagName = media.tagName.toLowerCase();\n            if (tagName === 'div') {\n                plyr.type     = media.getAttribute('data-type');\n                plyr.embedId  = media.getAttribute('data-video-id');\n\n                // Clean up\n                media.removeAttribute('data-type');\n                media.removeAttribute('data-video-id');\n            } else {\n                plyr.type           = tagName;\n                config.crossorigin  = (media.getAttribute('crossorigin') !== null);\n                config.autoplay     = (config.autoplay || (media.getAttribute('autoplay') !== null));\n                config.loop         = (config.loop || (media.getAttribute('loop') !== null));\n            }\n\n            // Check for support\n            plyr.supported = supported(plyr.type);\n\n            // If no native support, bail\n            if (!plyr.supported.basic) {\n                return;\n            }\n\n            // Wrap media\n            plyr.container = _wrap(media, document.createElement('div'));\n\n            // Allow focus to be captured\n            plyr.container.setAttribute('tabindex', 0);\n\n            // Add style hook\n            _toggleStyleHook();\n\n            // Debug info\n            _log('' + plyr.browser.name + ' ' + plyr.browser.version);\n\n            // Setup media\n            _setupMedia();\n\n            // Setup interface\n            // If embed but not fully supported, setupInterface (to avoid flash of controls) and call ready now\n            if (_inArray(config.types.html5, plyr.type) || (_inArray(config.types.embed, plyr.type) && !plyr.supported.full)) {\n                // Setup UI\n                _setupInterface();\n\n                // Call ready\n                _ready();\n\n                // Set title on button and frame\n                _setTitle();\n            }\n\n            // Successful setup\n            plyr.init = true;\n        }\n\n        // Setup the UI\n        function _setupInterface() {\n            // Don't setup interface if no support\n            if (!plyr.supported.full) {\n                _warn('Basic support only', plyr.type);\n\n                // Remove controls\n                _remove(_getElement(config.selectors.controls.wrapper));\n\n                // Remove large play\n                _remove(_getElement(config.selectors.buttons.play));\n\n                // Restore native controls\n                _toggleNativeControls(true);\n\n                // Bail\n                return;\n            }\n\n            // Inject custom controls if not present\n            var controlsMissing = !_getElements(config.selectors.controls.wrapper).length;\n            if (controlsMissing) {\n                // Inject custom controls\n                _injectControls();\n            }\n\n            // Find the elements\n            if (!_findElements()) {\n                return;\n            }\n\n            // If the controls are injected, re-bind listeners for controls\n            if (controlsMissing) {\n                _controlListeners();\n            }\n\n            // Media element listeners\n            _mediaListeners();\n\n            // Remove native controls\n            _toggleNativeControls();\n\n            // Setup fullscreen\n            _setupFullscreen();\n\n            // Captions\n            _setupCaptions();\n\n            // Set volume\n            _setVolume();\n            _updateVolume();\n\n            // Reset time display\n            _timeUpdate();\n\n            // Update the UI\n            _checkPlaying();\n        }\n\n        api = {\n            getOriginal:        function() { return original; },\n            getContainer:       function() { return plyr.container },\n            getEmbed:           function() { return plyr.embed; },\n            getMedia:           function() { return plyr.media; },\n            getType:            function() { return plyr.type; },\n            getDuration:        _getDuration,\n            getCurrentTime:     function() { return plyr.media.currentTime; },\n            getVolume:          function() { return plyr.media.volume; },\n            isMuted:            function() { return plyr.media.muted; },\n            isReady:            function() { return _hasClass(plyr.container, config.classes.ready); },\n            isLoading:          function() { return _hasClass(plyr.container, config.classes.loading); },\n            isPaused:           function() { return plyr.media.paused; },\n            on:                 function(event, callback) { _on(plyr.container, event, callback); return this; },\n            play:               _play,\n            pause:              _pause,\n            stop:               function() { _pause(); _seek(); },\n            restart:            _seek,\n            rewind:             _rewind,\n            forward:            _forward,\n            seek:               _seek,\n            source:             _source,\n            poster:             _updatePoster,\n            setVolume:          _setVolume,\n            togglePlay:         _togglePlay,\n            toggleMute:         _toggleMute,\n            toggleCaptions:     _toggleCaptions,\n            toggleFullscreen:   _toggleFullscreen,\n            toggleControls:     _toggleControls,\n            isFullscreen:       function() { return plyr.isFullscreen || false; },\n            support:            function(mimeType) { return _supportMime(plyr, mimeType); },\n            destroy:            _destroy\n        };\n\n        // Everything done\n        function _ready() {\n            // Ready event at end of execution stack\n            window.setTimeout(function() {\n                _triggerEvent(plyr.media, 'ready');\n            }, 0);\n\n            // Set class hook on media element\n            _toggleClass(plyr.media, defaults.classes.setup, true);\n\n            // Set container class for ready\n            _toggleClass(plyr.container, config.classes.ready, true);\n\n            // Store a refernce to instance\n            plyr.media.plyr = api;\n\n            // Autoplay\n            if (config.autoplay) {\n                _play();\n            }\n        }\n\n        // Initialize instance\n        _init();\n\n        // If init failed, return null\n        if (!plyr.init) {\n            return null;\n        }\n\n        return api;\n    }\n\n    // Load a sprite\n    function loadSprite(url, id) {\n        var x = new XMLHttpRequest();\n\n        // If the id is set and sprite exists, bail\n        if (_is.string(id) && _is.htmlElement(document.querySelector('#' + id))) {\n            return;\n        }\n\n        // Create placeholder (to prevent loading twice)\n        var container = document.createElement('div');\n        container.setAttribute('hidden', '');\n        if (_is.string(id)) {\n            container.setAttribute('id', id);\n        }\n        document.body.insertBefore(container, document.body.childNodes[0]);\n\n        // Check for CORS support\n        if ('withCredentials' in x) {\n            x.open('GET', url, true);\n        } else {\n            return;\n        }\n\n        // Inject hidden div with sprite on load\n        x.onload = function() {\n            container.innerHTML = x.responseText;\n        }\n\n        x.send();\n    }\n\n    // Check for support\n    function supported(type) {\n        var browser     = _browserSniff(),\n            isOldIE     = (browser.isIE && browser.version <= 9),\n            isIos       = browser.isIos,\n            isIphone    = browser.isIphone,\n            audioSupport = !!document.createElement('audio').canPlayType,\n            videoSupport = !!document.createElement('video').canPlayType,\n            basic       = false,\n            full        = false;\n\n        switch (type) {\n            case 'video':\n                basic = videoSupport;\n                full  = (basic && (!isOldIE && !isIphone));\n                break;\n\n            case 'audio':\n                basic = audioSupport;\n                full  = (basic && !isOldIE);\n                break;\n\n            // Vimeo does not seem to be supported on iOS via API\n            // Issue raised https://github.com/vimeo/player.js/issues/87\n            case 'vimeo':\n                basic = true;\n                full = (!isOldIE && !isIos);\n                break;\n\n            case 'youtube':\n                basic = true;\n                full = (!isOldIE && !isIos);\n\n                // YouTube seems to work on iOS 10+ on iPad\n                if (isIos && !isIphone && browser.version >= 10) {\n                    full = true;\n                }\n\n                break;\n\n            case 'soundcloud':\n                basic = true;\n                full  = (!isOldIE && !isIphone);\n                break;\n\n            default:\n                basic = (audioSupport && videoSupport);\n                full  = (basic && !isOldIE);\n        }\n\n        return {\n            basic:  basic,\n            full:   full\n        };\n    }\n\n    // Setup function\n    function setup(targets, options) {\n        // Get the players\n        var players     = [],\n            instances   = [],\n            selector    = [defaults.selectors.html5, defaults.selectors.embed].join(',');\n\n        // Select the elements\n        if (_is.string(targets)) {\n            // String selector passed\n            targets = document.querySelectorAll(targets);\n        }  else if (_is.htmlElement(targets)) {\n            // Single HTMLElement passed\n            targets = [targets];\n        }  else if (!_is.nodeList(targets) && !_is.array(targets) && !_is.string(targets))  {\n            // No selector passed, possibly options as first argument\n            // If options are the first argument\n            if (_is.undefined(options) && _is.object(targets)) {\n                options = targets;\n            }\n\n            // Use default selector\n            targets = document.querySelectorAll(selector);\n        }\n\n        // Convert NodeList to array\n        if (_is.nodeList(targets)) {\n            targets = Array.prototype.slice.call(targets);\n        }\n\n        // Bail if disabled or no basic support\n        // You may want to disable certain UAs etc\n        if (!supported().basic || !targets.length) {\n            return false;\n        }\n\n        // Add to container list\n        function add(target, media) {\n            if (!_hasClass(media, defaults.classes.hook)) {\n                players.push({\n                    // Always wrap in a <div> for styling\n                    //container:  _wrap(media, document.createElement('div')),\n                    // Could be a container or the media itself\n                    target:     target,\n                    // This should be the <video>, <audio> or <div> (YouTube/Vimeo)\n                    media:      media\n                });\n            }\n        }\n\n        // Check if the targets have multiple media elements\n        for (var i = 0; i < targets.length; i++) {\n            var target = targets[i];\n\n            // Get children\n            var children = target.querySelectorAll(selector);\n\n            // If there's more than one media element child, wrap them\n            if (children.length) {\n                for (var x = 0; x < children.length; x++) {\n                    add(target, children[x]);\n                }\n            } else if (_matches(target, selector)) {\n                // Target is media element\n                add(target, target);\n            }\n        }\n\n        // Create a player instance for each element\n        players.forEach(function(player) {\n            var element     = player.target,\n                media       = player.media,\n                match       = false;\n\n            // The target element can also be the media element\n            if (media === element) {\n                match = true;\n            }\n\n            // Setup a player instance and add to the element\n            // Create instance-specific config\n            var data = {};\n\n            // Try parsing data attribute config\n            try { data = JSON.parse(element.getAttribute('data-plyr')); }\n            catch(e) { }\n\n            var config = _extend({}, defaults, options, data);\n\n            // Bail if not enabled\n            if (!config.enabled) {\n                return null;\n            }\n\n            // Create new instance\n            var instance = new Plyr(media, config);\n\n            // Go to next if setup failed\n            if (!_is.object(instance)) {\n                return;\n            }\n\n            // Listen for events if debugging\n            if (config.debug) {\n                var events = config.events.concat(['setup', 'statechange', 'enterfullscreen', 'exitfullscreen', 'captionsenabled', 'captionsdisabled']);\n\n                _on(instance.getContainer(), events.join(' '), function(event) {\n                    console.log([config.logPrefix, 'event:', event.type].join(' '), event.detail.plyr);\n                });\n            }\n\n            // Callback\n            _event(instance.getContainer(), 'setup', true, {\n                plyr: instance\n            });\n\n            // Add to return array even if it's already setup\n            instances.push(instance);\n        });\n\n        return instances;\n    }\n\n    // Get all instances within a provided container\n    function get(container) {\n        if (_is.string(container)) {\n            // Get selector if string passed\n            container = document.querySelector(container);\n        } else if (_is.undefined(container)) {\n            // Use body by default to get all on page\n            container = document.body;\n        }\n\n        // If we have a HTML element\n        if (_is.htmlElement(container)) {\n            var elements = container.querySelectorAll('.' + defaults.classes.setup),\n                instances = [];\n\n            Array.prototype.slice.call(elements).forEach(function(element) {\n                if (_is.object(element.plyr)) {\n                    instances.push(element.plyr);\n                }\n            });\n\n            return instances;\n        }\n\n        return [];\n    }\n\n    return {\n        setup:      setup,\n        supported:  supported,\n        loadSprite: loadSprite,\n        get:        get\n    };\n}));\n\n// Custom event polyfill\n// https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent\n(function () {\n    if (typeof window.CustomEvent === 'function') {\n        return;\n    }\n\n    function CustomEvent(event, params) {\n        params = params || { bubbles: false, cancelable: false, detail: undefined };\n        var evt = document.createEvent('CustomEvent');\n        evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n        return evt;\n    }\n\n    CustomEvent.prototype = window.Event.prototype;\n\n    window.CustomEvent = CustomEvent;\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/plyr/src/js/plyr.js\n// module id = 0\n// module chunks = 0","// Touchscreen detector\n// http://www.javascriptkit.com/dhtmltutors/sticky-hover-issue-solutions.shtml\n\nconst detectTouch = () => {\n  let isTouch = false // variable to indicate current input type (is touch versus no touch)\n  let isTouchTimer\n  let curRootClass = '' // variable indicating current document root class (\"isTouchscreen\" or \"\")\n\n  function addTouchClass () {\n    clearTimeout(isTouchTimer)\n    isTouch = true\n\n    // add \"isTouchscreen' class if it's not already present\n    if (curRootClass !== 'isTouchscreen') {\n      curRootClass = 'isTouchscreen'\n      document.documentElement.classList.add(curRootClass)\n    }\n\n    // maintain \"istouch\" state for 500ms\n    // so removeTouchClass doesn't get fired immediately following a touch event\n    isTouchTimer = setTimeout(() => {\n      isTouch = false\n    }, 500)\n  }\n\n  function removeTouchClass () {\n    // remove 'isTouchscreen' class if not triggered by a touch event and class is present\n    if (!isTouch && curRootClass === 'isTouchscreen') {\n      isTouch = false\n      curRootClass = ''\n      document.documentElement.classList.remove('isTouchscreen')\n    }\n  }\n\n  // this event only gets called when input type is touch\n  document.addEventListener('touchstart', addTouchClass, false)\n\n  // this event gets called when input type is everything from touch to mouse/trackpad\n  document.addEventListener('mouseover', removeTouchClass, false)\n}\n\nexport default detectTouch\n\n\n\n// WEBPACK FOOTER //\n// ./src/static/js/components/detectTouch.js","import plyr from 'plyr'\nimport { device } from 'device.js'\n\nconst visibleClass = 'is-visible'\n\n/*\n//const playReelButton = document.getElementById('js-play-reel')\n//const overlay = document.getElementById('js-overlay')\nconst overlayContent = document.getElementById('js-overlay-content')\nconst overlayBlobs = document.getElementById('js-overlay-blobs')\nconst overlayCloseButton = document.getElementById('js-close-overlay')\n\nlet reelPlayer\n\nconst overlayVisible = () => {\n  return overlay.classList.contains(visibleClass)\n}\n\nconst showOverlayContent = () => {\n  overlayContent.classList.add(visibleClass)\n}\n\nconst hideOverlayContent = () => {\n  overlayContent.classList.remove(visibleClass)\n}\n\nconst closeOverlay = () => {\n  document.body.classList.remove('u-no-scroll')\n  overlayCloseButton.classList.remove(visibleClass)\n\n  reelPlayer.pause()\n  hideOverlayContent()\n\n  setTimeout(() => {\n    overlay.classList.remove(visibleClass)\n  }, 300)\n}\n\nconst openOverlay = () => {\n  document.body.classList.add('u-no-scroll')\n\n  overlay.classList.add(visibleClass)\n  // Wait for animation to complete to pause video in the back\n  setTimeout(() => {\n    showOverlayContent()\n\n    // only auto play if it's not mobile and ios\n    if (device.desktop) {\n      reelPlayer.play()\n    }\n\n    overlayCloseButton.classList.add(visibleClass)\n  }, 300)\n}\n\nconst playReel = () => {\n  playReelButton.addEventListener('click', (e) => {\n    e.preventDefault()\n\n    if (!reelPlayer) {\n      reelPlayer = plyr.setup('.js-homepage-reel')[0]\n      reelPlayer.on('ended', () => {\n        closeOverlay()\n      })\n    }\n\n    if (overlayVisible()) {\n      closeOverlay()\n    } else {\n      openOverlay()\n    }\n  })\n\n  overlayBlobs.addEventListener('click', () => {\n    if (overlayVisible()) {\n      closeOverlay()\n    }\n  })\n\n  overlayCloseButton.addEventListener('click', () => {\n    if (overlayVisible()) {\n      closeOverlay()\n    }\n  })\n}\n\nexport default playReel*/\n\n\n\n// WEBPACK FOOTER //\n// ./src/static/js/components/homepage.js","const mobileNav = () => {\n  console.log(\"HEEEY\");\n  const navToggles = document.querySelectorAll('.js-toggle-nav')\n  const nav = document.querySelector('.js-nav')\n  const overlay = document.querySelector('.js-overlay')\n\n  Array.from(navToggles).forEach((toggle) => {\n    toggle.addEventListener('click', (e) => {\n      nav.classList.toggle('is-open')\n      toggle.classList.toggle('is-active')\n      overlay.classList.toggle('is-active')\n\n      if (nav.classList.contains('is-open')) {\n        nav.setAttribute('aria-label', 'Close mobile menu')\n      } else {\n        nav.setAttribute('aria-label', 'Open mobile menu')\n      }\n    })\n  })\n}\n\nexport default mobileNav\n\n\n\n// WEBPACK FOOTER //\n// ./src/static/js/components/mobileNav.js","export const formatTime = (timeString) => {\n  const secNum = parseInt(timeString, 10)\n  let hours = Math.floor(secNum / 3600)\n  let minutes = Math.floor((secNum - (hours * 3600)) / 60)\n  let seconds = secNum - (hours * 3600) - (minutes * 60)\n\n  if (hours < 10) {\n    hours = `0${hours}`\n  }\n\n  if (minutes < 10) {\n    minutes = `0${minutes}`\n  }\n\n  if (seconds < 10) {\n    seconds = `0${seconds}`\n  }\n\n  return `${minutes}:${seconds}`\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/static/js/utilities/time.js","import 'waypoints'\n\nexport const createWaypoint = (element, offset, direction = 'down') => {\n  if (!element) {\n    return\n  }\n\n  new Waypoint({ // eslint-disable-line\n    element,\n    handler (d) {\n      if (d === direction) {\n        this.element.classList.add('is-loaded')\n        this.destroy()\n      }\n    },\n    offset\n  })\n}\n\n// Header logo\ncreateWaypoint(document.querySelector('.js-way-logo'), '32%')\n\n// Primary nav, Projects filter nav, and other items\nArray.from(document.querySelectorAll('.js-way-nav')).forEach((el) => {\n  createWaypoint(el, '50%')\n})\n\n// Hero items\n/*Array.from(document.querySelectorAll('.js-way-heroItem')).forEach((el) => {\n  createWaypoint(el, '100%')\n})*/\n\n// About text - mobile\ncreateWaypoint(document.querySelector('.js-way-aboutMb'), '80%')\n\n// About text - desktop\ncreateWaypoint(document.querySelector('.js-way-aboutDt'), '80%')\n\n// Main text\ncreateWaypoint(document.querySelector('.js-way-mainText'), '90%')\n\n// Bio - job title\ncreateWaypoint(document.querySelector('.js-way-bioJobTitle'), '80%')\n\n// Bio text\ncreateWaypoint(document.querySelector('.js-way-bioText'), '90%')\n\n// Projects title (\"Our Work\")\ncreateWaypoint(document.querySelector('.js-way-projTitle'), '80%')\n\n// Project items\nconst projItems = Array.from(document.querySelectorAll('.js-way-project-home'))\nprojItems.forEach((element) => {\n  createWaypoint(element, '75%')\n})\n\n// Project items legacy\nconst legacyProjItems = Array.from(document.querySelectorAll('.js-way-projItems'))\nlegacyProjItems.forEach((element) => {\n  createWaypoint(element, '75%')\n})\n\n// Gallery items\nArray.from(document.querySelectorAll('.js-way-galleryItems')).forEach((element) => {\n  createWaypoint(element, '65%')\n})\n\n// Footer CTA\ncreateWaypoint(document.querySelector('.js-way-footerCTA'), '100%')\n\n// Footer - \"Watch Next\" text\ncreateWaypoint(document.querySelector('.js-way-watchNext'), '80%')\n\n// Footer links\ncreateWaypoint(document.querySelector('.js-way-footerLinks'), '97%')\n\n// Contact\nArray.from(document.querySelectorAll('.js-way-contact')).forEach((element) => {\n  createWaypoint(element, '80%')\n})\n\n/*\nvar waypoint = new Waypoint({\n  element: document.getElementById('phone-waypoint'),\n  handler: function() {\n    console.log(\"wayyyypoint\");\n    document.getElementById('phone-waypoint').classList.add(\"mainphone--fixed\");\n  }\n})*/\n\n\n\n// WEBPACK FOOTER //\n// ./src/static/js/waypoints.js","import playReel from './components/homepage'\nimport mobileNav from './components/mobileNav'\nimport detectTouch from './components/detectTouch'\n//import projects from './components/projects'\nimport plyr from 'plyr'\nimport { formatTime } from './utilities/time'\nimport './waypoints'\n\n\nconst el = document.querySelector(\".content--sticky\")\nconst observer = new IntersectionObserver( \n  ([e]) => e.target.classList.toggle(\"is-pinned\", e.intersectionRatio < 1),\n  { threshold: [1] }\n);\n\nobserver.observe(el);\n\nconsole.log(\"HEEEYx2\")\n\nif (document.getElementById('js-overlay')) {\n  //playReel()\n}\n\nif (document.getElementById('js-projects')) {\n  projects()\n}\n\ndetectTouch()\nmobileNav()\n\n// Plyr initialization\nconst plyrOptions = {\n  controls: ['play-large', 'fullscreen']\n}\n\nconst instance = plyr.setup(document.querySelectorAll('.js-plyr'), plyrOptions)[0]\n\nif (instance) {\n  const videoLength = document.querySelector('.js-video-length')\n\n  // on play add hasPlayed class so we know it's dirty\n  instance.on('play', (e) => {\n    e.target.classList.add('plyr--hasPlayed')\n  })\n\n  // reset hasPlayed so we can show the poster again\n  instance.on('ended', (e) => {\n    e.target.classList.remove('plyr--hasPlayed')\n\n    // reset the video length to the original length\n    if (videoLength) {\n      videoLength.innerHTML = videoLength.dataset.originalTime\n    }\n  })\n\n  // if there's a video lenght on the page update it on play\n  if (videoLength) {\n    instance.on('timeupdate', (e) => {\n      // prevent the initial pass through that returns 0\n      if (!e.target.classList.contains('plyr--hasPlayed')) {\n        return\n      }\n\n      const secondsLeft = e.detail.plyr.getDuration() - e.detail.plyr.getCurrentTime()\n      videoLength.innerHTML = formatTime(`${secondsLeft}`)\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/static/js/app.js","var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n\n\n\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar hasClass_1 = createCommonjsModule(function (module, exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = hasClass;\nfunction hasClass(element, className) {\n  if (element.classList) { return !!className && element.classList.contains(className); }else { return (\" \" + element.className + \" \").indexOf(\" \" + className + \" \") !== -1; }\n}\nmodule.exports = exports[\"default\"];\n});\n\nvar addClass_1 = createCommonjsModule(function (module, exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addClass;\n\n\n\nvar _hasClass2 = _interopRequireDefault(hasClass_1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction addClass(element, className) {\n  if (element.classList) { element.classList.add(className); }else if (!(0, _hasClass2.default)(element)) { element.className = element.className + ' ' + className; }\n}\nmodule.exports = exports['default'];\n});\n\nvar removeClass = function removeClass(element, className) {\n  if (element.classList) { element.classList.remove(className); }else { element.className = element.className.replace(new RegExp('(^|\\\\s)' + className + '(?:\\\\s|$)', 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, ''); }\n};\n\nvar index = createCommonjsModule(function (module, exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hasClass = exports.removeClass = exports.addClass = undefined;\n\n\n\nvar _addClass2 = _interopRequireDefault(addClass_1);\n\n\n\nvar _removeClass2 = _interopRequireDefault(removeClass);\n\n\n\nvar _hasClass2 = _interopRequireDefault(hasClass_1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.addClass = _addClass2.default;\nexports.removeClass = _removeClass2.default;\nexports.hasClass = _hasClass2.default;\nexports.default = { addClass: _addClass2.default, removeClass: _removeClass2.default, hasClass: _hasClass2.default };\n});\n\nvar index_2 = index.removeClass;\nvar index_3 = index.addClass;\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nvar isObject_1 = isObject;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof commonjsGlobal == 'object' && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;\n\nvar _freeGlobal = freeGlobal;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = _freeGlobal || freeSelf || Function('return this')();\n\nvar _root = root;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return _root.Date.now();\n};\n\nvar now_1 = now;\n\n/** Built-in value references. */\nvar Symbol = _root.Symbol;\n\nvar _Symbol = Symbol;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag$1 = _Symbol ? _Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag$1),\n      tag = value[symToStringTag$1];\n\n  try {\n    value[symToStringTag$1] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag$1] = tag;\n    } else {\n      delete value[symToStringTag$1];\n    }\n  }\n  return result;\n}\n\nvar _getRawTag = getRawTag;\n\n/** Used for built-in method references. */\nvar objectProto$1 = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString$1 = objectProto$1.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString$1.call(value);\n}\n\nvar _objectToString = objectToString;\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]';\nvar undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = _Symbol ? _Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? _getRawTag(value)\n    : _objectToString(value);\n}\n\nvar _baseGetTag = baseGetTag;\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nvar isObjectLike_1 = isObjectLike;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike_1(value) && _baseGetTag(value) == symbolTag);\n}\n\nvar isSymbol_1 = isSymbol;\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol_1(value)) {\n    return NAN;\n  }\n  if (isObject_1(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject_1(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nvar toNumber_1 = toNumber;\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT$1 = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\nvar nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT$1);\n  }\n  wait = toNumber_1(wait) || 0;\n  if (isObject_1(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber_1(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now_1();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now_1());\n  }\n\n  function debounced() {\n    var time = now_1(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nvar debounce_1 = debounce;\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject_1(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce_1(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nvar throttle_1 = throttle;\n\nvar documentTimeout = null;\n\nvar documentCallbacks = [];\nvar stopDocumentTimeout = function () {\n  if (documentTimeout) {\n    clearTimeout(documentTimeout);\n    documentTimeout = null;\n  }\n};\n\nvar waitForDocument = function (callback) {\n  if (callback) {\n    documentCallbacks.push(callback);\n  }\n  if (typeof document !== 'undefined') {\n    stopDocumentTimeout();\n    for (var i = 0, l = documentCallbacks.length; i < l; i++) {\n      documentCallbacks[i](document);\n    }\n    documentCallbacks.length = 0;\n    return;\n  }\n  stopDocumentTimeout();\n  setTimeout(function () {\n    waitForDocument();\n  }, 100);\n};\n\nvar getUserAgent = function () {\n  if (typeof document !== 'undefined') {\n    return window.navigator.userAgent;\n  }\n  return '';\n};\n\n\nvar isIE = function (v) {\n  return RegExp('msie' + (!isNaN(v)?('\\\\s'+v):''), 'i').test(navigator.userAgent);\n};\n\n// const getDocumentElement = () => {\n//   if (typeof document !== 'undefined') {\n//     return document.documentElement;\n//   }\n//   return null;\n// };\n\n// Check if documentElement already has a given class.\n// const hasClass = (domNode, className) => {\n//   let regex;\n//   regex = new RegExp(className, 'i');\n//   return domNode.className.match(regex);\n// };\n\n// // Add one or more CSS classes to the <html> element.\n// const addClass = (domNode, className) => {\n//   let currentClassNames = null;\n//   if (!hasClass(domNode, className)) {\n//     currentClassNames = domNode.className.replace(/^\\s+|\\s+$/g, '');\n//     domNode.className = currentClassNames + ' ' + className;\n//   }\n// };\n\n// // Remove single CSS class from the <html> element.\n// const removeClass = (domNode, className) => {\n//   if (hasClass(domNode, className)) {\n//     domNode.className = domNode.className.replace(' ' + className, '');\n//   }\n// };\n\nvar staticDevice = null;\n\nvar Device = function Device(userAgent) {\n  var this$1 = this;\n  if ( userAgent === void 0 ) userAgent = null;\n\n  this.state = {\n    addedClasses: false\n  };\n\n  this.matchCache = {};\n  this.featureCache = {};\n  this.classes = '';\n\n  this.setUserAgent(userAgent);\n\n  this.callback = null;\n\n  if (typeof document === 'undefined' && !this.userAgent) {\n    // console.log('document net defined');\n    waitForDocument(function () {\n      this$1.setUserAgent();\n    });\n  }\n};\n\nvar prototypeAccessors = { features: {},deviceorientation: {},ie9: {},touchDevice: {},touch: {},ios: {},iphone: {},ipod: {},ipad: {},android: {},androidPhone: {},androidTablet: {},blackberry: {},blackberryPhone: {},blackberryTablet: {},windows: {},ie10: {},windowsPhone: {},windowsTablet: {},fxos: {},fxosPhone: {},fxosTablet: {},meego: {},cordova: {},nodeWebkit: {},mobile: {},tablet: {},desktop: {},television: {},portrait: {},landscape: {} };\nvar staticAccessors = { device: {} };\n\nstaticAccessors.device.get = function () {\n  if (!staticDevice) {\n    staticDevice = new Device();\n  }\n  return staticDevice;\n};\n\nDevice.prototype.match = function match (needle) {\n  if (!this.matchCache[needle]) {\n    this.matchCache[needle] = this.userAgent.indexOf(needle) > -1;\n  }\n  return this.matchCache[needle];\n};\n\nDevice.prototype.feature = function feature (key) {\n\n  return this.featureCache[key];\n};\n\nDevice.prototype.addFeature = function addFeature (key, value) {\n  if (!this.featureCache[key]) {\n    this.featureCache[key] = value;\n  }\n  return value;\n};\n\nDevice.prototype.setUserAgent = function setUserAgent (userAgent) {\n    if ( userAgent === void 0 ) userAgent = null;\n\n  this.userAgent = userAgent || this.userAgent || getUserAgent();\n\n  if (this.userAgent) {\n    stopDocumentTimeout();\n    this.matchCache = {};\n    this.userAgent = this.userAgent.toLowerCase();\n  }\n};\n\nDevice.prototype.onOrientationChange = function onOrientationChange (orientation) {\n  // console.log('orientation', orientation);\n};\n\nDevice.prototype.getClasses = function getClasses () {\n  if (this.classes) {\n    return this.classes;\n  }\n\n  if (!this.userAgent) {\n    this.setUserAgent();\n  }\n\n  if (this.landscape) {\n    this.classes += 'landscape ';\n  } else {\n    this.classes += 'portrait ';\n  }\n\n  if (this.touch) {\n    this.classes += 'touch ';\n  }\n  if (this.ios) {\n    if (this.ipad) {\n      this.classes += 'ios ipad tablet ';\n    } else if (this.iphone) {\n      this.classes += 'ios iphone mobile ';\n    } else if (this.ipod) {\n      this.classes += 'ios ipod mobile ';\n    }\n  } else if (this.android) {\n    if (this.androidTablet) {\n      this.classes += 'android tablet ';\n    } else {\n      this.classes += 'android mobile ';\n    }\n  } else if (this.blackberry) {\n    if (this.blackberryTablet) {\n      this.classes += 'blackberry tablet ';\n    } else {\n      this.classes += 'blackberry mobile ';\n    }\n  } else if (this.windows) {\n    if (this.windowsTablet) {\n      this.classes += 'windows tablet ';\n    } else if (this.windowsPhone) {\n      this.classes += 'windows mobile ';\n    } else {\n      this.classes += 'windows desktop ';\n    }\n  } else if (this.fxos) {\n    if (this.fxosTablet) {\n      this.classes += 'fxos tablet ';\n    } else {\n      this.classes += 'fxos mobile ';\n    }\n  } else if (this.meego) {\n    this.classes += 'meego mobile ';\n  } else if (this.nodeWebkit) {\n    this.classes += 'node-webkit ';\n  } else if (this.television) {\n    this.classes += 'television ';\n  } else if (this.desktop) {\n    this.classes += 'desktop ';\n  }\n\n  if (this.cordova) {\n    this.classes += 'cordova ';\n  }\n\n  if (!this.desktop && this.deviceorientation) {\n    this.classes += 'deviceorientation ';\n  }\n  this.classes = this.classes.slice(0, -1);\n  return this.classes;\n};\n\nDevice.prototype.addClasses = function addClasses (targetNode) {\n  if (!this.targetNode) {\n    this.targetNode = targetNode;\n    if (!targetNode && typeof document !== 'undefined') {\n      this.targetNode = document.documentElement;\n    }\n\n    if (!this.targetNode) {\n      // console.warn('addClasses to nothing?');\n      return;\n    }\n\n    if (!this.userAgent) {\n      this.setUserAgent();\n    }\n\n    this.commitClasses();\n\n    this.addListener();\n  }\n};\n\nDevice.prototype.addListener = function addListener () {\n    var this$1 = this;\n\n\n  if (this.hasListener) {\n    return;\n  }\n\n  this.hasListener = true;\n  this.handleOrientation = this.handleOrientation.bind(this);\n  this.onResize = throttle_1(this.handleOrientation, 200);\n\n  var onOrientationChange = function () {\n    setTimeout(function () {\n      this$1.handleOrientation();\n    }, 10);\n  };\n\n  if ('onorientationchange' in window) {\n    window.addEventListener('orientationchange', onOrientationChange, false);\n  } else {\n    window.addEventListener('resize', this.onResize, false);\n  }\n  onOrientationChange();\n};\n\nDevice.prototype.handleOrientation = function handleOrientation () {\n  this.onOrientationChange(this.landscape);\n  if (!this.targetNode){\n    return;\n  }\n  if (this.landscape) {\n    index_2(this.targetNode, 'portrait');\n    index_3(this.targetNode, 'landscape');\n  } else {\n    index_2(this.targetNode, 'landscape');\n    index_3(this.targetNode, 'portrait');\n  }\n};\n\nDevice.prototype.commitClasses = function commitClasses () {\n  if (this.state.addedClasses || !this.targetNode) {\n    return;\n  }\n  this.state.addedClasses = true;\n  this.targetNode.className += this.getClasses();\n};\n\nprototypeAccessors.features.get = function () {\n\n  return {\n    wheelEvent: this.feature('wheelEvent') || this.addFeature('wheelEvent', ('onwheel' in document.createElement('div') ? 'wheel' : // Modern browsers support \"wheel\"\n        document.onmousewheel !== undefined ? 'mousewheel' : // Webkit and IE support at least \"mousewheel\"\n        'DOMMouseScroll')) // let's assume that remaining browsers are older Firefox\n  };\n  // detect available wheel event\n  // support = 'onwheel' in document.createElement('div') ? 'wheel' : // Modern browsers support \"wheel\"\n  // document.onmousewheel !== undefined ? 'mousewheel' : // Webkit and IE support at least \"mousewheel\"\n  // 'DOMMouseScroll'; // let's assume that remaining browsers are older Firefox\n\n};\n\nprototypeAccessors.deviceorientation.get = function () {\n  if (!this.canOrientate) {\n    this.canOrientate =\n      'ondeviceorientation' in window || 'deviceorientation' in window;\n  }\n  return !this.desktop && this.canOrientate;\n};\n\nprototypeAccessors.ie9.get = function (){\n  if (!this.matchCache['ie9']) {\n    if (typeof document !== 'undefined') {\n      this.matchCache['ie9'] = this.windows && isIE(10);\n    }\n  }\n  return this.matchCache['ie9'] || false;\n};\n\nprototypeAccessors.touchDevice.get = function () {\n  if (!this.matchCache['touchDevice']) {\n    if (typeof document !== 'undefined') {\n      this.matchCache['touchDevice'] = !!(navigator && navigator.userAgent) && navigator.userAgent.match(/(iPhone|iPod|iPad|Android|playbook|silk|BlackBerry|BB10|Windows Phone|Tizen|Bada|webOS|IEMobile|Opera Mini)/);\n    }\n  }\n  return this.matchCache['touchDevice'] || false;\n};\n\n\nprototypeAccessors.touch.get = function () {\n  if (!this.matchCache['touch']) {\n    if (typeof document !== 'undefined') {\n      this.matchCache['touch'] = (('ontouchstart' in window) ||( window.DocumentTouch && document instanceof DocumentTouch) || (navigator && navigator.msMaxTouchPoints > 0) || (navigator && navigator.maxTouchPoints));\n    }\n  }\n  return this.matchCache['touch'] || false;\n\n};\n\nprototypeAccessors.ios.get = function () {\n  return this.iphone || this.ipod || this.ipad;\n};\n\nprototypeAccessors.iphone.get = function () {\n  return !this.windows && this.match('iphone');\n};\n\nprototypeAccessors.ipod.get = function () {\n  return this.match('ipod');\n};\n\nprototypeAccessors.ipad.get = function () {\n  return this.match('ipad');\n};\n\nprototypeAccessors.android.get = function () {\n  return !this.windows && this.match('android');\n};\n\nprototypeAccessors.androidPhone.get = function () {\n  return this.android && this.match('mobile');\n};\n\nprototypeAccessors.androidTablet.get = function () {\n  return this.android && !this.match('mobile');\n};\n\nprototypeAccessors.blackberry.get = function () {\n  return this.match('blackberry') || this.match('bb10') || this.match('rim');\n};\n\nprototypeAccessors.blackberryPhone.get = function () {\n  return this.blackberry && !this.match('tablet');\n};\n\nprototypeAccessors.blackberryTablet.get = function () {\n  return this.blackberry && this.match('tablet');\n};\n\nprototypeAccessors.windows.get = function () {\n  return this.match('windows');\n};\n\nprototypeAccessors.ie10.get = function (){\n  if (!this.matchCache['ie10']) {\n    if (typeof document !== 'undefined') {\n      this.matchCache['ie10'] = this.windows && isIE(10);\n    }\n  }\n  return this.matchCache['ie10'] || false;\n};\n\nprototypeAccessors.windowsPhone.get = function () {\n  return this.windows && this.match('phone');\n};\n\nprototypeAccessors.windowsTablet.get = function () {\n  return this.windows && (this.match('touch') && !this.windowsPhone);\n};\n\nprototypeAccessors.fxos.get = function () {\n  return (\n    (this.match('(mobile;') || this.match('(tablet;')) && this.match('; rv:')\n  );\n};\n\nprototypeAccessors.fxosPhone.get = function () {\n  return this.fxos && this.match('mobile');\n};\n\nprototypeAccessors.fxosTablet.get = function () {\n  return this.fxos && this.match('tablet');\n};\n\nprototypeAccessors.meego.get = function () {\n  return this.match('meego');\n};\n\nprototypeAccessors.cordova.get = function () {\n  return window.cordova && location.protocol === 'file:';\n};\n\nprototypeAccessors.nodeWebkit.get = function () {\n  return typeof window.process === 'object';\n};\n\nprototypeAccessors.mobile.get = function () {\n  return (\n    this.androidPhone ||\n    this.iphone ||\n    this.ipod ||\n    this.windowsPhone ||\n    this.blackberryPhone ||\n    this.fxosPhone ||\n    this.meego\n  );\n};\n\nprototypeAccessors.tablet.get = function () {\n  return (\n    this.ipad ||\n    this.androidTablet ||\n    this.blackberryTablet ||\n    this.windowsTablet ||\n    this.fxosTablet\n  );\n};\n\nprototypeAccessors.desktop.get = function () {\n  return !this.tablet && !this.mobile;\n};\n\nprototypeAccessors.television.get = function () {\n    var this$1 = this;\n\n  var i,\n    television = [\n      'googletv',\n      'viera',\n      'smarttv',\n      'internet.tv',\n      'netcast',\n      'nettv',\n      'appletv',\n      'boxee',\n      'kylo',\n      'roku',\n      'dlnadoc',\n      'roku',\n      'pov_tv',\n      'hbbtv',\n      'ce-html'\n    ];\n\n  i = 0;\n  while (i++ < television.length) {\n    if (this$1.match(television[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\nprototypeAccessors.portrait.get = function () {\n  if ('orientation' in window) {\n    return window.orientation === 0;\n  }\n  if (typeof window !== 'undefined') {\n    return window.innerHeight / window.innerWidth > 1;\n  }\n  return false;\n};\n\nprototypeAccessors.landscape.get = function () {\n  if (typeof window !== 'undefined') {\n    if ('orientation' in window) {\n      return window.orientation !== 0;\n    }\n    return window.innerHeight / window.innerWidth < 1;\n  }\n  return false;\n};\n\nObject.defineProperties( Device.prototype, prototypeAccessors );\nObject.defineProperties( Device, staticAccessors );\nvar device = new Device();\n\nexport { device };export default Device;\n//# sourceMappingURL=device.es.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/device.js/dist/device.es.js\n// module id = 7\n// module chunks = 0","/*!\nWaypoints - 4.0.1\nCopyright © 2011-2016 Caleb Troughton\nLicensed under the MIT license.\nhttps://github.com/imakewebthings/waypoints/blob/master/licenses.txt\n*/\n(function() {\n  'use strict'\n\n  var keyCounter = 0\n  var allWaypoints = {}\n\n  /* http://imakewebthings.com/waypoints/api/waypoint */\n  function Waypoint(options) {\n    if (!options) {\n      throw new Error('No options passed to Waypoint constructor')\n    }\n    if (!options.element) {\n      throw new Error('No element option passed to Waypoint constructor')\n    }\n    if (!options.handler) {\n      throw new Error('No handler option passed to Waypoint constructor')\n    }\n\n    this.key = 'waypoint-' + keyCounter\n    this.options = Waypoint.Adapter.extend({}, Waypoint.defaults, options)\n    this.element = this.options.element\n    this.adapter = new Waypoint.Adapter(this.element)\n    this.callback = options.handler\n    this.axis = this.options.horizontal ? 'horizontal' : 'vertical'\n    this.enabled = this.options.enabled\n    this.triggerPoint = null\n    this.group = Waypoint.Group.findOrCreate({\n      name: this.options.group,\n      axis: this.axis\n    })\n    this.context = Waypoint.Context.findOrCreateByElement(this.options.context)\n\n    if (Waypoint.offsetAliases[this.options.offset]) {\n      this.options.offset = Waypoint.offsetAliases[this.options.offset]\n    }\n    this.group.add(this)\n    this.context.add(this)\n    allWaypoints[this.key] = this\n    keyCounter += 1\n  }\n\n  /* Private */\n  Waypoint.prototype.queueTrigger = function(direction) {\n    this.group.queueTrigger(this, direction)\n  }\n\n  /* Private */\n  Waypoint.prototype.trigger = function(args) {\n    if (!this.enabled) {\n      return\n    }\n    if (this.callback) {\n      this.callback.apply(this, args)\n    }\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/destroy */\n  Waypoint.prototype.destroy = function() {\n    this.context.remove(this)\n    this.group.remove(this)\n    delete allWaypoints[this.key]\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/disable */\n  Waypoint.prototype.disable = function() {\n    this.enabled = false\n    return this\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/enable */\n  Waypoint.prototype.enable = function() {\n    this.context.refresh()\n    this.enabled = true\n    return this\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/next */\n  Waypoint.prototype.next = function() {\n    return this.group.next(this)\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/previous */\n  Waypoint.prototype.previous = function() {\n    return this.group.previous(this)\n  }\n\n  /* Private */\n  Waypoint.invokeAll = function(method) {\n    var allWaypointsArray = []\n    for (var waypointKey in allWaypoints) {\n      allWaypointsArray.push(allWaypoints[waypointKey])\n    }\n    for (var i = 0, end = allWaypointsArray.length; i < end; i++) {\n      allWaypointsArray[i][method]()\n    }\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/destroy-all */\n  Waypoint.destroyAll = function() {\n    Waypoint.invokeAll('destroy')\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/disable-all */\n  Waypoint.disableAll = function() {\n    Waypoint.invokeAll('disable')\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/enable-all */\n  Waypoint.enableAll = function() {\n    Waypoint.Context.refreshAll()\n    for (var waypointKey in allWaypoints) {\n      allWaypoints[waypointKey].enabled = true\n    }\n    return this\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/refresh-all */\n  Waypoint.refreshAll = function() {\n    Waypoint.Context.refreshAll()\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/viewport-height */\n  Waypoint.viewportHeight = function() {\n    return window.innerHeight || document.documentElement.clientHeight\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/viewport-width */\n  Waypoint.viewportWidth = function() {\n    return document.documentElement.clientWidth\n  }\n\n  Waypoint.adapters = []\n\n  Waypoint.defaults = {\n    context: window,\n    continuous: true,\n    enabled: true,\n    group: 'default',\n    horizontal: false,\n    offset: 0\n  }\n\n  Waypoint.offsetAliases = {\n    'bottom-in-view': function() {\n      return this.context.innerHeight() - this.adapter.outerHeight()\n    },\n    'right-in-view': function() {\n      return this.context.innerWidth() - this.adapter.outerWidth()\n    }\n  }\n\n  window.Waypoint = Waypoint\n}())\n;(function() {\n  'use strict'\n\n  function requestAnimationFrameShim(callback) {\n    window.setTimeout(callback, 1000 / 60)\n  }\n\n  var keyCounter = 0\n  var contexts = {}\n  var Waypoint = window.Waypoint\n  var oldWindowLoad = window.onload\n\n  /* http://imakewebthings.com/waypoints/api/context */\n  function Context(element) {\n    this.element = element\n    this.Adapter = Waypoint.Adapter\n    this.adapter = new this.Adapter(element)\n    this.key = 'waypoint-context-' + keyCounter\n    this.didScroll = false\n    this.didResize = false\n    this.oldScroll = {\n      x: this.adapter.scrollLeft(),\n      y: this.adapter.scrollTop()\n    }\n    this.waypoints = {\n      vertical: {},\n      horizontal: {}\n    }\n\n    element.waypointContextKey = this.key\n    contexts[element.waypointContextKey] = this\n    keyCounter += 1\n    if (!Waypoint.windowContext) {\n      Waypoint.windowContext = true\n      Waypoint.windowContext = new Context(window)\n    }\n\n    this.createThrottledScrollHandler()\n    this.createThrottledResizeHandler()\n  }\n\n  /* Private */\n  Context.prototype.add = function(waypoint) {\n    var axis = waypoint.options.horizontal ? 'horizontal' : 'vertical'\n    this.waypoints[axis][waypoint.key] = waypoint\n    this.refresh()\n  }\n\n  /* Private */\n  Context.prototype.checkEmpty = function() {\n    var horizontalEmpty = this.Adapter.isEmptyObject(this.waypoints.horizontal)\n    var verticalEmpty = this.Adapter.isEmptyObject(this.waypoints.vertical)\n    var isWindow = this.element == this.element.window\n    if (horizontalEmpty && verticalEmpty && !isWindow) {\n      this.adapter.off('.waypoints')\n      delete contexts[this.key]\n    }\n  }\n\n  /* Private */\n  Context.prototype.createThrottledResizeHandler = function() {\n    var self = this\n\n    function resizeHandler() {\n      self.handleResize()\n      self.didResize = false\n    }\n\n    this.adapter.on('resize.waypoints', function() {\n      if (!self.didResize) {\n        self.didResize = true\n        Waypoint.requestAnimationFrame(resizeHandler)\n      }\n    })\n  }\n\n  /* Private */\n  Context.prototype.createThrottledScrollHandler = function() {\n    var self = this\n    function scrollHandler() {\n      self.handleScroll()\n      self.didScroll = false\n    }\n\n    this.adapter.on('scroll.waypoints', function() {\n      if (!self.didScroll || Waypoint.isTouch) {\n        self.didScroll = true\n        Waypoint.requestAnimationFrame(scrollHandler)\n      }\n    })\n  }\n\n  /* Private */\n  Context.prototype.handleResize = function() {\n    Waypoint.Context.refreshAll()\n  }\n\n  /* Private */\n  Context.prototype.handleScroll = function() {\n    var triggeredGroups = {}\n    var axes = {\n      horizontal: {\n        newScroll: this.adapter.scrollLeft(),\n        oldScroll: this.oldScroll.x,\n        forward: 'right',\n        backward: 'left'\n      },\n      vertical: {\n        newScroll: this.adapter.scrollTop(),\n        oldScroll: this.oldScroll.y,\n        forward: 'down',\n        backward: 'up'\n      }\n    }\n\n    for (var axisKey in axes) {\n      var axis = axes[axisKey]\n      var isForward = axis.newScroll > axis.oldScroll\n      var direction = isForward ? axis.forward : axis.backward\n\n      for (var waypointKey in this.waypoints[axisKey]) {\n        var waypoint = this.waypoints[axisKey][waypointKey]\n        if (waypoint.triggerPoint === null) {\n          continue\n        }\n        var wasBeforeTriggerPoint = axis.oldScroll < waypoint.triggerPoint\n        var nowAfterTriggerPoint = axis.newScroll >= waypoint.triggerPoint\n        var crossedForward = wasBeforeTriggerPoint && nowAfterTriggerPoint\n        var crossedBackward = !wasBeforeTriggerPoint && !nowAfterTriggerPoint\n        if (crossedForward || crossedBackward) {\n          waypoint.queueTrigger(direction)\n          triggeredGroups[waypoint.group.id] = waypoint.group\n        }\n      }\n    }\n\n    for (var groupKey in triggeredGroups) {\n      triggeredGroups[groupKey].flushTriggers()\n    }\n\n    this.oldScroll = {\n      x: axes.horizontal.newScroll,\n      y: axes.vertical.newScroll\n    }\n  }\n\n  /* Private */\n  Context.prototype.innerHeight = function() {\n    /*eslint-disable eqeqeq */\n    if (this.element == this.element.window) {\n      return Waypoint.viewportHeight()\n    }\n    /*eslint-enable eqeqeq */\n    return this.adapter.innerHeight()\n  }\n\n  /* Private */\n  Context.prototype.remove = function(waypoint) {\n    delete this.waypoints[waypoint.axis][waypoint.key]\n    this.checkEmpty()\n  }\n\n  /* Private */\n  Context.prototype.innerWidth = function() {\n    /*eslint-disable eqeqeq */\n    if (this.element == this.element.window) {\n      return Waypoint.viewportWidth()\n    }\n    /*eslint-enable eqeqeq */\n    return this.adapter.innerWidth()\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/context-destroy */\n  Context.prototype.destroy = function() {\n    var allWaypoints = []\n    for (var axis in this.waypoints) {\n      for (var waypointKey in this.waypoints[axis]) {\n        allWaypoints.push(this.waypoints[axis][waypointKey])\n      }\n    }\n    for (var i = 0, end = allWaypoints.length; i < end; i++) {\n      allWaypoints[i].destroy()\n    }\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/context-refresh */\n  Context.prototype.refresh = function() {\n    /*eslint-disable eqeqeq */\n    var isWindow = this.element == this.element.window\n    /*eslint-enable eqeqeq */\n    var contextOffset = isWindow ? undefined : this.adapter.offset()\n    var triggeredGroups = {}\n    var axes\n\n    this.handleScroll()\n    axes = {\n      horizontal: {\n        contextOffset: isWindow ? 0 : contextOffset.left,\n        contextScroll: isWindow ? 0 : this.oldScroll.x,\n        contextDimension: this.innerWidth(),\n        oldScroll: this.oldScroll.x,\n        forward: 'right',\n        backward: 'left',\n        offsetProp: 'left'\n      },\n      vertical: {\n        contextOffset: isWindow ? 0 : contextOffset.top,\n        contextScroll: isWindow ? 0 : this.oldScroll.y,\n        contextDimension: this.innerHeight(),\n        oldScroll: this.oldScroll.y,\n        forward: 'down',\n        backward: 'up',\n        offsetProp: 'top'\n      }\n    }\n\n    for (var axisKey in axes) {\n      var axis = axes[axisKey]\n      for (var waypointKey in this.waypoints[axisKey]) {\n        var waypoint = this.waypoints[axisKey][waypointKey]\n        var adjustment = waypoint.options.offset\n        var oldTriggerPoint = waypoint.triggerPoint\n        var elementOffset = 0\n        var freshWaypoint = oldTriggerPoint == null\n        var contextModifier, wasBeforeScroll, nowAfterScroll\n        var triggeredBackward, triggeredForward\n\n        if (waypoint.element !== waypoint.element.window) {\n          elementOffset = waypoint.adapter.offset()[axis.offsetProp]\n        }\n\n        if (typeof adjustment === 'function') {\n          adjustment = adjustment.apply(waypoint)\n        }\n        else if (typeof adjustment === 'string') {\n          adjustment = parseFloat(adjustment)\n          if (waypoint.options.offset.indexOf('%') > - 1) {\n            adjustment = Math.ceil(axis.contextDimension * adjustment / 100)\n          }\n        }\n\n        contextModifier = axis.contextScroll - axis.contextOffset\n        waypoint.triggerPoint = Math.floor(elementOffset + contextModifier - adjustment)\n        wasBeforeScroll = oldTriggerPoint < axis.oldScroll\n        nowAfterScroll = waypoint.triggerPoint >= axis.oldScroll\n        triggeredBackward = wasBeforeScroll && nowAfterScroll\n        triggeredForward = !wasBeforeScroll && !nowAfterScroll\n\n        if (!freshWaypoint && triggeredBackward) {\n          waypoint.queueTrigger(axis.backward)\n          triggeredGroups[waypoint.group.id] = waypoint.group\n        }\n        else if (!freshWaypoint && triggeredForward) {\n          waypoint.queueTrigger(axis.forward)\n          triggeredGroups[waypoint.group.id] = waypoint.group\n        }\n        else if (freshWaypoint && axis.oldScroll >= waypoint.triggerPoint) {\n          waypoint.queueTrigger(axis.forward)\n          triggeredGroups[waypoint.group.id] = waypoint.group\n        }\n      }\n    }\n\n    Waypoint.requestAnimationFrame(function() {\n      for (var groupKey in triggeredGroups) {\n        triggeredGroups[groupKey].flushTriggers()\n      }\n    })\n\n    return this\n  }\n\n  /* Private */\n  Context.findOrCreateByElement = function(element) {\n    return Context.findByElement(element) || new Context(element)\n  }\n\n  /* Private */\n  Context.refreshAll = function() {\n    for (var contextId in contexts) {\n      contexts[contextId].refresh()\n    }\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/context-find-by-element */\n  Context.findByElement = function(element) {\n    return contexts[element.waypointContextKey]\n  }\n\n  window.onload = function() {\n    if (oldWindowLoad) {\n      oldWindowLoad()\n    }\n    Context.refreshAll()\n  }\n\n\n  Waypoint.requestAnimationFrame = function(callback) {\n    var requestFn = window.requestAnimationFrame ||\n      window.mozRequestAnimationFrame ||\n      window.webkitRequestAnimationFrame ||\n      requestAnimationFrameShim\n    requestFn.call(window, callback)\n  }\n  Waypoint.Context = Context\n}())\n;(function() {\n  'use strict'\n\n  function byTriggerPoint(a, b) {\n    return a.triggerPoint - b.triggerPoint\n  }\n\n  function byReverseTriggerPoint(a, b) {\n    return b.triggerPoint - a.triggerPoint\n  }\n\n  var groups = {\n    vertical: {},\n    horizontal: {}\n  }\n  var Waypoint = window.Waypoint\n\n  /* http://imakewebthings.com/waypoints/api/group */\n  function Group(options) {\n    this.name = options.name\n    this.axis = options.axis\n    this.id = this.name + '-' + this.axis\n    this.waypoints = []\n    this.clearTriggerQueues()\n    groups[this.axis][this.name] = this\n  }\n\n  /* Private */\n  Group.prototype.add = function(waypoint) {\n    this.waypoints.push(waypoint)\n  }\n\n  /* Private */\n  Group.prototype.clearTriggerQueues = function() {\n    this.triggerQueues = {\n      up: [],\n      down: [],\n      left: [],\n      right: []\n    }\n  }\n\n  /* Private */\n  Group.prototype.flushTriggers = function() {\n    for (var direction in this.triggerQueues) {\n      var waypoints = this.triggerQueues[direction]\n      var reverse = direction === 'up' || direction === 'left'\n      waypoints.sort(reverse ? byReverseTriggerPoint : byTriggerPoint)\n      for (var i = 0, end = waypoints.length; i < end; i += 1) {\n        var waypoint = waypoints[i]\n        if (waypoint.options.continuous || i === waypoints.length - 1) {\n          waypoint.trigger([direction])\n        }\n      }\n    }\n    this.clearTriggerQueues()\n  }\n\n  /* Private */\n  Group.prototype.next = function(waypoint) {\n    this.waypoints.sort(byTriggerPoint)\n    var index = Waypoint.Adapter.inArray(waypoint, this.waypoints)\n    var isLast = index === this.waypoints.length - 1\n    return isLast ? null : this.waypoints[index + 1]\n  }\n\n  /* Private */\n  Group.prototype.previous = function(waypoint) {\n    this.waypoints.sort(byTriggerPoint)\n    var index = Waypoint.Adapter.inArray(waypoint, this.waypoints)\n    return index ? this.waypoints[index - 1] : null\n  }\n\n  /* Private */\n  Group.prototype.queueTrigger = function(waypoint, direction) {\n    this.triggerQueues[direction].push(waypoint)\n  }\n\n  /* Private */\n  Group.prototype.remove = function(waypoint) {\n    var index = Waypoint.Adapter.inArray(waypoint, this.waypoints)\n    if (index > -1) {\n      this.waypoints.splice(index, 1)\n    }\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/first */\n  Group.prototype.first = function() {\n    return this.waypoints[0]\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/last */\n  Group.prototype.last = function() {\n    return this.waypoints[this.waypoints.length - 1]\n  }\n\n  /* Private */\n  Group.findOrCreate = function(options) {\n    return groups[options.axis][options.name] || new Group(options)\n  }\n\n  Waypoint.Group = Group\n}())\n;(function() {\n  'use strict'\n\n  var Waypoint = window.Waypoint\n\n  function isWindow(element) {\n    return element === element.window\n  }\n\n  function getWindow(element) {\n    if (isWindow(element)) {\n      return element\n    }\n    return element.defaultView\n  }\n\n  function NoFrameworkAdapter(element) {\n    this.element = element\n    this.handlers = {}\n  }\n\n  NoFrameworkAdapter.prototype.innerHeight = function() {\n    var isWin = isWindow(this.element)\n    return isWin ? this.element.innerHeight : this.element.clientHeight\n  }\n\n  NoFrameworkAdapter.prototype.innerWidth = function() {\n    var isWin = isWindow(this.element)\n    return isWin ? this.element.innerWidth : this.element.clientWidth\n  }\n\n  NoFrameworkAdapter.prototype.off = function(event, handler) {\n    function removeListeners(element, listeners, handler) {\n      for (var i = 0, end = listeners.length - 1; i < end; i++) {\n        var listener = listeners[i]\n        if (!handler || handler === listener) {\n          element.removeEventListener(listener)\n        }\n      }\n    }\n\n    var eventParts = event.split('.')\n    var eventType = eventParts[0]\n    var namespace = eventParts[1]\n    var element = this.element\n\n    if (namespace && this.handlers[namespace] && eventType) {\n      removeListeners(element, this.handlers[namespace][eventType], handler)\n      this.handlers[namespace][eventType] = []\n    }\n    else if (eventType) {\n      for (var ns in this.handlers) {\n        removeListeners(element, this.handlers[ns][eventType] || [], handler)\n        this.handlers[ns][eventType] = []\n      }\n    }\n    else if (namespace && this.handlers[namespace]) {\n      for (var type in this.handlers[namespace]) {\n        removeListeners(element, this.handlers[namespace][type], handler)\n      }\n      this.handlers[namespace] = {}\n    }\n  }\n\n  /* Adapted from jQuery 1.x offset() */\n  NoFrameworkAdapter.prototype.offset = function() {\n    if (!this.element.ownerDocument) {\n      return null\n    }\n\n    var documentElement = this.element.ownerDocument.documentElement\n    var win = getWindow(this.element.ownerDocument)\n    var rect = {\n      top: 0,\n      left: 0\n    }\n\n    if (this.element.getBoundingClientRect) {\n      rect = this.element.getBoundingClientRect()\n    }\n\n    return {\n      top: rect.top + win.pageYOffset - documentElement.clientTop,\n      left: rect.left + win.pageXOffset - documentElement.clientLeft\n    }\n  }\n\n  NoFrameworkAdapter.prototype.on = function(event, handler) {\n    var eventParts = event.split('.')\n    var eventType = eventParts[0]\n    var namespace = eventParts[1] || '__default'\n    var nsHandlers = this.handlers[namespace] = this.handlers[namespace] || {}\n    var nsTypeList = nsHandlers[eventType] = nsHandlers[eventType] || []\n\n    nsTypeList.push(handler)\n    this.element.addEventListener(eventType, handler)\n  }\n\n  NoFrameworkAdapter.prototype.outerHeight = function(includeMargin) {\n    var height = this.innerHeight()\n    var computedStyle\n\n    if (includeMargin && !isWindow(this.element)) {\n      computedStyle = window.getComputedStyle(this.element)\n      height += parseInt(computedStyle.marginTop, 10)\n      height += parseInt(computedStyle.marginBottom, 10)\n    }\n\n    return height\n  }\n\n  NoFrameworkAdapter.prototype.outerWidth = function(includeMargin) {\n    var width = this.innerWidth()\n    var computedStyle\n\n    if (includeMargin && !isWindow(this.element)) {\n      computedStyle = window.getComputedStyle(this.element)\n      width += parseInt(computedStyle.marginLeft, 10)\n      width += parseInt(computedStyle.marginRight, 10)\n    }\n\n    return width\n  }\n\n  NoFrameworkAdapter.prototype.scrollLeft = function() {\n    var win = getWindow(this.element)\n    return win ? win.pageXOffset : this.element.scrollLeft\n  }\n\n  NoFrameworkAdapter.prototype.scrollTop = function() {\n    var win = getWindow(this.element)\n    return win ? win.pageYOffset : this.element.scrollTop\n  }\n\n  NoFrameworkAdapter.extend = function() {\n    var args = Array.prototype.slice.call(arguments)\n\n    function merge(target, obj) {\n      if (typeof target === 'object' && typeof obj === 'object') {\n        for (var key in obj) {\n          if (obj.hasOwnProperty(key)) {\n            target[key] = obj[key]\n          }\n        }\n      }\n\n      return target\n    }\n\n    for (var i = 1, end = args.length; i < end; i++) {\n      merge(args[0], args[i])\n    }\n    return args[0]\n  }\n\n  NoFrameworkAdapter.inArray = function(element, array, i) {\n    return array == null ? -1 : array.indexOf(element, i)\n  }\n\n  NoFrameworkAdapter.isEmptyObject = function(obj) {\n    /* eslint no-unused-vars: 0 */\n    for (var name in obj) {\n      return false\n    }\n    return true\n  }\n\n  Waypoint.adapters.push({\n    name: 'noframework',\n    Adapter: NoFrameworkAdapter\n  })\n  Waypoint.Adapter = NoFrameworkAdapter\n}())\n;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/waypoints/lib/noframework.waypoints.js\n// module id = 8\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 9\n// module chunks = 0"],"sourceRoot":""}